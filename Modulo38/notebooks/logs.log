2024-05-09 01:43:21,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 01:43:21,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 01:43:21,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 01:43:21,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 01:43:23,050:INFO:PyCaret ClassificationExperiment
2024-05-09 01:43:23,050:INFO:Logging name: clf-default-name
2024-05-09 01:43:23,051:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-09 01:43:23,051:INFO:version 3.3.2
2024-05-09 01:43:23,051:INFO:Initializing setup()
2024-05-09 01:43:23,051:INFO:self.USI: 3708
2024-05-09 01:43:23,051:INFO:self._variable_keys: {'USI', 'seed', 'gpu_param', 'memory', 'gpu_n_jobs_param', 'X', 'fold_generator', 'logging_param', 'y', 'idx', 'is_multiclass', 'X_train', 'exp_id', 'pipeline', 'fix_imbalance', '_ml_usecase', 'fold_groups_param', 'log_plots_param', 'exp_name_log', 'X_test', 'y_test', 'y_train', 'n_jobs_param', 'target_param', 'data', 'html_param', 'fold_shuffle_param', '_available_plots'}
2024-05-09 01:43:23,051:INFO:Checking environment
2024-05-09 01:43:23,051:INFO:python_version: 3.11.9
2024-05-09 01:43:23,051:INFO:python_build: ('main', 'Apr 19 2024 16:40:41')
2024-05-09 01:43:23,051:INFO:machine: AMD64
2024-05-09 01:43:23,051:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 01:43:23,053:INFO:Memory: svmem(total=17111994368, available=6971625472, percent=59.3, used=10140368896, free=6971625472)
2024-05-09 01:43:23,053:INFO:Physical Core: 6
2024-05-09 01:43:23,053:INFO:Logical Core: 6
2024-05-09 01:43:23,053:INFO:Checking libraries
2024-05-09 01:43:23,053:INFO:System:
2024-05-09 01:43:23,053:INFO:    python: 3.11.9 | packaged by Anaconda, Inc. | (main, Apr 19 2024, 16:40:41) [MSC v.1916 64 bit (AMD64)]
2024-05-09 01:43:23,054:INFO:executable: c:\Users\Eduardo\Documents\.conda\python.exe
2024-05-09 01:43:23,054:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 01:43:23,054:INFO:PyCaret required dependencies:
2024-05-09 01:43:23,102:INFO:                 pip: 24.0
2024-05-09 01:43:23,102:INFO:          setuptools: 69.5.1
2024-05-09 01:43:23,102:INFO:             pycaret: 3.3.2
2024-05-09 01:43:23,102:INFO:             IPython: 8.22.2
2024-05-09 01:43:23,102:INFO:          ipywidgets: 8.1.2
2024-05-09 01:43:23,102:INFO:                tqdm: 4.66.4
2024-05-09 01:43:23,102:INFO:               numpy: 1.26.4
2024-05-09 01:43:23,102:INFO:              pandas: 2.1.4
2024-05-09 01:43:23,102:INFO:              jinja2: 3.1.4
2024-05-09 01:43:23,102:INFO:               scipy: 1.11.4
2024-05-09 01:43:23,102:INFO:              joblib: 1.3.2
2024-05-09 01:43:23,102:INFO:             sklearn: 1.4.2
2024-05-09 01:43:23,102:INFO:                pyod: 1.1.3
2024-05-09 01:43:23,102:INFO:            imblearn: 0.12.2
2024-05-09 01:43:23,102:INFO:   category_encoders: 2.6.3
2024-05-09 01:43:23,102:INFO:            lightgbm: 4.3.0
2024-05-09 01:43:23,102:INFO:               numba: 0.59.1
2024-05-09 01:43:23,102:INFO:            requests: 2.31.0
2024-05-09 01:43:23,102:INFO:          matplotlib: 3.7.5
2024-05-09 01:43:23,102:INFO:          scikitplot: 0.3.7
2024-05-09 01:43:23,102:INFO:         yellowbrick: 1.5
2024-05-09 01:43:23,103:INFO:              plotly: 5.22.0
2024-05-09 01:43:23,103:INFO:    plotly-resampler: Not installed
2024-05-09 01:43:23,103:INFO:             kaleido: 0.2.1
2024-05-09 01:43:23,103:INFO:           schemdraw: 0.15
2024-05-09 01:43:23,103:INFO:         statsmodels: 0.14.2
2024-05-09 01:43:23,103:INFO:              sktime: 0.26.0
2024-05-09 01:43:23,103:INFO:               tbats: 1.1.3
2024-05-09 01:43:23,103:INFO:            pmdarima: 2.0.4
2024-05-09 01:43:23,103:INFO:              psutil: 5.9.8
2024-05-09 01:43:23,103:INFO:          markupsafe: 2.1.5
2024-05-09 01:43:23,103:INFO:             pickle5: Not installed
2024-05-09 01:43:23,103:INFO:         cloudpickle: 3.0.0
2024-05-09 01:43:23,103:INFO:         deprecation: 2.1.0
2024-05-09 01:43:23,103:INFO:              xxhash: 3.4.1
2024-05-09 01:43:23,103:INFO:           wurlitzer: Not installed
2024-05-09 01:43:23,103:INFO:PyCaret optional dependencies:
2024-05-09 01:43:23,115:INFO:                shap: Not installed
2024-05-09 01:43:23,115:INFO:           interpret: Not installed
2024-05-09 01:43:23,116:INFO:                umap: Not installed
2024-05-09 01:43:23,116:INFO:     ydata_profiling: Not installed
2024-05-09 01:43:23,116:INFO:  explainerdashboard: Not installed
2024-05-09 01:43:23,116:INFO:             autoviz: Not installed
2024-05-09 01:43:23,116:INFO:           fairlearn: Not installed
2024-05-09 01:43:23,116:INFO:          deepchecks: Not installed
2024-05-09 01:43:23,116:INFO:             xgboost: Not installed
2024-05-09 01:43:23,116:INFO:            catboost: Not installed
2024-05-09 01:43:23,116:INFO:              kmodes: Not installed
2024-05-09 01:43:23,116:INFO:             mlxtend: Not installed
2024-05-09 01:43:23,116:INFO:       statsforecast: Not installed
2024-05-09 01:43:23,116:INFO:        tune_sklearn: Not installed
2024-05-09 01:43:23,116:INFO:                 ray: Not installed
2024-05-09 01:43:23,116:INFO:            hyperopt: Not installed
2024-05-09 01:43:23,116:INFO:              optuna: Not installed
2024-05-09 01:43:23,116:INFO:               skopt: Not installed
2024-05-09 01:43:23,116:INFO:              mlflow: Not installed
2024-05-09 01:43:23,116:INFO:              gradio: Not installed
2024-05-09 01:43:23,116:INFO:             fastapi: Not installed
2024-05-09 01:43:23,116:INFO:             uvicorn: Not installed
2024-05-09 01:43:23,116:INFO:              m2cgen: Not installed
2024-05-09 01:43:23,116:INFO:           evidently: Not installed
2024-05-09 01:43:23,116:INFO:               fugue: Not installed
2024-05-09 01:43:23,116:INFO:           streamlit: Not installed
2024-05-09 01:43:23,116:INFO:             prophet: Not installed
2024-05-09 01:43:23,116:INFO:None
2024-05-09 01:43:23,116:INFO:Set up data.
2024-05-09 01:43:23,130:INFO:Set up folding strategy.
2024-05-09 01:43:23,130:INFO:Set up train/test split.
2024-05-09 01:43:23,148:INFO:Set up index.
2024-05-09 01:43:23,149:INFO:Assigning column types.
2024-05-09 01:43:23,164:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 01:43:23,206:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 01:43:23,209:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 01:43:23,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,288:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 01:43:23,288:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 01:43:23,316:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,317:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 01:43:23,361:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 01:43:23,388:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,435:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 01:43:23,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,463:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-09 01:43:23,532:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,605:INFO:Preparing preprocessing pipeline...
2024-05-09 01:43:23,606:INFO:Set up simple imputation.
2024-05-09 01:43:23,649:INFO:Finished creating preprocessing pipeline.
2024-05-09 01:43:23,653:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Eduardo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-05-09 01:43:23,653:INFO:Creating final display dataframe.
2024-05-09 01:43:23,787:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           default
2                   Target type            Binary
3           Original data shape       (22800, 24)
4        Transformed data shape       (22800, 24)
5   Transformed train set shape       (15959, 24)
6    Transformed test set shape        (6841, 24)
7              Numeric features                23
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              3708
2024-05-09 01:43:23,914:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,983:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:23,984:INFO:setup() successfully completed in 0.94s...............
2024-05-09 01:43:23,990:INFO:Initializing compare_models()
2024-05-09 01:43:23,991:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, include=None, exclude=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-09 01:43:23,991:INFO:Checking exceptions
2024-05-09 01:43:24,003:INFO:Preparing display monitor
2024-05-09 01:43:24,054:INFO:Initializing Logistic Regression
2024-05-09 01:43:24,054:INFO:Total runtime is 0.0 minutes
2024-05-09 01:43:24,057:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:24,058:INFO:Initializing create_model()
2024-05-09 01:43:24,058:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:24,058:INFO:Checking exceptions
2024-05-09 01:43:24,058:INFO:Importing libraries
2024-05-09 01:43:24,058:INFO:Copying training dataset
2024-05-09 01:43:24,077:INFO:Defining folds
2024-05-09 01:43:24,077:INFO:Declaring metric variables
2024-05-09 01:43:24,080:INFO:Importing untrained model
2024-05-09 01:43:24,082:INFO:Logistic Regression Imported successfully
2024-05-09 01:43:24,089:INFO:Starting cross validation
2024-05-09 01:43:24,090:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:28,541:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 01:43:28,547:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 01:43:28,564:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 01:43:28,604:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 01:43:28,613:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 01:43:28,647:INFO:Calculating mean and std
2024-05-09 01:43:28,648:INFO:Creating metrics dataframe
2024-05-09 01:43:28,650:INFO:Uploading results into container
2024-05-09 01:43:28,651:INFO:Uploading model into container now
2024-05-09 01:43:28,651:INFO:_master_model_container: 1
2024-05-09 01:43:28,651:INFO:_display_container: 2
2024-05-09 01:43:28,652:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-09 01:43:28,652:INFO:create_model() successfully completed......................................
2024-05-09 01:43:28,720:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:28,720:INFO:Creating metrics dataframe
2024-05-09 01:43:28,726:INFO:Initializing K Neighbors Classifier
2024-05-09 01:43:28,726:INFO:Total runtime is 0.07786496480305989 minutes
2024-05-09 01:43:28,729:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:28,729:INFO:Initializing create_model()
2024-05-09 01:43:28,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:28,729:INFO:Checking exceptions
2024-05-09 01:43:28,729:INFO:Importing libraries
2024-05-09 01:43:28,729:INFO:Copying training dataset
2024-05-09 01:43:28,747:INFO:Defining folds
2024-05-09 01:43:28,747:INFO:Declaring metric variables
2024-05-09 01:43:28,751:INFO:Importing untrained model
2024-05-09 01:43:28,755:INFO:K Neighbors Classifier Imported successfully
2024-05-09 01:43:28,764:INFO:Starting cross validation
2024-05-09 01:43:28,766:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:31,354:INFO:Calculating mean and std
2024-05-09 01:43:31,354:INFO:Creating metrics dataframe
2024-05-09 01:43:31,357:INFO:Uploading results into container
2024-05-09 01:43:31,357:INFO:Uploading model into container now
2024-05-09 01:43:31,358:INFO:_master_model_container: 2
2024-05-09 01:43:31,358:INFO:_display_container: 2
2024-05-09 01:43:31,358:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 01:43:31,358:INFO:create_model() successfully completed......................................
2024-05-09 01:43:31,418:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:31,418:INFO:Creating metrics dataframe
2024-05-09 01:43:31,424:INFO:Initializing Naive Bayes
2024-05-09 01:43:31,424:INFO:Total runtime is 0.12282621065775554 minutes
2024-05-09 01:43:31,429:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:31,429:INFO:Initializing create_model()
2024-05-09 01:43:31,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:31,429:INFO:Checking exceptions
2024-05-09 01:43:31,430:INFO:Importing libraries
2024-05-09 01:43:31,430:INFO:Copying training dataset
2024-05-09 01:43:31,446:INFO:Defining folds
2024-05-09 01:43:31,446:INFO:Declaring metric variables
2024-05-09 01:43:31,450:INFO:Importing untrained model
2024-05-09 01:43:31,454:INFO:Naive Bayes Imported successfully
2024-05-09 01:43:31,461:INFO:Starting cross validation
2024-05-09 01:43:31,462:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:31,562:INFO:Calculating mean and std
2024-05-09 01:43:31,563:INFO:Creating metrics dataframe
2024-05-09 01:43:31,564:INFO:Uploading results into container
2024-05-09 01:43:31,564:INFO:Uploading model into container now
2024-05-09 01:43:31,565:INFO:_master_model_container: 3
2024-05-09 01:43:31,565:INFO:_display_container: 2
2024-05-09 01:43:31,565:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-09 01:43:31,565:INFO:create_model() successfully completed......................................
2024-05-09 01:43:31,626:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:31,626:INFO:Creating metrics dataframe
2024-05-09 01:43:31,635:INFO:Initializing Decision Tree Classifier
2024-05-09 01:43:31,635:INFO:Total runtime is 0.12633498112360636 minutes
2024-05-09 01:43:31,637:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:31,638:INFO:Initializing create_model()
2024-05-09 01:43:31,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:31,638:INFO:Checking exceptions
2024-05-09 01:43:31,638:INFO:Importing libraries
2024-05-09 01:43:31,638:INFO:Copying training dataset
2024-05-09 01:43:31,657:INFO:Defining folds
2024-05-09 01:43:31,657:INFO:Declaring metric variables
2024-05-09 01:43:31,660:INFO:Importing untrained model
2024-05-09 01:43:31,664:INFO:Decision Tree Classifier Imported successfully
2024-05-09 01:43:31,673:INFO:Starting cross validation
2024-05-09 01:43:31,674:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:32,065:INFO:Calculating mean and std
2024-05-09 01:43:32,065:INFO:Creating metrics dataframe
2024-05-09 01:43:32,067:INFO:Uploading results into container
2024-05-09 01:43:32,067:INFO:Uploading model into container now
2024-05-09 01:43:32,068:INFO:_master_model_container: 4
2024-05-09 01:43:32,068:INFO:_display_container: 2
2024-05-09 01:43:32,068:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 01:43:32,068:INFO:create_model() successfully completed......................................
2024-05-09 01:43:32,129:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:32,129:INFO:Creating metrics dataframe
2024-05-09 01:43:32,134:INFO:Initializing SVM - Linear Kernel
2024-05-09 01:43:32,134:INFO:Total runtime is 0.13466516335805256 minutes
2024-05-09 01:43:32,139:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:32,139:INFO:Initializing create_model()
2024-05-09 01:43:32,139:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:32,139:INFO:Checking exceptions
2024-05-09 01:43:32,140:INFO:Importing libraries
2024-05-09 01:43:32,140:INFO:Copying training dataset
2024-05-09 01:43:32,157:INFO:Defining folds
2024-05-09 01:43:32,157:INFO:Declaring metric variables
2024-05-09 01:43:32,162:INFO:Importing untrained model
2024-05-09 01:43:32,166:INFO:SVM - Linear Kernel Imported successfully
2024-05-09 01:43:32,174:INFO:Starting cross validation
2024-05-09 01:43:32,176:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:32,504:INFO:Calculating mean and std
2024-05-09 01:43:32,504:INFO:Creating metrics dataframe
2024-05-09 01:43:32,507:INFO:Uploading results into container
2024-05-09 01:43:32,507:INFO:Uploading model into container now
2024-05-09 01:43:32,507:INFO:_master_model_container: 5
2024-05-09 01:43:32,508:INFO:_display_container: 2
2024-05-09 01:43:32,509:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-09 01:43:32,509:INFO:create_model() successfully completed......................................
2024-05-09 01:43:32,578:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:32,579:INFO:Creating metrics dataframe
2024-05-09 01:43:32,587:INFO:Initializing Ridge Classifier
2024-05-09 01:43:32,587:INFO:Total runtime is 0.14220091104507446 minutes
2024-05-09 01:43:32,590:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:32,591:INFO:Initializing create_model()
2024-05-09 01:43:32,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:32,591:INFO:Checking exceptions
2024-05-09 01:43:32,591:INFO:Importing libraries
2024-05-09 01:43:32,591:INFO:Copying training dataset
2024-05-09 01:43:32,611:INFO:Defining folds
2024-05-09 01:43:32,611:INFO:Declaring metric variables
2024-05-09 01:43:32,614:INFO:Importing untrained model
2024-05-09 01:43:32,618:INFO:Ridge Classifier Imported successfully
2024-05-09 01:43:32,628:INFO:Starting cross validation
2024-05-09 01:43:32,629:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:32,728:INFO:Calculating mean and std
2024-05-09 01:43:32,729:INFO:Creating metrics dataframe
2024-05-09 01:43:32,730:INFO:Uploading results into container
2024-05-09 01:43:32,731:INFO:Uploading model into container now
2024-05-09 01:43:32,731:INFO:_master_model_container: 6
2024-05-09 01:43:32,731:INFO:_display_container: 2
2024-05-09 01:43:32,732:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-09 01:43:32,732:INFO:create_model() successfully completed......................................
2024-05-09 01:43:32,798:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:32,799:INFO:Creating metrics dataframe
2024-05-09 01:43:32,807:INFO:Initializing Random Forest Classifier
2024-05-09 01:43:32,808:INFO:Total runtime is 0.14587223529815674 minutes
2024-05-09 01:43:32,811:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:32,811:INFO:Initializing create_model()
2024-05-09 01:43:32,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:32,811:INFO:Checking exceptions
2024-05-09 01:43:32,812:INFO:Importing libraries
2024-05-09 01:43:32,812:INFO:Copying training dataset
2024-05-09 01:43:32,830:INFO:Defining folds
2024-05-09 01:43:32,830:INFO:Declaring metric variables
2024-05-09 01:43:32,833:INFO:Importing untrained model
2024-05-09 01:43:32,837:INFO:Random Forest Classifier Imported successfully
2024-05-09 01:43:32,846:INFO:Starting cross validation
2024-05-09 01:43:32,846:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:36,638:INFO:Calculating mean and std
2024-05-09 01:43:36,639:INFO:Creating metrics dataframe
2024-05-09 01:43:36,640:INFO:Uploading results into container
2024-05-09 01:43:36,641:INFO:Uploading model into container now
2024-05-09 01:43:36,641:INFO:_master_model_container: 7
2024-05-09 01:43:36,641:INFO:_display_container: 2
2024-05-09 01:43:36,642:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 01:43:36,643:INFO:create_model() successfully completed......................................
2024-05-09 01:43:36,759:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:36,759:INFO:Creating metrics dataframe
2024-05-09 01:43:36,768:INFO:Initializing Quadratic Discriminant Analysis
2024-05-09 01:43:36,768:INFO:Total runtime is 0.2118844469388326 minutes
2024-05-09 01:43:36,773:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:36,773:INFO:Initializing create_model()
2024-05-09 01:43:36,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:36,774:INFO:Checking exceptions
2024-05-09 01:43:36,774:INFO:Importing libraries
2024-05-09 01:43:36,774:INFO:Copying training dataset
2024-05-09 01:43:36,796:INFO:Defining folds
2024-05-09 01:43:36,796:INFO:Declaring metric variables
2024-05-09 01:43:36,799:INFO:Importing untrained model
2024-05-09 01:43:36,807:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-09 01:43:36,815:INFO:Starting cross validation
2024-05-09 01:43:36,816:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:36,957:INFO:Calculating mean and std
2024-05-09 01:43:36,957:INFO:Creating metrics dataframe
2024-05-09 01:43:36,960:INFO:Uploading results into container
2024-05-09 01:43:36,960:INFO:Uploading model into container now
2024-05-09 01:43:36,961:INFO:_master_model_container: 8
2024-05-09 01:43:36,961:INFO:_display_container: 2
2024-05-09 01:43:36,961:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-09 01:43:36,961:INFO:create_model() successfully completed......................................
2024-05-09 01:43:37,031:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:37,032:INFO:Creating metrics dataframe
2024-05-09 01:43:37,041:INFO:Initializing Ada Boost Classifier
2024-05-09 01:43:37,041:INFO:Total runtime is 0.21644162734349567 minutes
2024-05-09 01:43:37,044:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:37,044:INFO:Initializing create_model()
2024-05-09 01:43:37,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:37,044:INFO:Checking exceptions
2024-05-09 01:43:37,044:INFO:Importing libraries
2024-05-09 01:43:37,044:INFO:Copying training dataset
2024-05-09 01:43:37,074:INFO:Defining folds
2024-05-09 01:43:37,074:INFO:Declaring metric variables
2024-05-09 01:43:37,078:INFO:Importing untrained model
2024-05-09 01:43:37,082:INFO:Ada Boost Classifier Imported successfully
2024-05-09 01:43:37,088:INFO:Starting cross validation
2024-05-09 01:43:37,090:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:37,128:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 01:43:37,129:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 01:43:37,140:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 01:43:37,140:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 01:43:37,167:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 01:43:38,589:INFO:Calculating mean and std
2024-05-09 01:43:38,589:INFO:Creating metrics dataframe
2024-05-09 01:43:38,591:INFO:Uploading results into container
2024-05-09 01:43:38,592:INFO:Uploading model into container now
2024-05-09 01:43:38,592:INFO:_master_model_container: 9
2024-05-09 01:43:38,592:INFO:_display_container: 2
2024-05-09 01:43:38,592:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-09 01:43:38,592:INFO:create_model() successfully completed......................................
2024-05-09 01:43:38,653:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:38,654:INFO:Creating metrics dataframe
2024-05-09 01:43:38,663:INFO:Initializing Gradient Boosting Classifier
2024-05-09 01:43:38,664:INFO:Total runtime is 0.24348755677541095 minutes
2024-05-09 01:43:38,668:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:38,668:INFO:Initializing create_model()
2024-05-09 01:43:38,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:38,668:INFO:Checking exceptions
2024-05-09 01:43:38,668:INFO:Importing libraries
2024-05-09 01:43:38,668:INFO:Copying training dataset
2024-05-09 01:43:38,691:INFO:Defining folds
2024-05-09 01:43:38,691:INFO:Declaring metric variables
2024-05-09 01:43:38,697:INFO:Importing untrained model
2024-05-09 01:43:38,701:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 01:43:38,709:INFO:Starting cross validation
2024-05-09 01:43:38,710:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:44,036:INFO:Calculating mean and std
2024-05-09 01:43:44,037:INFO:Creating metrics dataframe
2024-05-09 01:43:44,038:INFO:Uploading results into container
2024-05-09 01:43:44,039:INFO:Uploading model into container now
2024-05-09 01:43:44,039:INFO:_master_model_container: 10
2024-05-09 01:43:44,039:INFO:_display_container: 2
2024-05-09 01:43:44,039:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 01:43:44,039:INFO:create_model() successfully completed......................................
2024-05-09 01:43:44,104:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:44,104:INFO:Creating metrics dataframe
2024-05-09 01:43:44,111:INFO:Initializing Linear Discriminant Analysis
2024-05-09 01:43:44,111:INFO:Total runtime is 0.3342777172724406 minutes
2024-05-09 01:43:44,114:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:44,114:INFO:Initializing create_model()
2024-05-09 01:43:44,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:44,116:INFO:Checking exceptions
2024-05-09 01:43:44,116:INFO:Importing libraries
2024-05-09 01:43:44,116:INFO:Copying training dataset
2024-05-09 01:43:44,132:INFO:Defining folds
2024-05-09 01:43:44,132:INFO:Declaring metric variables
2024-05-09 01:43:44,135:INFO:Importing untrained model
2024-05-09 01:43:44,139:INFO:Linear Discriminant Analysis Imported successfully
2024-05-09 01:43:44,148:INFO:Starting cross validation
2024-05-09 01:43:44,149:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:44,260:INFO:Calculating mean and std
2024-05-09 01:43:44,260:INFO:Creating metrics dataframe
2024-05-09 01:43:44,262:INFO:Uploading results into container
2024-05-09 01:43:44,263:INFO:Uploading model into container now
2024-05-09 01:43:44,263:INFO:_master_model_container: 11
2024-05-09 01:43:44,264:INFO:_display_container: 2
2024-05-09 01:43:44,264:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-09 01:43:44,264:INFO:create_model() successfully completed......................................
2024-05-09 01:43:44,330:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:44,331:INFO:Creating metrics dataframe
2024-05-09 01:43:44,340:INFO:Initializing Extra Trees Classifier
2024-05-09 01:43:44,341:INFO:Total runtime is 0.33811492919921876 minutes
2024-05-09 01:43:44,344:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:44,344:INFO:Initializing create_model()
2024-05-09 01:43:44,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:44,344:INFO:Checking exceptions
2024-05-09 01:43:44,345:INFO:Importing libraries
2024-05-09 01:43:44,345:INFO:Copying training dataset
2024-05-09 01:43:44,364:INFO:Defining folds
2024-05-09 01:43:44,364:INFO:Declaring metric variables
2024-05-09 01:43:44,367:INFO:Importing untrained model
2024-05-09 01:43:44,371:INFO:Extra Trees Classifier Imported successfully
2024-05-09 01:43:44,378:INFO:Starting cross validation
2024-05-09 01:43:44,379:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:45,961:INFO:Calculating mean and std
2024-05-09 01:43:45,961:INFO:Creating metrics dataframe
2024-05-09 01:43:45,963:INFO:Uploading results into container
2024-05-09 01:43:45,964:INFO:Uploading model into container now
2024-05-09 01:43:45,964:INFO:_master_model_container: 12
2024-05-09 01:43:45,964:INFO:_display_container: 2
2024-05-09 01:43:45,964:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-09 01:43:45,964:INFO:create_model() successfully completed......................................
2024-05-09 01:43:46,028:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:46,028:INFO:Creating metrics dataframe
2024-05-09 01:43:46,037:INFO:Initializing Light Gradient Boosting Machine
2024-05-09 01:43:46,037:INFO:Total runtime is 0.3663826028505961 minutes
2024-05-09 01:43:46,040:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:46,040:INFO:Initializing create_model()
2024-05-09 01:43:46,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:46,040:INFO:Checking exceptions
2024-05-09 01:43:46,040:INFO:Importing libraries
2024-05-09 01:43:46,041:INFO:Copying training dataset
2024-05-09 01:43:46,059:INFO:Defining folds
2024-05-09 01:43:46,059:INFO:Declaring metric variables
2024-05-09 01:43:46,061:INFO:Importing untrained model
2024-05-09 01:43:46,064:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-09 01:43:46,073:INFO:Starting cross validation
2024-05-09 01:43:46,073:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:46,833:INFO:Calculating mean and std
2024-05-09 01:43:46,833:INFO:Creating metrics dataframe
2024-05-09 01:43:46,836:INFO:Uploading results into container
2024-05-09 01:43:46,836:INFO:Uploading model into container now
2024-05-09 01:43:46,837:INFO:_master_model_container: 13
2024-05-09 01:43:46,837:INFO:_display_container: 2
2024-05-09 01:43:46,837:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-09 01:43:46,838:INFO:create_model() successfully completed......................................
2024-05-09 01:43:46,898:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:46,898:INFO:Creating metrics dataframe
2024-05-09 01:43:46,908:INFO:Initializing Dummy Classifier
2024-05-09 01:43:46,908:INFO:Total runtime is 0.38089037736256914 minutes
2024-05-09 01:43:46,911:INFO:SubProcess create_model() called ==================================
2024-05-09 01:43:46,912:INFO:Initializing create_model()
2024-05-09 01:43:46,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04296E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:46,912:INFO:Checking exceptions
2024-05-09 01:43:46,912:INFO:Importing libraries
2024-05-09 01:43:46,912:INFO:Copying training dataset
2024-05-09 01:43:46,929:INFO:Defining folds
2024-05-09 01:43:46,929:INFO:Declaring metric variables
2024-05-09 01:43:46,931:INFO:Importing untrained model
2024-05-09 01:43:46,934:INFO:Dummy Classifier Imported successfully
2024-05-09 01:43:46,940:INFO:Starting cross validation
2024-05-09 01:43:46,941:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:46,988:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 01:43:46,991:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 01:43:46,996:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 01:43:46,999:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 01:43:47,003:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 01:43:47,013:INFO:Calculating mean and std
2024-05-09 01:43:47,014:INFO:Creating metrics dataframe
2024-05-09 01:43:47,015:INFO:Uploading results into container
2024-05-09 01:43:47,015:INFO:Uploading model into container now
2024-05-09 01:43:47,017:INFO:_master_model_container: 14
2024-05-09 01:43:47,017:INFO:_display_container: 2
2024-05-09 01:43:47,017:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-09 01:43:47,017:INFO:create_model() successfully completed......................................
2024-05-09 01:43:47,074:INFO:SubProcess create_model() end ==================================
2024-05-09 01:43:47,074:INFO:Creating metrics dataframe
2024-05-09 01:43:47,086:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-05-09 01:43:47,093:INFO:Initializing create_model()
2024-05-09 01:43:47,093:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:47,094:INFO:Checking exceptions
2024-05-09 01:43:47,096:INFO:Importing libraries
2024-05-09 01:43:47,096:INFO:Copying training dataset
2024-05-09 01:43:47,114:INFO:Defining folds
2024-05-09 01:43:47,114:INFO:Declaring metric variables
2024-05-09 01:43:47,114:INFO:Importing untrained model
2024-05-09 01:43:47,115:INFO:Declaring custom model
2024-05-09 01:43:47,115:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 01:43:47,116:INFO:Cross validation set to False
2024-05-09 01:43:47,116:INFO:Fitting Model
2024-05-09 01:43:53,202:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 01:43:53,203:INFO:create_model() successfully completed......................................
2024-05-09 01:43:53,284:INFO:_master_model_container: 14
2024-05-09 01:43:53,284:INFO:_display_container: 2
2024-05-09 01:43:53,284:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 01:43:53,284:INFO:compare_models() successfully completed......................................
2024-05-09 01:43:53,391:INFO:gpu_param set to False
2024-05-09 01:43:53,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:53,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:53,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:53,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:43:53,551:INFO:Initializing create_model()
2024-05-09 01:43:53,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:53,551:INFO:Checking exceptions
2024-05-09 01:43:53,564:INFO:Importing libraries
2024-05-09 01:43:53,564:INFO:Copying training dataset
2024-05-09 01:43:53,603:INFO:Defining folds
2024-05-09 01:43:53,603:INFO:Declaring metric variables
2024-05-09 01:43:53,606:INFO:Importing untrained model
2024-05-09 01:43:53,613:INFO:Decision Tree Classifier Imported successfully
2024-05-09 01:43:53,622:INFO:Starting cross validation
2024-05-09 01:43:53,623:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:54,487:INFO:Calculating mean and std
2024-05-09 01:43:54,487:INFO:Creating metrics dataframe
2024-05-09 01:43:54,492:INFO:Finalizing model
2024-05-09 01:43:54,897:INFO:Uploading results into container
2024-05-09 01:43:54,898:INFO:Uploading model into container now
2024-05-09 01:43:54,908:INFO:_master_model_container: 15
2024-05-09 01:43:54,908:INFO:_display_container: 3
2024-05-09 01:43:54,909:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 01:43:54,909:INFO:create_model() successfully completed......................................
2024-05-09 01:43:54,987:INFO:Initializing create_model()
2024-05-09 01:43:54,987:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:54,987:INFO:Checking exceptions
2024-05-09 01:43:55,010:INFO:Importing libraries
2024-05-09 01:43:55,010:INFO:Copying training dataset
2024-05-09 01:43:55,028:INFO:Defining folds
2024-05-09 01:43:55,028:INFO:Declaring metric variables
2024-05-09 01:43:55,032:INFO:Importing untrained model
2024-05-09 01:43:55,034:INFO:K Neighbors Classifier Imported successfully
2024-05-09 01:43:55,040:INFO:Starting cross validation
2024-05-09 01:43:55,041:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:43:55,780:INFO:Calculating mean and std
2024-05-09 01:43:55,780:INFO:Creating metrics dataframe
2024-05-09 01:43:55,784:INFO:Finalizing model
2024-05-09 01:43:55,809:INFO:Uploading results into container
2024-05-09 01:43:55,810:INFO:Uploading model into container now
2024-05-09 01:43:55,854:INFO:_master_model_container: 16
2024-05-09 01:43:55,854:INFO:_display_container: 4
2024-05-09 01:43:55,854:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 01:43:55,855:INFO:create_model() successfully completed......................................
2024-05-09 01:43:55,953:INFO:Initializing create_model()
2024-05-09 01:43:55,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:43:55,953:INFO:Checking exceptions
2024-05-09 01:43:55,967:INFO:Importing libraries
2024-05-09 01:43:55,967:INFO:Copying training dataset
2024-05-09 01:43:55,985:INFO:Defining folds
2024-05-09 01:43:55,986:INFO:Declaring metric variables
2024-05-09 01:43:55,988:INFO:Importing untrained model
2024-05-09 01:43:55,992:INFO:Random Forest Classifier Imported successfully
2024-05-09 01:43:56,000:INFO:Starting cross validation
2024-05-09 01:43:56,000:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:44:03,714:INFO:Calculating mean and std
2024-05-09 01:44:03,715:INFO:Creating metrics dataframe
2024-05-09 01:44:03,719:INFO:Finalizing model
2024-05-09 01:44:04,633:INFO:Uploading results into container
2024-05-09 01:44:04,634:INFO:Uploading model into container now
2024-05-09 01:44:04,642:INFO:_master_model_container: 17
2024-05-09 01:44:04,642:INFO:_display_container: 5
2024-05-09 01:44:04,643:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 01:44:04,643:INFO:create_model() successfully completed......................................
2024-05-09 01:44:04,736:INFO:Initializing tune_model()
2024-05-09 01:44:04,736:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 01:44:04,736:INFO:Checking exceptions
2024-05-09 01:44:04,756:INFO:Copying training dataset
2024-05-09 01:44:04,767:INFO:Checking base model
2024-05-09 01:44:04,768:INFO:Base model : Decision Tree Classifier
2024-05-09 01:44:04,787:INFO:Declaring metric variables
2024-05-09 01:44:04,799:INFO:Defining Hyperparameters
2024-05-09 01:44:04,867:INFO:Tuning with n_jobs=-1
2024-05-09 01:44:04,867:INFO:Initializing RandomizedSearchCV
2024-05-09 01:44:06,340:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 1, 'actual_estimator__criterion': 'gini'}
2024-05-09 01:44:06,341:INFO:Hyperparameter search completed
2024-05-09 01:44:06,341:INFO:SubProcess create_model() called ==================================
2024-05-09 01:44:06,341:INFO:Initializing create_model()
2024-05-09 01:44:06,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04345B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 1, 'criterion': 'gini'})
2024-05-09 01:44:06,342:INFO:Checking exceptions
2024-05-09 01:44:06,342:INFO:Importing libraries
2024-05-09 01:44:06,342:INFO:Copying training dataset
2024-05-09 01:44:06,360:INFO:Defining folds
2024-05-09 01:44:06,360:INFO:Declaring metric variables
2024-05-09 01:44:06,363:INFO:Importing untrained model
2024-05-09 01:44:06,364:INFO:Declaring custom model
2024-05-09 01:44:06,366:INFO:Decision Tree Classifier Imported successfully
2024-05-09 01:44:06,372:INFO:Starting cross validation
2024-05-09 01:44:06,373:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:44:06,543:INFO:Calculating mean and std
2024-05-09 01:44:06,544:INFO:Creating metrics dataframe
2024-05-09 01:44:06,549:INFO:Finalizing model
2024-05-09 01:44:06,591:INFO:Uploading results into container
2024-05-09 01:44:06,592:INFO:Uploading model into container now
2024-05-09 01:44:06,592:INFO:_master_model_container: 18
2024-05-09 01:44:06,593:INFO:_display_container: 6
2024-05-09 01:44:06,593:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 01:44:06,593:INFO:create_model() successfully completed......................................
2024-05-09 01:44:06,660:INFO:SubProcess create_model() end ==================================
2024-05-09 01:44:06,660:INFO:choose_better activated
2024-05-09 01:44:06,663:INFO:SubProcess create_model() called ==================================
2024-05-09 01:44:06,664:INFO:Initializing create_model()
2024-05-09 01:44:06,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:44:06,664:INFO:Checking exceptions
2024-05-09 01:44:06,665:INFO:Importing libraries
2024-05-09 01:44:06,665:INFO:Copying training dataset
2024-05-09 01:44:06,683:INFO:Defining folds
2024-05-09 01:44:06,683:INFO:Declaring metric variables
2024-05-09 01:44:06,683:INFO:Importing untrained model
2024-05-09 01:44:06,684:INFO:Declaring custom model
2024-05-09 01:44:06,684:INFO:Decision Tree Classifier Imported successfully
2024-05-09 01:44:06,684:INFO:Starting cross validation
2024-05-09 01:44:06,685:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:44:07,568:INFO:Calculating mean and std
2024-05-09 01:44:07,569:INFO:Creating metrics dataframe
2024-05-09 01:44:07,570:INFO:Finalizing model
2024-05-09 01:44:07,970:INFO:Uploading results into container
2024-05-09 01:44:07,970:INFO:Uploading model into container now
2024-05-09 01:44:07,970:INFO:_master_model_container: 19
2024-05-09 01:44:07,971:INFO:_display_container: 7
2024-05-09 01:44:07,971:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 01:44:07,971:INFO:create_model() successfully completed......................................
2024-05-09 01:44:08,032:INFO:SubProcess create_model() end ==================================
2024-05-09 01:44:08,032:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.7295
2024-05-09 01:44:08,032:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.8225
2024-05-09 01:44:08,033:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') is best model
2024-05-09 01:44:08,033:INFO:choose_better completed
2024-05-09 01:44:08,042:INFO:_master_model_container: 19
2024-05-09 01:44:08,042:INFO:_display_container: 6
2024-05-09 01:44:08,043:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 01:44:08,043:INFO:tune_model() successfully completed......................................
2024-05-09 01:44:08,126:INFO:Initializing tune_model()
2024-05-09 01:44:08,126:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, n_iter=10, custom_grid={'n_neighbors': array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 01:44:08,126:INFO:Checking exceptions
2024-05-09 01:44:08,145:INFO:Copying training dataset
2024-05-09 01:44:08,158:INFO:Checking base model
2024-05-09 01:44:08,158:INFO:Base model : K Neighbors Classifier
2024-05-09 01:44:08,163:INFO:Declaring metric variables
2024-05-09 01:44:08,167:INFO:Defining Hyperparameters
2024-05-09 01:44:08,232:INFO:custom_grid: {'actual_estimator__n_neighbors': array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])}
2024-05-09 01:44:08,232:INFO:Tuning with n_jobs=-1
2024-05-09 01:44:08,232:INFO:Initializing RandomizedSearchCV
2024-05-09 01:44:12,487:INFO:best_params: {'actual_estimator__n_neighbors': 42}
2024-05-09 01:44:12,487:INFO:Hyperparameter search completed
2024-05-09 01:44:12,487:INFO:SubProcess create_model() called ==================================
2024-05-09 01:44:12,488:INFO:Initializing create_model()
2024-05-09 01:44:12,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD0261B050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_neighbors': 42})
2024-05-09 01:44:12,488:INFO:Checking exceptions
2024-05-09 01:44:12,488:INFO:Importing libraries
2024-05-09 01:44:12,488:INFO:Copying training dataset
2024-05-09 01:44:12,505:INFO:Defining folds
2024-05-09 01:44:12,505:INFO:Declaring metric variables
2024-05-09 01:44:12,508:INFO:Importing untrained model
2024-05-09 01:44:12,509:INFO:Declaring custom model
2024-05-09 01:44:12,512:INFO:K Neighbors Classifier Imported successfully
2024-05-09 01:44:12,518:INFO:Starting cross validation
2024-05-09 01:44:12,518:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:44:13,334:INFO:Calculating mean and std
2024-05-09 01:44:13,335:INFO:Creating metrics dataframe
2024-05-09 01:44:13,341:INFO:Finalizing model
2024-05-09 01:44:13,362:INFO:Uploading results into container
2024-05-09 01:44:13,362:INFO:Uploading model into container now
2024-05-09 01:44:13,363:INFO:_master_model_container: 20
2024-05-09 01:44:13,363:INFO:_display_container: 7
2024-05-09 01:44:13,363:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,
                     weights='uniform')
2024-05-09 01:44:13,363:INFO:create_model() successfully completed......................................
2024-05-09 01:44:13,433:INFO:SubProcess create_model() end ==================================
2024-05-09 01:44:13,434:INFO:choose_better activated
2024-05-09 01:44:13,436:INFO:SubProcess create_model() called ==================================
2024-05-09 01:44:13,436:INFO:Initializing create_model()
2024-05-09 01:44:13,436:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:44:13,436:INFO:Checking exceptions
2024-05-09 01:44:13,439:INFO:Importing libraries
2024-05-09 01:44:13,440:INFO:Copying training dataset
2024-05-09 01:44:13,460:INFO:Defining folds
2024-05-09 01:44:13,460:INFO:Declaring metric variables
2024-05-09 01:44:13,460:INFO:Importing untrained model
2024-05-09 01:44:13,460:INFO:Declaring custom model
2024-05-09 01:44:13,461:INFO:K Neighbors Classifier Imported successfully
2024-05-09 01:44:13,461:INFO:Starting cross validation
2024-05-09 01:44:13,462:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:44:14,254:INFO:Calculating mean and std
2024-05-09 01:44:14,254:INFO:Creating metrics dataframe
2024-05-09 01:44:14,255:INFO:Finalizing model
2024-05-09 01:44:14,275:INFO:Uploading results into container
2024-05-09 01:44:14,275:INFO:Uploading model into container now
2024-05-09 01:44:14,276:INFO:_master_model_container: 21
2024-05-09 01:44:14,276:INFO:_display_container: 8
2024-05-09 01:44:14,276:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 01:44:14,276:INFO:create_model() successfully completed......................................
2024-05-09 01:44:14,345:INFO:SubProcess create_model() end ==================================
2024-05-09 01:44:14,345:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') result for Accuracy is 0.7504
2024-05-09 01:44:14,345:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,
                     weights='uniform') result for Accuracy is 0.7802
2024-05-09 01:44:14,346:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,
                     weights='uniform') is best model
2024-05-09 01:44:14,346:INFO:choose_better completed
2024-05-09 01:44:14,355:INFO:_master_model_container: 21
2024-05-09 01:44:14,356:INFO:_display_container: 7
2024-05-09 01:44:14,356:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,
                     weights='uniform')
2024-05-09 01:44:14,357:INFO:tune_model() successfully completed......................................
2024-05-09 01:44:14,446:INFO:Initializing tune_model()
2024-05-09 01:44:14,446:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 01:44:14,446:INFO:Checking exceptions
2024-05-09 01:44:14,465:INFO:Copying training dataset
2024-05-09 01:44:14,477:INFO:Checking base model
2024-05-09 01:44:14,478:INFO:Base model : Random Forest Classifier
2024-05-09 01:44:14,481:INFO:Declaring metric variables
2024-05-09 01:44:14,484:INFO:Defining Hyperparameters
2024-05-09 01:44:14,546:INFO:Tuning with n_jobs=-1
2024-05-09 01:44:14,546:INFO:Initializing RandomizedSearchCV
2024-05-09 01:45:55,271:INFO:best_params: {'actual_estimator__n_estimators': 130, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': True}
2024-05-09 01:45:55,271:INFO:Hyperparameter search completed
2024-05-09 01:45:55,272:INFO:SubProcess create_model() called ==================================
2024-05-09 01:45:55,272:INFO:Initializing create_model()
2024-05-09 01:45:55,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DD04297650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 130, 'min_samples_split': 9, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.0002, 'max_features': 'log2', 'max_depth': 4, 'criterion': 'entropy', 'class_weight': 'balanced_subsample', 'bootstrap': True})
2024-05-09 01:45:55,272:INFO:Checking exceptions
2024-05-09 01:45:55,272:INFO:Importing libraries
2024-05-09 01:45:55,272:INFO:Copying training dataset
2024-05-09 01:45:55,291:INFO:Defining folds
2024-05-09 01:45:55,291:INFO:Declaring metric variables
2024-05-09 01:45:55,294:INFO:Importing untrained model
2024-05-09 01:45:55,295:INFO:Declaring custom model
2024-05-09 01:45:55,299:INFO:Random Forest Classifier Imported successfully
2024-05-09 01:45:55,305:INFO:Starting cross validation
2024-05-09 01:45:55,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:45:59,443:INFO:Calculating mean and std
2024-05-09 01:45:59,443:INFO:Creating metrics dataframe
2024-05-09 01:45:59,449:INFO:Finalizing model
2024-05-09 01:46:00,149:INFO:Uploading results into container
2024-05-09 01:46:00,150:INFO:Uploading model into container now
2024-05-09 01:46:00,151:INFO:_master_model_container: 22
2024-05-09 01:46:00,151:INFO:_display_container: 8
2024-05-09 01:46:00,152:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-05-09 01:46:00,152:INFO:create_model() successfully completed......................................
2024-05-09 01:46:00,232:INFO:SubProcess create_model() end ==================================
2024-05-09 01:46:00,232:INFO:choose_better activated
2024-05-09 01:46:00,235:INFO:SubProcess create_model() called ==================================
2024-05-09 01:46:00,235:INFO:Initializing create_model()
2024-05-09 01:46:00,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:46:00,237:INFO:Checking exceptions
2024-05-09 01:46:00,240:INFO:Importing libraries
2024-05-09 01:46:00,240:INFO:Copying training dataset
2024-05-09 01:46:00,257:INFO:Defining folds
2024-05-09 01:46:00,257:INFO:Declaring metric variables
2024-05-09 01:46:00,257:INFO:Importing untrained model
2024-05-09 01:46:00,257:INFO:Declaring custom model
2024-05-09 01:46:00,258:INFO:Random Forest Classifier Imported successfully
2024-05-09 01:46:00,258:INFO:Starting cross validation
2024-05-09 01:46:00,259:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:46:07,824:INFO:Calculating mean and std
2024-05-09 01:46:07,824:INFO:Creating metrics dataframe
2024-05-09 01:46:07,826:INFO:Finalizing model
2024-05-09 01:46:08,739:INFO:Uploading results into container
2024-05-09 01:46:08,740:INFO:Uploading model into container now
2024-05-09 01:46:08,740:INFO:_master_model_container: 23
2024-05-09 01:46:08,740:INFO:_display_container: 9
2024-05-09 01:46:08,741:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 01:46:08,741:INFO:create_model() successfully completed......................................
2024-05-09 01:46:08,803:INFO:SubProcess create_model() end ==================================
2024-05-09 01:46:08,804:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for F1 is 0.4864
2024-05-09 01:46:08,804:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for F1 is 0.5513
2024-05-09 01:46:08,804:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2024-05-09 01:46:08,805:INFO:choose_better completed
2024-05-09 01:46:08,814:INFO:_master_model_container: 23
2024-05-09 01:46:08,814:INFO:_display_container: 8
2024-05-09 01:46:08,814:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-05-09 01:46:08,815:INFO:tune_model() successfully completed......................................
2024-05-09 01:46:08,896:INFO:Initializing plot_model()
2024-05-09 01:46:08,896:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 01:46:08,896:INFO:Checking exceptions
2024-05-09 01:46:08,932:INFO:Preloading libraries
2024-05-09 01:46:08,941:INFO:Copying training dataset
2024-05-09 01:46:08,942:INFO:Plot type: auc
2024-05-09 01:46:09,074:INFO:Fitting Model
2024-05-09 01:46:09,075:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 01:46:09,076:INFO:Scoring test/hold-out set
2024-05-09 01:46:09,377:INFO:Visual Rendered Successfully
2024-05-09 01:46:09,437:INFO:plot_model() successfully completed......................................
2024-05-09 01:46:09,453:INFO:Initializing plot_model()
2024-05-09 01:46:09,453:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=pr, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 01:46:09,453:INFO:Checking exceptions
2024-05-09 01:46:09,488:INFO:Preloading libraries
2024-05-09 01:46:09,497:INFO:Copying training dataset
2024-05-09 01:46:09,497:INFO:Plot type: pr
2024-05-09 01:46:09,628:INFO:Fitting Model
2024-05-09 01:46:09,629:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 01:46:09,630:INFO:Scoring test/hold-out set
2024-05-09 01:46:09,864:INFO:Visual Rendered Successfully
2024-05-09 01:46:09,922:INFO:plot_model() successfully completed......................................
2024-05-09 01:46:09,932:INFO:Initializing plot_model()
2024-05-09 01:46:09,932:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 01:46:09,933:INFO:Checking exceptions
2024-05-09 01:46:09,989:INFO:Preloading libraries
2024-05-09 01:46:09,998:INFO:Copying training dataset
2024-05-09 01:46:09,999:INFO:Plot type: feature
2024-05-09 01:46:09,999:WARNING:No coef_ found. Trying feature_importances_
2024-05-09 01:46:10,184:INFO:Visual Rendered Successfully
2024-05-09 01:46:10,247:INFO:plot_model() successfully completed......................................
2024-05-09 01:46:10,258:INFO:Initializing plot_model()
2024-05-09 01:46:10,258:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 01:46:10,258:INFO:Checking exceptions
2024-05-09 01:46:10,293:INFO:Preloading libraries
2024-05-09 01:46:10,302:INFO:Copying training dataset
2024-05-09 01:46:10,302:INFO:Plot type: confusion_matrix
2024-05-09 01:46:10,438:INFO:Fitting Model
2024-05-09 01:46:10,438:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 01:46:10,439:INFO:Scoring test/hold-out set
2024-05-09 01:46:10,620:INFO:Visual Rendered Successfully
2024-05-09 01:46:10,695:INFO:plot_model() successfully completed......................................
2024-05-09 01:46:10,705:INFO:Initializing evaluate_model()
2024-05-09 01:46:10,705:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-09 01:46:10,722:INFO:Initializing plot_model()
2024-05-09 01:46:10,722:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:46:10,722:INFO:Checking exceptions
2024-05-09 01:46:10,756:INFO:Preloading libraries
2024-05-09 01:46:10,764:INFO:Copying training dataset
2024-05-09 01:46:10,764:INFO:Plot type: pipeline
2024-05-09 01:46:10,888:INFO:Visual Rendered Successfully
2024-05-09 01:46:10,950:INFO:plot_model() successfully completed......................................
2024-05-09 01:46:10,964:INFO:Initializing predict_model()
2024-05-09 01:46:10,964:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DD04131580>)
2024-05-09 01:46:10,964:INFO:Checking exceptions
2024-05-09 01:46:10,964:INFO:Preloading libraries
2024-05-09 01:46:11,211:INFO:Initializing finalize_model()
2024-05-09 01:46:11,211:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 01:46:11,212:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-05-09 01:46:11,222:INFO:Initializing create_model()
2024-05-09 01:46:11,223:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:46:11,223:INFO:Checking exceptions
2024-05-09 01:46:11,224:INFO:Importing libraries
2024-05-09 01:46:11,224:INFO:Copying training dataset
2024-05-09 01:46:11,226:INFO:Defining folds
2024-05-09 01:46:11,226:INFO:Declaring metric variables
2024-05-09 01:46:11,226:INFO:Importing untrained model
2024-05-09 01:46:11,226:INFO:Declaring custom model
2024-05-09 01:46:11,227:INFO:Random Forest Classifier Imported successfully
2024-05-09 01:46:11,228:INFO:Cross validation set to False
2024-05-09 01:46:11,228:INFO:Fitting Model
2024-05-09 01:46:12,185:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-09 01:46:12,186:INFO:create_model() successfully completed......................................
2024-05-09 01:46:12,271:INFO:_master_model_container: 23
2024-05-09 01:46:12,271:INFO:_display_container: 9
2024-05-09 01:46:12,276:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-09 01:46:12,276:INFO:finalize_model() successfully completed......................................
2024-05-09 01:46:12,402:INFO:Initializing predict_model()
2024-05-09 01:46:12,403:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DD67A66340>)
2024-05-09 01:46:12,403:INFO:Checking exceptions
2024-05-09 01:46:12,403:INFO:Preloading libraries
2024-05-09 01:46:12,665:INFO:Initializing predict_model()
2024-05-09 01:46:12,665:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DD04130AE0>)
2024-05-09 01:46:12,666:INFO:Checking exceptions
2024-05-09 01:46:12,666:INFO:Preloading libraries
2024-05-09 01:46:12,668:INFO:Set up data.
2024-05-09 01:46:12,675:INFO:Set up index.
2024-05-09 01:47:29,826:INFO:Initializing plot_model()
2024-05-09 01:47:29,826:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=parameter, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:47:29,826:INFO:Checking exceptions
2024-05-09 01:47:29,860:INFO:Preloading libraries
2024-05-09 01:47:29,868:INFO:Copying training dataset
2024-05-09 01:47:29,868:INFO:Plot type: parameter
2024-05-09 01:47:29,871:INFO:Visual Rendered Successfully
2024-05-09 01:47:29,928:INFO:plot_model() successfully completed......................................
2024-05-09 01:47:30,799:INFO:Initializing plot_model()
2024-05-09 01:47:30,800:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:47:30,800:INFO:Checking exceptions
2024-05-09 01:47:30,836:INFO:Preloading libraries
2024-05-09 01:47:30,844:INFO:Copying training dataset
2024-05-09 01:47:30,844:INFO:Plot type: pipeline
2024-05-09 01:47:30,912:INFO:Visual Rendered Successfully
2024-05-09 01:47:30,972:INFO:plot_model() successfully completed......................................
2024-05-09 01:47:34,861:INFO:Initializing plot_model()
2024-05-09 01:47:34,861:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=parameter, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:47:34,861:INFO:Checking exceptions
2024-05-09 01:47:34,896:INFO:Preloading libraries
2024-05-09 01:47:34,903:INFO:Copying training dataset
2024-05-09 01:47:34,903:INFO:Plot type: parameter
2024-05-09 01:47:34,906:INFO:Visual Rendered Successfully
2024-05-09 01:47:34,965:INFO:plot_model() successfully completed......................................
2024-05-09 01:47:37,575:INFO:Initializing plot_model()
2024-05-09 01:47:37,575:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=auc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:47:37,576:INFO:Checking exceptions
2024-05-09 01:47:37,610:INFO:Preloading libraries
2024-05-09 01:47:37,618:INFO:Copying training dataset
2024-05-09 01:47:37,618:INFO:Plot type: auc
2024-05-09 01:47:37,738:INFO:Fitting Model
2024-05-09 01:47:37,952:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 01:47:37,952:INFO:Scoring test/hold-out set
2024-05-09 01:47:38,216:INFO:Visual Rendered Successfully
2024-05-09 01:47:38,300:INFO:plot_model() successfully completed......................................
2024-05-09 01:47:39,611:INFO:Initializing plot_model()
2024-05-09 01:47:39,611:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:47:39,611:INFO:Checking exceptions
2024-05-09 01:47:39,646:INFO:Preloading libraries
2024-05-09 01:47:39,654:INFO:Copying training dataset
2024-05-09 01:47:39,654:INFO:Plot type: confusion_matrix
2024-05-09 01:47:39,772:INFO:Fitting Model
2024-05-09 01:47:39,772:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 01:47:39,773:INFO:Scoring test/hold-out set
2024-05-09 01:47:39,945:INFO:Visual Rendered Successfully
2024-05-09 01:47:40,017:INFO:plot_model() successfully completed......................................
2024-05-09 01:47:40,860:INFO:Initializing plot_model()
2024-05-09 01:47:40,860:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=threshold, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:47:40,860:INFO:Checking exceptions
2024-05-09 01:47:40,892:INFO:Preloading libraries
2024-05-09 01:47:40,900:INFO:Copying training dataset
2024-05-09 01:47:40,901:INFO:Plot type: threshold
2024-05-09 01:47:41,034:INFO:Fitting Model
2024-05-09 01:48:14,340:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 01:48:14,357:INFO:Scoring test/hold-out set
2024-05-09 01:48:14,657:INFO:Visual Rendered Successfully
2024-05-09 01:48:14,728:INFO:plot_model() successfully completed......................................
2024-05-09 01:48:14,820:INFO:Initializing plot_model()
2024-05-09 01:48:14,820:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:48:14,820:INFO:Checking exceptions
2024-05-09 01:48:14,843:INFO:Preloading libraries
2024-05-09 01:48:14,851:INFO:Copying training dataset
2024-05-09 01:48:14,851:INFO:Plot type: pipeline
2024-05-09 01:48:14,917:INFO:Visual Rendered Successfully
2024-05-09 01:48:14,996:INFO:plot_model() successfully completed......................................
2024-05-09 01:50:53,126:INFO:Initializing save_model()
2024-05-09 01:50:53,126:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=Final RF Model 01Jun2022, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Eduardo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-09 01:50:53,126:INFO:Adding model into prep_pipe
2024-05-09 01:50:53,127:WARNING:Only Model saved as it was a pipeline.
2024-05-09 01:50:53,174:INFO:Final RF Model 01Jun2022.pkl saved in current working directory
2024-05-09 01:50:53,178:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-09 01:50:53,179:INFO:save_model() successfully completed......................................
2024-05-09 01:50:55,681:INFO:Initializing load_model()
2024-05-09 01:50:55,681:INFO:load_model(model_name=Final RF Model 01Jun2022, platform=None, authentication=None, verbose=True)
2024-05-09 01:50:57,764:INFO:Initializing predict_model()
2024-05-09 01:50:57,764:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DD7FCFDC10>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Eduardo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             '...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DD04529A80>)
2024-05-09 01:50:57,765:INFO:Checking exceptions
2024-05-09 01:50:57,765:INFO:Preloading libraries
2024-05-09 01:50:57,766:INFO:Set up data.
2024-05-09 01:50:57,774:INFO:Set up index.
2024-05-09 01:51:35,915:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 01:51:35,915:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 01:51:35,915:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 01:51:35,915:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 01:51:36,300:INFO:PyCaret ClassificationExperiment
2024-05-09 01:51:36,301:INFO:Logging name: clf-default-name
2024-05-09 01:51:36,301:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-09 01:51:36,301:INFO:version 3.3.2
2024-05-09 01:51:36,301:INFO:Initializing setup()
2024-05-09 01:51:36,301:INFO:self.USI: cc0c
2024-05-09 01:51:36,301:INFO:self._variable_keys: {'pipeline', 'idx', 'exp_id', 'y', 'target_param', 'X', 'y_train', 'fold_groups_param', 'is_multiclass', 'X_train', '_available_plots', 'seed', 'exp_name_log', 'gpu_n_jobs_param', 'gpu_param', 'n_jobs_param', 'fix_imbalance', 'y_test', 'data', 'memory', 'USI', '_ml_usecase', 'X_test', 'fold_shuffle_param', 'logging_param', 'log_plots_param', 'html_param', 'fold_generator'}
2024-05-09 01:51:36,302:INFO:Checking environment
2024-05-09 01:51:36,302:INFO:python_version: 3.11.9
2024-05-09 01:51:36,302:INFO:python_build: ('main', 'Apr 19 2024 16:40:41')
2024-05-09 01:51:36,302:INFO:machine: AMD64
2024-05-09 01:51:36,302:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 01:51:36,304:INFO:Memory: svmem(total=17111994368, available=7077117952, percent=58.6, used=10034876416, free=7077117952)
2024-05-09 01:51:36,304:INFO:Physical Core: 6
2024-05-09 01:51:36,304:INFO:Logical Core: 6
2024-05-09 01:51:36,304:INFO:Checking libraries
2024-05-09 01:51:36,304:INFO:System:
2024-05-09 01:51:36,304:INFO:    python: 3.11.9 | packaged by Anaconda, Inc. | (main, Apr 19 2024, 16:40:41) [MSC v.1916 64 bit (AMD64)]
2024-05-09 01:51:36,304:INFO:executable: c:\Users\Eduardo\Documents\.conda\python.exe
2024-05-09 01:51:36,304:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 01:51:36,304:INFO:PyCaret required dependencies:
2024-05-09 01:51:36,327:INFO:                 pip: 24.0
2024-05-09 01:51:36,465:INFO:          setuptools: 69.5.1
2024-05-09 01:51:36,465:INFO:             pycaret: 3.3.2
2024-05-09 01:51:36,465:INFO:             IPython: 8.22.2
2024-05-09 01:51:36,465:INFO:          ipywidgets: 8.1.2
2024-05-09 01:51:36,465:INFO:                tqdm: 4.66.4
2024-05-09 01:51:36,466:INFO:               numpy: 1.26.4
2024-05-09 01:51:36,466:INFO:              pandas: 2.1.4
2024-05-09 01:51:36,466:INFO:              jinja2: 3.1.4
2024-05-09 01:51:36,466:INFO:               scipy: 1.11.4
2024-05-09 01:51:36,466:INFO:              joblib: 1.3.2
2024-05-09 01:51:36,466:INFO:             sklearn: 1.4.2
2024-05-09 01:51:36,466:INFO:                pyod: 1.1.3
2024-05-09 01:51:36,466:INFO:            imblearn: 0.12.2
2024-05-09 01:51:36,466:INFO:   category_encoders: 2.6.3
2024-05-09 01:51:36,466:INFO:            lightgbm: 4.3.0
2024-05-09 01:51:36,466:INFO:               numba: 0.59.1
2024-05-09 01:51:36,466:INFO:            requests: 2.31.0
2024-05-09 01:51:36,466:INFO:          matplotlib: 3.7.5
2024-05-09 01:51:36,466:INFO:          scikitplot: 0.3.7
2024-05-09 01:51:36,466:INFO:         yellowbrick: 1.5
2024-05-09 01:51:36,466:INFO:              plotly: 5.22.0
2024-05-09 01:51:36,466:INFO:    plotly-resampler: Not installed
2024-05-09 01:51:36,466:INFO:             kaleido: 0.2.1
2024-05-09 01:51:36,466:INFO:           schemdraw: 0.15
2024-05-09 01:51:36,466:INFO:         statsmodels: 0.14.2
2024-05-09 01:51:36,466:INFO:              sktime: 0.26.0
2024-05-09 01:51:36,466:INFO:               tbats: 1.1.3
2024-05-09 01:51:36,466:INFO:            pmdarima: 2.0.4
2024-05-09 01:51:36,466:INFO:              psutil: 5.9.8
2024-05-09 01:51:36,466:INFO:          markupsafe: 2.1.5
2024-05-09 01:51:36,466:INFO:             pickle5: Not installed
2024-05-09 01:51:36,466:INFO:         cloudpickle: 3.0.0
2024-05-09 01:51:36,467:INFO:         deprecation: 2.1.0
2024-05-09 01:51:36,467:INFO:              xxhash: 3.4.1
2024-05-09 01:51:36,467:INFO:           wurlitzer: Not installed
2024-05-09 01:51:36,467:INFO:PyCaret optional dependencies:
2024-05-09 01:51:36,479:INFO:                shap: Not installed
2024-05-09 01:51:36,479:INFO:           interpret: Not installed
2024-05-09 01:51:36,479:INFO:                umap: Not installed
2024-05-09 01:51:36,479:INFO:     ydata_profiling: Not installed
2024-05-09 01:51:36,479:INFO:  explainerdashboard: Not installed
2024-05-09 01:51:36,479:INFO:             autoviz: Not installed
2024-05-09 01:51:36,479:INFO:           fairlearn: Not installed
2024-05-09 01:51:36,479:INFO:          deepchecks: Not installed
2024-05-09 01:51:36,479:INFO:             xgboost: Not installed
2024-05-09 01:51:36,479:INFO:            catboost: Not installed
2024-05-09 01:51:36,479:INFO:              kmodes: Not installed
2024-05-09 01:51:36,479:INFO:             mlxtend: Not installed
2024-05-09 01:51:36,479:INFO:       statsforecast: Not installed
2024-05-09 01:51:36,479:INFO:        tune_sklearn: Not installed
2024-05-09 01:51:36,479:INFO:                 ray: Not installed
2024-05-09 01:51:36,479:INFO:            hyperopt: Not installed
2024-05-09 01:51:36,479:INFO:              optuna: Not installed
2024-05-09 01:51:36,480:INFO:               skopt: Not installed
2024-05-09 01:51:36,480:INFO:              mlflow: Not installed
2024-05-09 01:51:36,480:INFO:              gradio: Not installed
2024-05-09 01:51:36,480:INFO:             fastapi: Not installed
2024-05-09 01:51:36,480:INFO:             uvicorn: Not installed
2024-05-09 01:51:36,480:INFO:              m2cgen: Not installed
2024-05-09 01:51:36,480:INFO:           evidently: Not installed
2024-05-09 01:51:36,480:INFO:               fugue: Not installed
2024-05-09 01:51:36,480:INFO:           streamlit: Not installed
2024-05-09 01:51:36,480:INFO:             prophet: Not installed
2024-05-09 01:51:36,480:INFO:None
2024-05-09 01:51:36,480:INFO:Set up data.
2024-05-09 01:51:36,493:INFO:Set up folding strategy.
2024-05-09 01:51:36,493:INFO:Set up train/test split.
2024-05-09 01:51:36,509:INFO:Set up index.
2024-05-09 01:51:36,510:INFO:Assigning column types.
2024-05-09 01:51:36,524:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 01:51:36,565:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 01:51:36,568:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 01:51:36,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:36,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:36,640:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 01:51:36,641:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 01:51:36,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:36,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:36,667:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 01:51:36,709:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 01:51:36,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:36,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:36,776:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 01:51:36,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:36,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:36,804:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-09 01:51:36,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:36,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:36,937:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:36,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:36,939:INFO:Preparing preprocessing pipeline...
2024-05-09 01:51:36,941:INFO:Set up simple imputation.
2024-05-09 01:51:36,993:INFO:Finished creating preprocessing pipeline.
2024-05-09 01:51:36,997:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Eduardo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-05-09 01:51:36,997:INFO:Creating final display dataframe.
2024-05-09 01:51:37,139:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           default
2                   Target type            Binary
3           Original data shape       (22800, 24)
4        Transformed data shape       (22800, 24)
5   Transformed train set shape       (15959, 24)
6    Transformed test set shape        (6841, 24)
7              Numeric features                23
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              cc0c
2024-05-09 01:51:37,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:37,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:37,285:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:37,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:51:37,287:INFO:setup() successfully completed in 0.99s...............
2024-05-09 01:51:37,295:INFO:Initializing compare_models()
2024-05-09 01:51:37,295:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, include=None, exclude=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-09 01:51:37,295:INFO:Checking exceptions
2024-05-09 01:51:37,307:INFO:Preparing display monitor
2024-05-09 01:51:37,327:INFO:Initializing Logistic Regression
2024-05-09 01:51:37,327:INFO:Total runtime is 0.0 minutes
2024-05-09 01:51:37,331:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:37,331:INFO:Initializing create_model()
2024-05-09 01:51:37,331:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:37,331:INFO:Checking exceptions
2024-05-09 01:51:37,331:INFO:Importing libraries
2024-05-09 01:51:37,331:INFO:Copying training dataset
2024-05-09 01:51:37,348:INFO:Defining folds
2024-05-09 01:51:37,348:INFO:Declaring metric variables
2024-05-09 01:51:37,350:INFO:Importing untrained model
2024-05-09 01:51:37,354:INFO:Logistic Regression Imported successfully
2024-05-09 01:51:37,361:INFO:Starting cross validation
2024-05-09 01:51:37,361:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:41,330:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 01:51:41,414:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 01:51:41,427:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 01:51:41,443:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 01:51:41,513:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 01:51:41,537:INFO:Calculating mean and std
2024-05-09 01:51:41,537:INFO:Creating metrics dataframe
2024-05-09 01:51:41,540:INFO:Uploading results into container
2024-05-09 01:51:41,540:INFO:Uploading model into container now
2024-05-09 01:51:41,540:INFO:_master_model_container: 1
2024-05-09 01:51:41,541:INFO:_display_container: 2
2024-05-09 01:51:41,541:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-09 01:51:41,541:INFO:create_model() successfully completed......................................
2024-05-09 01:51:41,602:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:41,602:INFO:Creating metrics dataframe
2024-05-09 01:51:41,609:INFO:Initializing K Neighbors Classifier
2024-05-09 01:51:41,610:INFO:Total runtime is 0.07138245900472005 minutes
2024-05-09 01:51:41,613:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:41,614:INFO:Initializing create_model()
2024-05-09 01:51:41,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:41,614:INFO:Checking exceptions
2024-05-09 01:51:41,614:INFO:Importing libraries
2024-05-09 01:51:41,614:INFO:Copying training dataset
2024-05-09 01:51:41,632:INFO:Defining folds
2024-05-09 01:51:41,632:INFO:Declaring metric variables
2024-05-09 01:51:41,635:INFO:Importing untrained model
2024-05-09 01:51:41,638:INFO:K Neighbors Classifier Imported successfully
2024-05-09 01:51:41,677:INFO:Starting cross validation
2024-05-09 01:51:41,679:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:44,105:INFO:Calculating mean and std
2024-05-09 01:51:44,105:INFO:Creating metrics dataframe
2024-05-09 01:51:44,107:INFO:Uploading results into container
2024-05-09 01:51:44,108:INFO:Uploading model into container now
2024-05-09 01:51:44,108:INFO:_master_model_container: 2
2024-05-09 01:51:44,109:INFO:_display_container: 2
2024-05-09 01:51:44,109:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 01:51:44,109:INFO:create_model() successfully completed......................................
2024-05-09 01:51:44,164:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:44,164:INFO:Creating metrics dataframe
2024-05-09 01:51:44,170:INFO:Initializing Naive Bayes
2024-05-09 01:51:44,170:INFO:Total runtime is 0.11404357751210531 minutes
2024-05-09 01:51:44,173:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:44,173:INFO:Initializing create_model()
2024-05-09 01:51:44,173:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:44,173:INFO:Checking exceptions
2024-05-09 01:51:44,174:INFO:Importing libraries
2024-05-09 01:51:44,174:INFO:Copying training dataset
2024-05-09 01:51:44,189:INFO:Defining folds
2024-05-09 01:51:44,189:INFO:Declaring metric variables
2024-05-09 01:51:44,192:INFO:Importing untrained model
2024-05-09 01:51:44,195:INFO:Naive Bayes Imported successfully
2024-05-09 01:51:44,200:INFO:Starting cross validation
2024-05-09 01:51:44,201:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:44,293:INFO:Calculating mean and std
2024-05-09 01:51:44,294:INFO:Creating metrics dataframe
2024-05-09 01:51:44,296:INFO:Uploading results into container
2024-05-09 01:51:44,296:INFO:Uploading model into container now
2024-05-09 01:51:44,296:INFO:_master_model_container: 3
2024-05-09 01:51:44,296:INFO:_display_container: 2
2024-05-09 01:51:44,296:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-09 01:51:44,297:INFO:create_model() successfully completed......................................
2024-05-09 01:51:44,350:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:44,350:INFO:Creating metrics dataframe
2024-05-09 01:51:44,400:INFO:Initializing Decision Tree Classifier
2024-05-09 01:51:44,400:INFO:Total runtime is 0.11788643995920818 minutes
2024-05-09 01:51:44,403:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:44,403:INFO:Initializing create_model()
2024-05-09 01:51:44,403:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:44,403:INFO:Checking exceptions
2024-05-09 01:51:44,403:INFO:Importing libraries
2024-05-09 01:51:44,404:INFO:Copying training dataset
2024-05-09 01:51:44,421:INFO:Defining folds
2024-05-09 01:51:44,421:INFO:Declaring metric variables
2024-05-09 01:51:44,423:INFO:Importing untrained model
2024-05-09 01:51:44,426:INFO:Decision Tree Classifier Imported successfully
2024-05-09 01:51:44,433:INFO:Starting cross validation
2024-05-09 01:51:44,433:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:44,796:INFO:Calculating mean and std
2024-05-09 01:51:44,797:INFO:Creating metrics dataframe
2024-05-09 01:51:44,799:INFO:Uploading results into container
2024-05-09 01:51:44,799:INFO:Uploading model into container now
2024-05-09 01:51:44,799:INFO:_master_model_container: 4
2024-05-09 01:51:44,800:INFO:_display_container: 2
2024-05-09 01:51:44,800:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 01:51:44,800:INFO:create_model() successfully completed......................................
2024-05-09 01:51:44,854:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:44,854:INFO:Creating metrics dataframe
2024-05-09 01:51:44,861:INFO:Initializing SVM - Linear Kernel
2024-05-09 01:51:44,861:INFO:Total runtime is 0.1255629380544027 minutes
2024-05-09 01:51:44,864:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:44,864:INFO:Initializing create_model()
2024-05-09 01:51:44,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:44,865:INFO:Checking exceptions
2024-05-09 01:51:44,865:INFO:Importing libraries
2024-05-09 01:51:44,865:INFO:Copying training dataset
2024-05-09 01:51:44,882:INFO:Defining folds
2024-05-09 01:51:44,882:INFO:Declaring metric variables
2024-05-09 01:51:44,885:INFO:Importing untrained model
2024-05-09 01:51:44,890:INFO:SVM - Linear Kernel Imported successfully
2024-05-09 01:51:44,896:INFO:Starting cross validation
2024-05-09 01:51:44,897:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:45,179:INFO:Calculating mean and std
2024-05-09 01:51:45,180:INFO:Creating metrics dataframe
2024-05-09 01:51:45,181:INFO:Uploading results into container
2024-05-09 01:51:45,182:INFO:Uploading model into container now
2024-05-09 01:51:45,182:INFO:_master_model_container: 5
2024-05-09 01:51:45,182:INFO:_display_container: 2
2024-05-09 01:51:45,183:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-09 01:51:45,183:INFO:create_model() successfully completed......................................
2024-05-09 01:51:45,238:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:45,238:INFO:Creating metrics dataframe
2024-05-09 01:51:45,245:INFO:Initializing Ridge Classifier
2024-05-09 01:51:45,245:INFO:Total runtime is 0.1319660027821859 minutes
2024-05-09 01:51:45,249:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:45,249:INFO:Initializing create_model()
2024-05-09 01:51:45,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:45,249:INFO:Checking exceptions
2024-05-09 01:51:45,249:INFO:Importing libraries
2024-05-09 01:51:45,250:INFO:Copying training dataset
2024-05-09 01:51:45,266:INFO:Defining folds
2024-05-09 01:51:45,266:INFO:Declaring metric variables
2024-05-09 01:51:45,267:INFO:Importing untrained model
2024-05-09 01:51:45,272:INFO:Ridge Classifier Imported successfully
2024-05-09 01:51:45,277:INFO:Starting cross validation
2024-05-09 01:51:45,278:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:45,365:INFO:Calculating mean and std
2024-05-09 01:51:45,365:INFO:Creating metrics dataframe
2024-05-09 01:51:45,367:INFO:Uploading results into container
2024-05-09 01:51:45,367:INFO:Uploading model into container now
2024-05-09 01:51:45,369:INFO:_master_model_container: 6
2024-05-09 01:51:45,369:INFO:_display_container: 2
2024-05-09 01:51:45,369:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-09 01:51:45,369:INFO:create_model() successfully completed......................................
2024-05-09 01:51:45,420:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:45,421:INFO:Creating metrics dataframe
2024-05-09 01:51:45,427:INFO:Initializing Random Forest Classifier
2024-05-09 01:51:45,427:INFO:Total runtime is 0.13500318527221683 minutes
2024-05-09 01:51:45,431:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:45,431:INFO:Initializing create_model()
2024-05-09 01:51:45,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:45,432:INFO:Checking exceptions
2024-05-09 01:51:45,432:INFO:Importing libraries
2024-05-09 01:51:45,432:INFO:Copying training dataset
2024-05-09 01:51:45,448:INFO:Defining folds
2024-05-09 01:51:45,448:INFO:Declaring metric variables
2024-05-09 01:51:45,451:INFO:Importing untrained model
2024-05-09 01:51:45,454:INFO:Random Forest Classifier Imported successfully
2024-05-09 01:51:45,461:INFO:Starting cross validation
2024-05-09 01:51:45,461:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:48,861:INFO:Calculating mean and std
2024-05-09 01:51:48,862:INFO:Creating metrics dataframe
2024-05-09 01:51:48,864:INFO:Uploading results into container
2024-05-09 01:51:48,865:INFO:Uploading model into container now
2024-05-09 01:51:48,865:INFO:_master_model_container: 7
2024-05-09 01:51:48,865:INFO:_display_container: 2
2024-05-09 01:51:48,866:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 01:51:48,866:INFO:create_model() successfully completed......................................
2024-05-09 01:51:48,928:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:48,929:INFO:Creating metrics dataframe
2024-05-09 01:51:48,937:INFO:Initializing Quadratic Discriminant Analysis
2024-05-09 01:51:48,937:INFO:Total runtime is 0.19349251588185631 minutes
2024-05-09 01:51:48,941:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:48,941:INFO:Initializing create_model()
2024-05-09 01:51:48,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:48,941:INFO:Checking exceptions
2024-05-09 01:51:48,941:INFO:Importing libraries
2024-05-09 01:51:48,941:INFO:Copying training dataset
2024-05-09 01:51:48,960:INFO:Defining folds
2024-05-09 01:51:48,960:INFO:Declaring metric variables
2024-05-09 01:51:48,963:INFO:Importing untrained model
2024-05-09 01:51:48,966:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-09 01:51:48,974:INFO:Starting cross validation
2024-05-09 01:51:48,975:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:49,084:INFO:Calculating mean and std
2024-05-09 01:51:49,084:INFO:Creating metrics dataframe
2024-05-09 01:51:49,086:INFO:Uploading results into container
2024-05-09 01:51:49,087:INFO:Uploading model into container now
2024-05-09 01:51:49,087:INFO:_master_model_container: 8
2024-05-09 01:51:49,087:INFO:_display_container: 2
2024-05-09 01:51:49,087:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-09 01:51:49,087:INFO:create_model() successfully completed......................................
2024-05-09 01:51:49,141:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:49,141:INFO:Creating metrics dataframe
2024-05-09 01:51:49,148:INFO:Initializing Ada Boost Classifier
2024-05-09 01:51:49,148:INFO:Total runtime is 0.19702409903208418 minutes
2024-05-09 01:51:49,152:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:49,152:INFO:Initializing create_model()
2024-05-09 01:51:49,152:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:49,152:INFO:Checking exceptions
2024-05-09 01:51:49,152:INFO:Importing libraries
2024-05-09 01:51:49,152:INFO:Copying training dataset
2024-05-09 01:51:49,171:INFO:Defining folds
2024-05-09 01:51:49,171:INFO:Declaring metric variables
2024-05-09 01:51:49,173:INFO:Importing untrained model
2024-05-09 01:51:49,177:INFO:Ada Boost Classifier Imported successfully
2024-05-09 01:51:49,183:INFO:Starting cross validation
2024-05-09 01:51:49,184:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:49,219:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 01:51:49,224:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 01:51:49,226:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 01:51:49,231:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 01:51:49,240:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 01:51:50,482:INFO:Calculating mean and std
2024-05-09 01:51:50,686:INFO:Creating metrics dataframe
2024-05-09 01:51:50,687:INFO:Uploading results into container
2024-05-09 01:51:50,688:INFO:Uploading model into container now
2024-05-09 01:51:50,688:INFO:_master_model_container: 9
2024-05-09 01:51:50,688:INFO:_display_container: 2
2024-05-09 01:51:50,688:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-09 01:51:50,689:INFO:create_model() successfully completed......................................
2024-05-09 01:51:50,739:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:50,739:INFO:Creating metrics dataframe
2024-05-09 01:51:50,747:INFO:Initializing Gradient Boosting Classifier
2024-05-09 01:51:50,747:INFO:Total runtime is 0.2236720124880473 minutes
2024-05-09 01:51:50,750:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:50,750:INFO:Initializing create_model()
2024-05-09 01:51:50,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:50,750:INFO:Checking exceptions
2024-05-09 01:51:50,751:INFO:Importing libraries
2024-05-09 01:51:50,751:INFO:Copying training dataset
2024-05-09 01:51:50,766:INFO:Defining folds
2024-05-09 01:51:50,766:INFO:Declaring metric variables
2024-05-09 01:51:50,768:INFO:Importing untrained model
2024-05-09 01:51:50,772:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 01:51:50,777:INFO:Starting cross validation
2024-05-09 01:51:50,778:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:55,969:INFO:Calculating mean and std
2024-05-09 01:51:55,970:INFO:Creating metrics dataframe
2024-05-09 01:51:55,971:INFO:Uploading results into container
2024-05-09 01:51:55,972:INFO:Uploading model into container now
2024-05-09 01:51:55,972:INFO:_master_model_container: 10
2024-05-09 01:51:55,972:INFO:_display_container: 2
2024-05-09 01:51:55,972:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 01:51:55,973:INFO:create_model() successfully completed......................................
2024-05-09 01:51:56,031:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:56,031:INFO:Creating metrics dataframe
2024-05-09 01:51:56,040:INFO:Initializing Linear Discriminant Analysis
2024-05-09 01:51:56,040:INFO:Total runtime is 0.31187736193339033 minutes
2024-05-09 01:51:56,044:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:56,044:INFO:Initializing create_model()
2024-05-09 01:51:56,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:56,045:INFO:Checking exceptions
2024-05-09 01:51:56,045:INFO:Importing libraries
2024-05-09 01:51:56,045:INFO:Copying training dataset
2024-05-09 01:51:56,062:INFO:Defining folds
2024-05-09 01:51:56,062:INFO:Declaring metric variables
2024-05-09 01:51:56,065:INFO:Importing untrained model
2024-05-09 01:51:56,068:INFO:Linear Discriminant Analysis Imported successfully
2024-05-09 01:51:56,075:INFO:Starting cross validation
2024-05-09 01:51:56,075:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:56,182:INFO:Calculating mean and std
2024-05-09 01:51:56,183:INFO:Creating metrics dataframe
2024-05-09 01:51:56,184:INFO:Uploading results into container
2024-05-09 01:51:56,185:INFO:Uploading model into container now
2024-05-09 01:51:56,185:INFO:_master_model_container: 11
2024-05-09 01:51:56,185:INFO:_display_container: 2
2024-05-09 01:51:56,185:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-09 01:51:56,186:INFO:create_model() successfully completed......................................
2024-05-09 01:51:56,242:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:56,242:INFO:Creating metrics dataframe
2024-05-09 01:51:56,250:INFO:Initializing Extra Trees Classifier
2024-05-09 01:51:56,250:INFO:Total runtime is 0.31538698673248294 minutes
2024-05-09 01:51:56,254:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:56,254:INFO:Initializing create_model()
2024-05-09 01:51:56,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:56,255:INFO:Checking exceptions
2024-05-09 01:51:56,255:INFO:Importing libraries
2024-05-09 01:51:56,255:INFO:Copying training dataset
2024-05-09 01:51:56,272:INFO:Defining folds
2024-05-09 01:51:56,272:INFO:Declaring metric variables
2024-05-09 01:51:56,275:INFO:Importing untrained model
2024-05-09 01:51:56,277:INFO:Extra Trees Classifier Imported successfully
2024-05-09 01:51:56,284:INFO:Starting cross validation
2024-05-09 01:51:56,285:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:57,725:INFO:Calculating mean and std
2024-05-09 01:51:57,725:INFO:Creating metrics dataframe
2024-05-09 01:51:57,727:INFO:Uploading results into container
2024-05-09 01:51:57,727:INFO:Uploading model into container now
2024-05-09 01:51:57,727:INFO:_master_model_container: 12
2024-05-09 01:51:57,727:INFO:_display_container: 2
2024-05-09 01:51:57,728:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-09 01:51:57,728:INFO:create_model() successfully completed......................................
2024-05-09 01:51:57,783:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:57,783:INFO:Creating metrics dataframe
2024-05-09 01:51:57,791:INFO:Initializing Light Gradient Boosting Machine
2024-05-09 01:51:57,791:INFO:Total runtime is 0.3410679618517558 minutes
2024-05-09 01:51:57,796:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:57,796:INFO:Initializing create_model()
2024-05-09 01:51:57,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:57,796:INFO:Checking exceptions
2024-05-09 01:51:57,797:INFO:Importing libraries
2024-05-09 01:51:57,797:INFO:Copying training dataset
2024-05-09 01:51:57,813:INFO:Defining folds
2024-05-09 01:51:57,813:INFO:Declaring metric variables
2024-05-09 01:51:57,816:INFO:Importing untrained model
2024-05-09 01:51:57,819:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-09 01:51:57,825:INFO:Starting cross validation
2024-05-09 01:51:57,826:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:58,486:INFO:Calculating mean and std
2024-05-09 01:51:58,487:INFO:Creating metrics dataframe
2024-05-09 01:51:58,488:INFO:Uploading results into container
2024-05-09 01:51:58,489:INFO:Uploading model into container now
2024-05-09 01:51:58,489:INFO:_master_model_container: 13
2024-05-09 01:51:58,489:INFO:_display_container: 2
2024-05-09 01:51:58,489:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-09 01:51:58,490:INFO:create_model() successfully completed......................................
2024-05-09 01:51:58,544:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:58,544:INFO:Creating metrics dataframe
2024-05-09 01:51:58,553:INFO:Initializing Dummy Classifier
2024-05-09 01:51:58,553:INFO:Total runtime is 0.3537622332572937 minutes
2024-05-09 01:51:58,555:INFO:SubProcess create_model() called ==================================
2024-05-09 01:51:58,556:INFO:Initializing create_model()
2024-05-09 01:51:58,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81579EE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:58,556:INFO:Checking exceptions
2024-05-09 01:51:58,556:INFO:Importing libraries
2024-05-09 01:51:58,556:INFO:Copying training dataset
2024-05-09 01:51:58,572:INFO:Defining folds
2024-05-09 01:51:58,572:INFO:Declaring metric variables
2024-05-09 01:51:58,575:INFO:Importing untrained model
2024-05-09 01:51:58,578:INFO:Dummy Classifier Imported successfully
2024-05-09 01:51:58,583:INFO:Starting cross validation
2024-05-09 01:51:58,584:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:51:58,631:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 01:51:58,635:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 01:51:58,638:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 01:51:58,640:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 01:51:58,644:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 01:51:58,652:INFO:Calculating mean and std
2024-05-09 01:51:58,653:INFO:Creating metrics dataframe
2024-05-09 01:51:58,655:INFO:Uploading results into container
2024-05-09 01:51:58,655:INFO:Uploading model into container now
2024-05-09 01:51:58,655:INFO:_master_model_container: 14
2024-05-09 01:51:58,655:INFO:_display_container: 2
2024-05-09 01:51:58,656:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-09 01:51:58,656:INFO:create_model() successfully completed......................................
2024-05-09 01:51:58,707:INFO:SubProcess create_model() end ==================================
2024-05-09 01:51:58,707:INFO:Creating metrics dataframe
2024-05-09 01:51:58,717:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-05-09 01:51:58,724:INFO:Initializing create_model()
2024-05-09 01:51:58,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:51:58,725:INFO:Checking exceptions
2024-05-09 01:51:58,726:INFO:Importing libraries
2024-05-09 01:51:58,726:INFO:Copying training dataset
2024-05-09 01:51:58,743:INFO:Defining folds
2024-05-09 01:51:58,743:INFO:Declaring metric variables
2024-05-09 01:51:58,743:INFO:Importing untrained model
2024-05-09 01:51:58,743:INFO:Declaring custom model
2024-05-09 01:51:58,744:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 01:51:58,744:INFO:Cross validation set to False
2024-05-09 01:51:58,744:INFO:Fitting Model
2024-05-09 01:52:04,763:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 01:52:04,763:INFO:create_model() successfully completed......................................
2024-05-09 01:52:04,852:INFO:_master_model_container: 14
2024-05-09 01:52:04,852:INFO:_display_container: 2
2024-05-09 01:52:04,853:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 01:52:04,853:INFO:compare_models() successfully completed......................................
2024-05-09 01:52:05,886:INFO:gpu_param set to False
2024-05-09 01:52:05,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:52:05,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:52:06,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:52:06,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 01:52:06,050:INFO:Initializing create_model()
2024-05-09 01:52:06,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:52:06,051:INFO:Checking exceptions
2024-05-09 01:52:06,065:INFO:Importing libraries
2024-05-09 01:52:06,065:INFO:Copying training dataset
2024-05-09 01:52:06,088:INFO:Defining folds
2024-05-09 01:52:06,088:INFO:Declaring metric variables
2024-05-09 01:52:06,093:INFO:Importing untrained model
2024-05-09 01:52:06,098:INFO:Decision Tree Classifier Imported successfully
2024-05-09 01:52:06,104:INFO:Starting cross validation
2024-05-09 01:52:06,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:52:07,058:INFO:Calculating mean and std
2024-05-09 01:52:07,058:INFO:Creating metrics dataframe
2024-05-09 01:52:07,064:INFO:Finalizing model
2024-05-09 01:52:07,474:INFO:Uploading results into container
2024-05-09 01:52:07,474:INFO:Uploading model into container now
2024-05-09 01:52:07,485:INFO:_master_model_container: 15
2024-05-09 01:52:07,485:INFO:_display_container: 3
2024-05-09 01:52:07,485:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 01:52:07,485:INFO:create_model() successfully completed......................................
2024-05-09 01:52:08,840:INFO:Initializing create_model()
2024-05-09 01:52:08,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:52:08,840:INFO:Checking exceptions
2024-05-09 01:52:08,852:INFO:Importing libraries
2024-05-09 01:52:08,852:INFO:Copying training dataset
2024-05-09 01:52:08,871:INFO:Defining folds
2024-05-09 01:52:08,872:INFO:Declaring metric variables
2024-05-09 01:52:08,874:INFO:Importing untrained model
2024-05-09 01:52:08,878:INFO:K Neighbors Classifier Imported successfully
2024-05-09 01:52:08,885:INFO:Starting cross validation
2024-05-09 01:52:08,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:52:09,841:INFO:Calculating mean and std
2024-05-09 01:52:09,841:INFO:Creating metrics dataframe
2024-05-09 01:52:09,846:INFO:Finalizing model
2024-05-09 01:52:09,871:INFO:Uploading results into container
2024-05-09 01:52:09,872:INFO:Uploading model into container now
2024-05-09 01:52:09,882:INFO:_master_model_container: 16
2024-05-09 01:52:09,882:INFO:_display_container: 4
2024-05-09 01:52:09,882:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 01:52:09,882:INFO:create_model() successfully completed......................................
2024-05-09 01:52:09,966:INFO:Initializing create_model()
2024-05-09 01:52:09,966:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:52:09,966:INFO:Checking exceptions
2024-05-09 01:52:09,980:INFO:Importing libraries
2024-05-09 01:52:09,980:INFO:Copying training dataset
2024-05-09 01:52:10,000:INFO:Defining folds
2024-05-09 01:52:10,001:INFO:Declaring metric variables
2024-05-09 01:52:10,005:INFO:Importing untrained model
2024-05-09 01:52:10,008:INFO:Random Forest Classifier Imported successfully
2024-05-09 01:52:10,016:INFO:Starting cross validation
2024-05-09 01:52:10,017:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:52:18,277:INFO:Calculating mean and std
2024-05-09 01:52:18,278:INFO:Creating metrics dataframe
2024-05-09 01:52:18,282:INFO:Finalizing model
2024-05-09 01:52:19,210:INFO:Uploading results into container
2024-05-09 01:52:19,211:INFO:Uploading model into container now
2024-05-09 01:52:19,221:INFO:_master_model_container: 17
2024-05-09 01:52:19,221:INFO:_display_container: 5
2024-05-09 01:52:19,222:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 01:52:19,222:INFO:create_model() successfully completed......................................
2024-05-09 01:52:19,300:INFO:Initializing tune_model()
2024-05-09 01:52:19,300:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 01:52:19,300:INFO:Checking exceptions
2024-05-09 01:52:19,321:INFO:Copying training dataset
2024-05-09 01:52:19,333:INFO:Checking base model
2024-05-09 01:52:19,333:INFO:Base model : Decision Tree Classifier
2024-05-09 01:52:19,337:INFO:Declaring metric variables
2024-05-09 01:52:19,340:INFO:Defining Hyperparameters
2024-05-09 01:52:19,398:INFO:Tuning with n_jobs=-1
2024-05-09 01:52:19,398:INFO:Initializing RandomizedSearchCV
2024-05-09 01:52:21,080:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 1, 'actual_estimator__criterion': 'gini'}
2024-05-09 01:52:21,080:INFO:Hyperparameter search completed
2024-05-09 01:52:21,081:INFO:SubProcess create_model() called ==================================
2024-05-09 01:52:21,081:INFO:Initializing create_model()
2024-05-09 01:52:21,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A8150F7E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 1, 'criterion': 'gini'})
2024-05-09 01:52:21,083:INFO:Checking exceptions
2024-05-09 01:52:21,083:INFO:Importing libraries
2024-05-09 01:52:21,083:INFO:Copying training dataset
2024-05-09 01:52:21,104:INFO:Defining folds
2024-05-09 01:52:21,104:INFO:Declaring metric variables
2024-05-09 01:52:21,107:INFO:Importing untrained model
2024-05-09 01:52:21,107:INFO:Declaring custom model
2024-05-09 01:52:21,110:INFO:Decision Tree Classifier Imported successfully
2024-05-09 01:52:21,118:INFO:Starting cross validation
2024-05-09 01:52:21,119:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:52:21,330:INFO:Calculating mean and std
2024-05-09 01:52:21,331:INFO:Creating metrics dataframe
2024-05-09 01:52:21,337:INFO:Finalizing model
2024-05-09 01:52:21,384:INFO:Uploading results into container
2024-05-09 01:52:21,385:INFO:Uploading model into container now
2024-05-09 01:52:21,386:INFO:_master_model_container: 18
2024-05-09 01:52:21,386:INFO:_display_container: 6
2024-05-09 01:52:21,387:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 01:52:21,387:INFO:create_model() successfully completed......................................
2024-05-09 01:52:21,466:INFO:SubProcess create_model() end ==================================
2024-05-09 01:52:21,466:INFO:choose_better activated
2024-05-09 01:52:21,470:INFO:SubProcess create_model() called ==================================
2024-05-09 01:52:21,471:INFO:Initializing create_model()
2024-05-09 01:52:21,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:52:21,472:INFO:Checking exceptions
2024-05-09 01:52:21,474:INFO:Importing libraries
2024-05-09 01:52:21,474:INFO:Copying training dataset
2024-05-09 01:52:21,496:INFO:Defining folds
2024-05-09 01:52:21,497:INFO:Declaring metric variables
2024-05-09 01:52:21,497:INFO:Importing untrained model
2024-05-09 01:52:21,497:INFO:Declaring custom model
2024-05-09 01:52:21,497:INFO:Decision Tree Classifier Imported successfully
2024-05-09 01:52:21,497:INFO:Starting cross validation
2024-05-09 01:52:21,498:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:52:22,682:INFO:Calculating mean and std
2024-05-09 01:52:22,683:INFO:Creating metrics dataframe
2024-05-09 01:52:22,684:INFO:Finalizing model
2024-05-09 01:52:23,104:INFO:Uploading results into container
2024-05-09 01:52:23,106:INFO:Uploading model into container now
2024-05-09 01:52:23,107:INFO:_master_model_container: 19
2024-05-09 01:52:23,107:INFO:_display_container: 7
2024-05-09 01:52:23,107:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 01:52:23,108:INFO:create_model() successfully completed......................................
2024-05-09 01:52:23,170:INFO:SubProcess create_model() end ==================================
2024-05-09 01:52:23,170:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.7295
2024-05-09 01:52:23,171:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.8225
2024-05-09 01:52:23,171:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') is best model
2024-05-09 01:52:23,171:INFO:choose_better completed
2024-05-09 01:52:23,179:INFO:_master_model_container: 19
2024-05-09 01:52:23,180:INFO:_display_container: 6
2024-05-09 01:52:23,180:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 01:52:23,180:INFO:tune_model() successfully completed......................................
2024-05-09 01:52:23,344:INFO:Initializing tune_model()
2024-05-09 01:52:23,344:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, n_iter=10, custom_grid={'n_neighbors': array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 01:52:23,344:INFO:Checking exceptions
2024-05-09 01:52:23,363:INFO:Copying training dataset
2024-05-09 01:52:23,375:INFO:Checking base model
2024-05-09 01:52:23,375:INFO:Base model : K Neighbors Classifier
2024-05-09 01:52:23,379:INFO:Declaring metric variables
2024-05-09 01:52:23,381:INFO:Defining Hyperparameters
2024-05-09 01:52:23,471:INFO:custom_grid: {'actual_estimator__n_neighbors': array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])}
2024-05-09 01:52:23,471:INFO:Tuning with n_jobs=-1
2024-05-09 01:52:23,471:INFO:Initializing RandomizedSearchCV
2024-05-09 01:52:28,084:INFO:best_params: {'actual_estimator__n_neighbors': 42}
2024-05-09 01:52:28,085:INFO:Hyperparameter search completed
2024-05-09 01:52:28,085:INFO:SubProcess create_model() called ==================================
2024-05-09 01:52:28,086:INFO:Initializing create_model()
2024-05-09 01:52:28,086:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A8153B2950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_neighbors': 42})
2024-05-09 01:52:28,086:INFO:Checking exceptions
2024-05-09 01:52:28,086:INFO:Importing libraries
2024-05-09 01:52:28,086:INFO:Copying training dataset
2024-05-09 01:52:28,104:INFO:Defining folds
2024-05-09 01:52:28,104:INFO:Declaring metric variables
2024-05-09 01:52:28,107:INFO:Importing untrained model
2024-05-09 01:52:28,107:INFO:Declaring custom model
2024-05-09 01:52:28,110:INFO:K Neighbors Classifier Imported successfully
2024-05-09 01:52:28,116:INFO:Starting cross validation
2024-05-09 01:52:28,118:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:52:28,925:INFO:Calculating mean and std
2024-05-09 01:52:28,925:INFO:Creating metrics dataframe
2024-05-09 01:52:28,931:INFO:Finalizing model
2024-05-09 01:52:28,953:INFO:Uploading results into container
2024-05-09 01:52:28,954:INFO:Uploading model into container now
2024-05-09 01:52:28,955:INFO:_master_model_container: 20
2024-05-09 01:52:28,955:INFO:_display_container: 7
2024-05-09 01:52:28,955:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,
                     weights='uniform')
2024-05-09 01:52:28,955:INFO:create_model() successfully completed......................................
2024-05-09 01:52:29,015:INFO:SubProcess create_model() end ==================================
2024-05-09 01:52:29,016:INFO:choose_better activated
2024-05-09 01:52:29,018:INFO:SubProcess create_model() called ==================================
2024-05-09 01:52:29,018:INFO:Initializing create_model()
2024-05-09 01:52:29,018:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:52:29,019:INFO:Checking exceptions
2024-05-09 01:52:29,020:INFO:Importing libraries
2024-05-09 01:52:29,020:INFO:Copying training dataset
2024-05-09 01:52:29,038:INFO:Defining folds
2024-05-09 01:52:29,038:INFO:Declaring metric variables
2024-05-09 01:52:29,038:INFO:Importing untrained model
2024-05-09 01:52:29,039:INFO:Declaring custom model
2024-05-09 01:52:29,039:INFO:K Neighbors Classifier Imported successfully
2024-05-09 01:52:29,039:INFO:Starting cross validation
2024-05-09 01:52:29,040:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:52:29,752:INFO:Calculating mean and std
2024-05-09 01:52:29,752:INFO:Creating metrics dataframe
2024-05-09 01:52:29,753:INFO:Finalizing model
2024-05-09 01:52:29,771:INFO:Uploading results into container
2024-05-09 01:52:29,772:INFO:Uploading model into container now
2024-05-09 01:52:29,772:INFO:_master_model_container: 21
2024-05-09 01:52:29,772:INFO:_display_container: 8
2024-05-09 01:52:29,773:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 01:52:29,773:INFO:create_model() successfully completed......................................
2024-05-09 01:52:29,832:INFO:SubProcess create_model() end ==================================
2024-05-09 01:52:29,832:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') result for Accuracy is 0.7504
2024-05-09 01:52:29,832:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,
                     weights='uniform') result for Accuracy is 0.7802
2024-05-09 01:52:29,833:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,
                     weights='uniform') is best model
2024-05-09 01:52:29,833:INFO:choose_better completed
2024-05-09 01:52:29,842:INFO:_master_model_container: 21
2024-05-09 01:52:29,842:INFO:_display_container: 7
2024-05-09 01:52:29,843:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,
                     weights='uniform')
2024-05-09 01:52:29,843:INFO:tune_model() successfully completed......................................
2024-05-09 01:52:29,941:INFO:Initializing tune_model()
2024-05-09 01:52:29,942:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 01:52:29,942:INFO:Checking exceptions
2024-05-09 01:52:29,961:INFO:Copying training dataset
2024-05-09 01:52:29,973:INFO:Checking base model
2024-05-09 01:52:29,973:INFO:Base model : Random Forest Classifier
2024-05-09 01:52:29,976:INFO:Declaring metric variables
2024-05-09 01:52:29,979:INFO:Defining Hyperparameters
2024-05-09 01:52:30,038:INFO:Tuning with n_jobs=-1
2024-05-09 01:52:30,038:INFO:Initializing RandomizedSearchCV
2024-05-09 01:54:12,142:INFO:best_params: {'actual_estimator__n_estimators': 130, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': True}
2024-05-09 01:54:12,143:INFO:Hyperparameter search completed
2024-05-09 01:54:12,143:INFO:SubProcess create_model() called ==================================
2024-05-09 01:54:12,144:INFO:Initializing create_model()
2024-05-09 01:54:12,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A81555A410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 130, 'min_samples_split': 9, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.0002, 'max_features': 'log2', 'max_depth': 4, 'criterion': 'entropy', 'class_weight': 'balanced_subsample', 'bootstrap': True})
2024-05-09 01:54:12,144:INFO:Checking exceptions
2024-05-09 01:54:12,144:INFO:Importing libraries
2024-05-09 01:54:12,144:INFO:Copying training dataset
2024-05-09 01:54:12,165:INFO:Defining folds
2024-05-09 01:54:12,165:INFO:Declaring metric variables
2024-05-09 01:54:12,168:INFO:Importing untrained model
2024-05-09 01:54:12,168:INFO:Declaring custom model
2024-05-09 01:54:12,172:INFO:Random Forest Classifier Imported successfully
2024-05-09 01:54:12,178:INFO:Starting cross validation
2024-05-09 01:54:12,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:54:16,542:INFO:Calculating mean and std
2024-05-09 01:54:16,543:INFO:Creating metrics dataframe
2024-05-09 01:54:16,549:INFO:Finalizing model
2024-05-09 01:54:17,226:INFO:Uploading results into container
2024-05-09 01:54:17,227:INFO:Uploading model into container now
2024-05-09 01:54:17,228:INFO:_master_model_container: 22
2024-05-09 01:54:17,228:INFO:_display_container: 8
2024-05-09 01:54:17,229:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-05-09 01:54:17,229:INFO:create_model() successfully completed......................................
2024-05-09 01:54:17,297:INFO:SubProcess create_model() end ==================================
2024-05-09 01:54:17,297:INFO:choose_better activated
2024-05-09 01:54:17,299:INFO:SubProcess create_model() called ==================================
2024-05-09 01:54:17,300:INFO:Initializing create_model()
2024-05-09 01:54:17,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:54:17,300:INFO:Checking exceptions
2024-05-09 01:54:17,302:INFO:Importing libraries
2024-05-09 01:54:17,302:INFO:Copying training dataset
2024-05-09 01:54:17,320:INFO:Defining folds
2024-05-09 01:54:17,320:INFO:Declaring metric variables
2024-05-09 01:54:17,321:INFO:Importing untrained model
2024-05-09 01:54:17,321:INFO:Declaring custom model
2024-05-09 01:54:17,321:INFO:Random Forest Classifier Imported successfully
2024-05-09 01:54:17,321:INFO:Starting cross validation
2024-05-09 01:54:17,322:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 01:54:25,377:INFO:Calculating mean and std
2024-05-09 01:54:25,378:INFO:Creating metrics dataframe
2024-05-09 01:54:25,380:INFO:Finalizing model
2024-05-09 01:54:26,393:INFO:Uploading results into container
2024-05-09 01:54:26,393:INFO:Uploading model into container now
2024-05-09 01:54:26,394:INFO:_master_model_container: 23
2024-05-09 01:54:26,394:INFO:_display_container: 9
2024-05-09 01:54:26,394:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 01:54:26,394:INFO:create_model() successfully completed......................................
2024-05-09 01:54:26,454:INFO:SubProcess create_model() end ==================================
2024-05-09 01:54:26,454:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for F1 is 0.4864
2024-05-09 01:54:26,456:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for F1 is 0.5513
2024-05-09 01:54:26,457:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2024-05-09 01:54:26,457:INFO:choose_better completed
2024-05-09 01:54:26,466:INFO:_master_model_container: 23
2024-05-09 01:54:26,466:INFO:_display_container: 8
2024-05-09 01:54:26,466:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-05-09 01:54:26,466:INFO:tune_model() successfully completed......................................
2024-05-09 01:54:26,549:INFO:Initializing plot_model()
2024-05-09 01:54:26,549:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 01:54:26,549:INFO:Checking exceptions
2024-05-09 01:54:26,575:INFO:Preloading libraries
2024-05-09 01:54:26,585:INFO:Copying training dataset
2024-05-09 01:54:26,585:INFO:Plot type: auc
2024-05-09 01:54:26,720:INFO:Fitting Model
2024-05-09 01:54:26,721:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 01:54:26,722:INFO:Scoring test/hold-out set
2024-05-09 01:54:27,012:INFO:Visual Rendered Successfully
2024-05-09 01:54:27,069:INFO:plot_model() successfully completed......................................
2024-05-09 01:54:27,084:INFO:Initializing plot_model()
2024-05-09 01:54:27,084:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=pr, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 01:54:27,084:INFO:Checking exceptions
2024-05-09 01:54:27,109:INFO:Preloading libraries
2024-05-09 01:54:27,120:INFO:Copying training dataset
2024-05-09 01:54:27,120:INFO:Plot type: pr
2024-05-09 01:54:27,259:INFO:Fitting Model
2024-05-09 01:54:27,260:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 01:54:27,260:INFO:Scoring test/hold-out set
2024-05-09 01:54:27,522:INFO:Visual Rendered Successfully
2024-05-09 01:54:27,578:INFO:plot_model() successfully completed......................................
2024-05-09 01:54:27,587:INFO:Initializing plot_model()
2024-05-09 01:54:27,587:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 01:54:27,587:INFO:Checking exceptions
2024-05-09 01:54:27,621:INFO:Preloading libraries
2024-05-09 01:54:27,630:INFO:Copying training dataset
2024-05-09 01:54:27,630:INFO:Plot type: feature
2024-05-09 01:54:27,631:WARNING:No coef_ found. Trying feature_importances_
2024-05-09 01:54:27,834:INFO:Visual Rendered Successfully
2024-05-09 01:54:27,893:INFO:plot_model() successfully completed......................................
2024-05-09 01:54:27,906:INFO:Initializing plot_model()
2024-05-09 01:54:27,906:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 01:54:27,906:INFO:Checking exceptions
2024-05-09 01:54:27,943:INFO:Preloading libraries
2024-05-09 01:54:27,952:INFO:Copying training dataset
2024-05-09 01:54:27,952:INFO:Plot type: confusion_matrix
2024-05-09 01:54:28,091:INFO:Fitting Model
2024-05-09 01:54:28,091:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 01:54:28,091:INFO:Scoring test/hold-out set
2024-05-09 01:54:28,273:INFO:Visual Rendered Successfully
2024-05-09 01:54:28,332:INFO:plot_model() successfully completed......................................
2024-05-09 01:54:28,340:INFO:Initializing evaluate_model()
2024-05-09 01:54:28,341:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-09 01:54:28,388:INFO:Initializing plot_model()
2024-05-09 01:54:28,388:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:54:28,389:INFO:Checking exceptions
2024-05-09 01:54:28,434:INFO:Preloading libraries
2024-05-09 01:54:28,443:INFO:Copying training dataset
2024-05-09 01:54:28,443:INFO:Plot type: pipeline
2024-05-09 01:54:28,557:INFO:Visual Rendered Successfully
2024-05-09 01:54:28,617:INFO:plot_model() successfully completed......................................
2024-05-09 01:54:28,632:INFO:Initializing predict_model()
2024-05-09 01:54:28,633:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A8159984A0>)
2024-05-09 01:54:28,633:INFO:Checking exceptions
2024-05-09 01:54:28,633:INFO:Preloading libraries
2024-05-09 01:54:28,884:INFO:Initializing finalize_model()
2024-05-09 01:54:28,884:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 01:54:28,884:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-05-09 01:54:28,895:INFO:Initializing create_model()
2024-05-09 01:54:28,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 01:54:28,896:INFO:Checking exceptions
2024-05-09 01:54:28,898:INFO:Importing libraries
2024-05-09 01:54:28,898:INFO:Copying training dataset
2024-05-09 01:54:28,899:INFO:Defining folds
2024-05-09 01:54:28,899:INFO:Declaring metric variables
2024-05-09 01:54:28,899:INFO:Importing untrained model
2024-05-09 01:54:28,900:INFO:Declaring custom model
2024-05-09 01:54:28,900:INFO:Random Forest Classifier Imported successfully
2024-05-09 01:54:28,901:INFO:Cross validation set to False
2024-05-09 01:54:28,901:INFO:Fitting Model
2024-05-09 01:54:29,803:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-09 01:54:29,804:INFO:create_model() successfully completed......................................
2024-05-09 01:54:29,864:INFO:_master_model_container: 23
2024-05-09 01:54:29,864:INFO:_display_container: 9
2024-05-09 01:54:29,869:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-09 01:54:29,869:INFO:finalize_model() successfully completed......................................
2024-05-09 01:54:29,984:INFO:Initializing predict_model()
2024-05-09 01:54:29,984:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A8159984A0>)
2024-05-09 01:54:29,984:INFO:Checking exceptions
2024-05-09 01:54:29,984:INFO:Preloading libraries
2024-05-09 01:54:30,245:INFO:Initializing predict_model()
2024-05-09 01:54:30,245:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A8153F07C0>)
2024-05-09 01:54:30,245:INFO:Checking exceptions
2024-05-09 01:54:30,245:INFO:Preloading libraries
2024-05-09 01:54:30,247:INFO:Set up data.
2024-05-09 01:54:30,254:INFO:Set up index.
2024-05-09 01:54:30,578:INFO:Initializing save_model()
2024-05-09 01:54:30,578:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=Final RF Model 01Jun2022, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Eduardo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-09 01:54:30,578:INFO:Adding model into prep_pipe
2024-05-09 01:54:30,578:WARNING:Only Model saved as it was a pipeline.
2024-05-09 01:54:30,620:INFO:Final RF Model 01Jun2022.pkl saved in current working directory
2024-05-09 01:54:30,624:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-09 01:54:30,624:INFO:save_model() successfully completed......................................
2024-05-09 01:54:30,818:INFO:Initializing load_model()
2024-05-09 01:54:30,818:INFO:load_model(model_name=Final RF Model 01Jun2022, platform=None, authentication=None, verbose=True)
2024-05-09 01:54:30,881:INFO:Initializing predict_model()
2024-05-09 01:54:30,881:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Eduardo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             '...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A8153F00E0>)
2024-05-09 01:54:30,881:INFO:Checking exceptions
2024-05-09 01:54:30,881:INFO:Preloading libraries
2024-05-09 01:54:30,883:INFO:Set up data.
2024-05-09 01:54:30,889:INFO:Set up index.
2024-05-09 01:54:38,711:INFO:Initializing plot_model()
2024-05-09 01:54:38,711:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=auc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:54:38,711:INFO:Checking exceptions
2024-05-09 01:54:38,744:INFO:Preloading libraries
2024-05-09 01:54:38,753:INFO:Copying training dataset
2024-05-09 01:54:38,753:INFO:Plot type: auc
2024-05-09 01:54:38,879:INFO:Fitting Model
2024-05-09 01:54:38,880:WARNING:c:\Users\Eduardo\Documents\.conda\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 01:54:38,880:INFO:Scoring test/hold-out set
2024-05-09 01:54:39,148:INFO:Visual Rendered Successfully
2024-05-09 01:54:39,222:INFO:plot_model() successfully completed......................................
2024-05-09 01:54:40,994:INFO:Initializing plot_model()
2024-05-09 01:54:40,994:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=calibration, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:54:40,994:INFO:Checking exceptions
2024-05-09 01:54:41,027:INFO:Preloading libraries
2024-05-09 01:54:41,035:INFO:Copying training dataset
2024-05-09 01:54:41,035:INFO:Plot type: calibration
2024-05-09 01:54:41,046:INFO:Scoring test/hold-out set
2024-05-09 01:54:41,278:INFO:Visual Rendered Successfully
2024-05-09 01:54:41,333:INFO:plot_model() successfully completed......................................
2024-05-09 01:54:43,751:INFO:Initializing plot_model()
2024-05-09 01:54:43,751:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=ks, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:54:43,751:INFO:Checking exceptions
2024-05-09 01:54:43,793:INFO:Preloading libraries
2024-05-09 01:54:43,802:INFO:Copying training dataset
2024-05-09 01:54:43,802:INFO:Plot type: ks
2024-05-09 01:54:43,802:INFO:Generating predictions / predict_proba on X_test
2024-05-09 01:54:44,084:INFO:Visual Rendered Successfully
2024-05-09 01:54:44,141:INFO:plot_model() successfully completed......................................
2024-05-09 01:54:48,237:INFO:Initializing plot_model()
2024-05-09 01:54:48,237:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=tree, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:54:48,237:INFO:Checking exceptions
2024-05-09 01:54:48,274:INFO:Preloading libraries
2024-05-09 01:54:48,282:INFO:Copying training dataset
2024-05-09 01:54:48,282:INFO:Plot type: tree
2024-05-09 01:54:49,834:INFO:Plotting decision trees
2024-05-09 01:55:12,284:INFO:Initializing plot_model()
2024-05-09 01:55:12,284:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=gain, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:55:12,284:INFO:Checking exceptions
2024-05-09 01:55:12,343:INFO:Preloading libraries
2024-05-09 01:55:12,352:INFO:Copying training dataset
2024-05-09 01:55:12,352:INFO:Plot type: gain
2024-05-09 01:55:12,352:INFO:Generating predictions / predict_proba on X_test
2024-05-09 01:55:12,609:INFO:Visual Rendered Successfully
2024-05-09 01:55:12,824:INFO:plot_model() successfully completed......................................
2024-05-09 01:55:28,460:INFO:Initializing plot_model()
2024-05-09 01:55:28,460:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=lift, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:55:28,460:INFO:Checking exceptions
2024-05-09 01:55:28,493:INFO:Preloading libraries
2024-05-09 01:55:28,501:INFO:Copying training dataset
2024-05-09 01:55:28,501:INFO:Plot type: lift
2024-05-09 01:55:28,501:INFO:Generating predictions / predict_proba on X_test
2024-05-09 01:55:28,756:INFO:Visual Rendered Successfully
2024-05-09 01:55:28,931:INFO:plot_model() successfully completed......................................
2024-05-09 01:55:31,915:INFO:Initializing plot_model()
2024-05-09 01:55:31,916:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=boundary, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:55:31,916:INFO:Checking exceptions
2024-05-09 01:55:31,950:INFO:Preloading libraries
2024-05-09 01:55:31,957:INFO:Copying training dataset
2024-05-09 01:55:31,958:INFO:Plot type: boundary
2024-05-09 01:55:32,027:INFO:Fitting StandardScaler()
2024-05-09 01:55:32,035:INFO:Fitting PCA()
2024-05-09 01:55:32,137:INFO:Fitting Model
2024-05-09 01:55:34,005:INFO:Visual Rendered Successfully
2024-05-09 01:55:34,214:INFO:plot_model() successfully completed......................................
2024-05-09 01:55:37,762:INFO:Initializing plot_model()
2024-05-09 01:55:37,762:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=feature_all, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:55:37,762:INFO:Checking exceptions
2024-05-09 01:55:37,794:INFO:Preloading libraries
2024-05-09 01:55:37,803:INFO:Copying training dataset
2024-05-09 01:55:37,803:INFO:Plot type: feature_all
2024-05-09 01:55:37,839:WARNING:No coef_ found. Trying feature_importances_
2024-05-09 01:55:38,100:INFO:Visual Rendered Successfully
2024-05-09 01:55:38,507:INFO:plot_model() successfully completed......................................
2024-05-09 01:55:39,707:INFO:Initializing plot_model()
2024-05-09 01:55:39,707:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=feature, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:55:39,707:INFO:Checking exceptions
2024-05-09 01:55:39,741:INFO:Preloading libraries
2024-05-09 01:55:39,750:INFO:Copying training dataset
2024-05-09 01:55:39,750:INFO:Plot type: feature
2024-05-09 01:55:39,750:WARNING:No coef_ found. Trying feature_importances_
2024-05-09 01:55:39,929:INFO:Visual Rendered Successfully
2024-05-09 01:55:40,123:INFO:plot_model() successfully completed......................................
2024-05-09 01:55:41,107:INFO:Initializing plot_model()
2024-05-09 01:55:41,107:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=dimension, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:55:41,107:INFO:Checking exceptions
2024-05-09 01:55:41,140:INFO:Preloading libraries
2024-05-09 01:55:41,148:INFO:Copying training dataset
2024-05-09 01:55:41,149:INFO:Plot type: dimension
2024-05-09 01:55:41,211:INFO:Fitting StandardScaler()
2024-05-09 01:55:41,262:INFO:Fitting PCA()
2024-05-09 01:55:41,427:INFO:Fitting & Transforming Model
2024-05-09 01:55:41,903:INFO:Visual Rendered Successfully
2024-05-09 01:55:42,076:INFO:plot_model() successfully completed......................................
2024-05-09 01:55:44,625:INFO:Initializing plot_model()
2024-05-09 01:55:44,625:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=vc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:55:44,625:INFO:Checking exceptions
2024-05-09 01:55:44,659:INFO:Preloading libraries
2024-05-09 01:55:44,668:INFO:Copying training dataset
2024-05-09 01:55:44,668:INFO:Plot type: vc
2024-05-09 01:55:44,668:INFO:Determining param_name
2024-05-09 01:55:44,668:INFO:param_name: max_depth
2024-05-09 01:55:44,792:INFO:Fitting Model
2024-05-09 01:56:35,971:INFO:Visual Rendered Successfully
2024-05-09 01:56:36,211:INFO:plot_model() successfully completed......................................
2024-05-09 01:56:39,449:INFO:Initializing plot_model()
2024-05-09 01:56:39,450:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=feature, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:56:39,450:INFO:Checking exceptions
2024-05-09 01:56:39,482:INFO:Preloading libraries
2024-05-09 01:56:39,492:INFO:Copying training dataset
2024-05-09 01:56:39,492:INFO:Plot type: feature
2024-05-09 01:56:39,492:WARNING:No coef_ found. Trying feature_importances_
2024-05-09 01:56:39,675:INFO:Visual Rendered Successfully
2024-05-09 01:56:39,858:INFO:plot_model() successfully completed......................................
2024-05-09 01:56:42,266:INFO:Initializing plot_model()
2024-05-09 01:56:42,266:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=dimension, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:56:42,266:INFO:Checking exceptions
2024-05-09 01:56:42,302:INFO:Preloading libraries
2024-05-09 01:56:42,310:INFO:Copying training dataset
2024-05-09 01:56:42,310:INFO:Plot type: dimension
2024-05-09 01:56:42,345:INFO:Fitting StandardScaler()
2024-05-09 01:56:42,386:INFO:Fitting PCA()
2024-05-09 01:56:42,542:INFO:Fitting & Transforming Model
2024-05-09 01:56:43,034:INFO:Visual Rendered Successfully
2024-05-09 01:56:43,228:INFO:plot_model() successfully completed......................................
2024-05-09 01:56:44,540:INFO:Initializing plot_model()
2024-05-09 01:56:44,540:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=vc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:56:44,540:INFO:Checking exceptions
2024-05-09 01:56:44,573:INFO:Preloading libraries
2024-05-09 01:56:44,581:INFO:Copying training dataset
2024-05-09 01:56:44,581:INFO:Plot type: vc
2024-05-09 01:56:44,581:INFO:Determining param_name
2024-05-09 01:56:44,582:INFO:param_name: max_depth
2024-05-09 01:56:44,708:INFO:Fitting Model
2024-05-09 01:57:35,389:INFO:Visual Rendered Successfully
2024-05-09 01:57:35,612:INFO:plot_model() successfully completed......................................
2024-05-09 01:57:39,031:INFO:Initializing plot_model()
2024-05-09 01:57:39,032:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=calibration, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:57:39,032:INFO:Checking exceptions
2024-05-09 01:57:39,066:INFO:Preloading libraries
2024-05-09 01:57:39,075:INFO:Copying training dataset
2024-05-09 01:57:39,075:INFO:Plot type: calibration
2024-05-09 01:57:39,086:INFO:Scoring test/hold-out set
2024-05-09 01:57:39,321:INFO:Visual Rendered Successfully
2024-05-09 01:57:39,508:INFO:plot_model() successfully completed......................................
2024-05-09 01:57:41,250:INFO:Initializing plot_model()
2024-05-09 01:57:41,251:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=vc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:57:41,251:INFO:Checking exceptions
2024-05-09 01:57:41,286:INFO:Preloading libraries
2024-05-09 01:57:41,296:INFO:Copying training dataset
2024-05-09 01:57:41,296:INFO:Plot type: vc
2024-05-09 01:57:41,296:INFO:Determining param_name
2024-05-09 01:57:41,296:INFO:param_name: max_depth
2024-05-09 01:57:41,430:INFO:Fitting Model
2024-05-09 01:58:31,374:INFO:Visual Rendered Successfully
2024-05-09 01:58:31,597:INFO:plot_model() successfully completed......................................
2024-05-09 01:58:38,374:INFO:Initializing plot_model()
2024-05-09 01:58:38,374:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=manifold, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:58:38,374:INFO:Checking exceptions
2024-05-09 01:58:38,406:INFO:Preloading libraries
2024-05-09 01:58:38,414:INFO:Copying training dataset
2024-05-09 01:58:38,414:INFO:Plot type: manifold
2024-05-09 01:58:38,552:INFO:Fitting & Transforming Model
2024-05-09 01:59:27,027:INFO:Visual Rendered Successfully
2024-05-09 01:59:27,215:INFO:plot_model() successfully completed......................................
2024-05-09 01:59:34,699:INFO:Initializing plot_model()
2024-05-09 01:59:34,699:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A813944A50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=learning, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 01:59:34,700:INFO:Checking exceptions
2024-05-09 01:59:34,733:INFO:Preloading libraries
2024-05-09 01:59:34,742:INFO:Copying training dataset
2024-05-09 01:59:34,742:INFO:Plot type: learning
2024-05-09 01:59:34,868:INFO:Fitting Model
2024-05-09 02:00:03,514:INFO:Visual Rendered Successfully
2024-05-09 02:00:03,727:INFO:plot_model() successfully completed......................................
2024-05-09 16:48:10,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 16:48:10,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 16:48:10,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 16:48:10,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 16:48:11,087:INFO:PyCaret ClassificationExperiment
2024-05-09 16:48:11,087:INFO:Logging name: clf-default-name
2024-05-09 16:48:11,087:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-09 16:48:11,087:INFO:version 3.3.2
2024-05-09 16:48:11,087:INFO:Initializing setup()
2024-05-09 16:48:11,087:INFO:self.USI: 3f05
2024-05-09 16:48:11,087:INFO:self._variable_keys: {'data', 'exp_id', 'html_param', 'logging_param', 'gpu_n_jobs_param', 'fold_generator', 'pipeline', 'n_jobs_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'X_train', 'gpu_param', 'idx', 'seed', 'fold_groups_param', 'y_test', 'memory', 'is_multiclass', 'X_test', 'fix_imbalance', 'target_param', 'exp_name_log', 'log_plots_param', 'y_train', 'USI', '_available_plots', 'y'}
2024-05-09 16:48:11,087:INFO:Checking environment
2024-05-09 16:48:11,087:INFO:python_version: 3.11.5
2024-05-09 16:48:11,087:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-09 16:48:11,087:INFO:machine: AMD64
2024-05-09 16:48:11,087:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 16:48:11,087:INFO:Memory: svmem(total=34056318976, available=26744709120, percent=21.5, used=7311609856, free=26744709120)
2024-05-09 16:48:11,087:INFO:Physical Core: 6
2024-05-09 16:48:11,087:INFO:Logical Core: 12
2024-05-09 16:48:11,087:INFO:Checking libraries
2024-05-09 16:48:11,087:INFO:System:
2024-05-09 16:48:11,087:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-09 16:48:11,087:INFO:executable: c:\Users\Marcelo\anaconda3\python.exe
2024-05-09 16:48:11,087:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 16:48:11,087:INFO:PyCaret required dependencies:
2024-05-09 16:48:12,391:INFO:                 pip: 23.2.1
2024-05-09 16:48:12,391:INFO:          setuptools: 68.0.0
2024-05-09 16:48:12,391:INFO:             pycaret: 3.3.2
2024-05-09 16:48:12,391:INFO:             IPython: 8.20.0
2024-05-09 16:48:12,391:INFO:          ipywidgets: 8.0.4
2024-05-09 16:48:12,391:INFO:                tqdm: 4.65.0
2024-05-09 16:48:12,391:INFO:               numpy: 1.26.3
2024-05-09 16:48:12,391:INFO:              pandas: 2.1.4
2024-05-09 16:48:12,391:INFO:              jinja2: 3.1.3
2024-05-09 16:48:12,391:INFO:               scipy: 1.11.4
2024-05-09 16:48:12,391:INFO:              joblib: 1.2.0
2024-05-09 16:48:12,391:INFO:             sklearn: 1.4.2
2024-05-09 16:48:12,391:INFO:                pyod: 1.1.3
2024-05-09 16:48:12,392:INFO:            imblearn: 0.12.2
2024-05-09 16:48:12,392:INFO:   category_encoders: 2.6.3
2024-05-09 16:48:12,392:INFO:            lightgbm: 4.3.0
2024-05-09 16:48:12,392:INFO:               numba: 0.59.0
2024-05-09 16:48:12,392:INFO:            requests: 2.31.0
2024-05-09 16:48:12,392:INFO:          matplotlib: 3.8.3
2024-05-09 16:48:12,392:INFO:          scikitplot: 0.3.7
2024-05-09 16:48:12,392:INFO:         yellowbrick: 1.5
2024-05-09 16:48:12,392:INFO:              plotly: 5.22.0
2024-05-09 16:48:12,392:INFO:    plotly-resampler: Not installed
2024-05-09 16:48:12,392:INFO:             kaleido: 0.2.1
2024-05-09 16:48:12,392:INFO:           schemdraw: 0.15
2024-05-09 16:48:12,392:INFO:         statsmodels: 0.14.0
2024-05-09 16:48:12,392:INFO:              sktime: 0.26.0
2024-05-09 16:48:12,392:INFO:               tbats: 1.1.3
2024-05-09 16:48:12,392:INFO:            pmdarima: 2.0.4
2024-05-09 16:48:12,392:INFO:              psutil: 5.9.0
2024-05-09 16:48:12,392:INFO:          markupsafe: 2.1.3
2024-05-09 16:48:12,392:INFO:             pickle5: Not installed
2024-05-09 16:48:12,392:INFO:         cloudpickle: 2.2.1
2024-05-09 16:48:12,392:INFO:         deprecation: 2.1.0
2024-05-09 16:48:12,392:INFO:              xxhash: 2.0.2
2024-05-09 16:48:12,392:INFO:           wurlitzer: Not installed
2024-05-09 16:48:12,392:INFO:PyCaret optional dependencies:
2024-05-09 16:48:12,412:INFO:                shap: Not installed
2024-05-09 16:48:12,412:INFO:           interpret: Not installed
2024-05-09 16:48:12,412:INFO:                umap: Not installed
2024-05-09 16:48:12,412:INFO:     ydata_profiling: Not installed
2024-05-09 16:48:12,412:INFO:  explainerdashboard: Not installed
2024-05-09 16:48:12,412:INFO:             autoviz: Not installed
2024-05-09 16:48:12,412:INFO:           fairlearn: Not installed
2024-05-09 16:48:12,412:INFO:          deepchecks: Not installed
2024-05-09 16:48:12,412:INFO:             xgboost: Not installed
2024-05-09 16:48:12,412:INFO:            catboost: Not installed
2024-05-09 16:48:12,412:INFO:              kmodes: Not installed
2024-05-09 16:48:12,412:INFO:             mlxtend: Not installed
2024-05-09 16:48:12,412:INFO:       statsforecast: Not installed
2024-05-09 16:48:12,412:INFO:        tune_sklearn: Not installed
2024-05-09 16:48:12,413:INFO:                 ray: Not installed
2024-05-09 16:48:12,413:INFO:            hyperopt: Not installed
2024-05-09 16:48:12,413:INFO:              optuna: Not installed
2024-05-09 16:48:12,413:INFO:               skopt: Not installed
2024-05-09 16:48:12,413:INFO:              mlflow: Not installed
2024-05-09 16:48:12,413:INFO:              gradio: Not installed
2024-05-09 16:48:12,413:INFO:             fastapi: Not installed
2024-05-09 16:48:12,413:INFO:             uvicorn: Not installed
2024-05-09 16:48:12,413:INFO:              m2cgen: Not installed
2024-05-09 16:48:12,413:INFO:           evidently: Not installed
2024-05-09 16:48:12,413:INFO:               fugue: Not installed
2024-05-09 16:48:12,413:INFO:           streamlit: 1.22.0
2024-05-09 16:48:12,413:INFO:             prophet: Not installed
2024-05-09 16:48:12,413:INFO:None
2024-05-09 16:48:12,413:INFO:Set up data.
2024-05-09 16:48:12,433:INFO:Set up folding strategy.
2024-05-09 16:48:12,434:INFO:Set up train/test split.
2024-05-09 16:48:12,456:INFO:Set up index.
2024-05-09 16:48:12,456:INFO:Assigning column types.
2024-05-09 16:48:12,473:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 16:48:12,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 16:48:12,523:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 16:48:12,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:12,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:12,656:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 16:48:12,656:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 16:48:12,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:12,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:12,704:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 16:48:12,773:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 16:48:12,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:12,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:12,873:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 16:48:12,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:12,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:12,905:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-09 16:48:12,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:12,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:13,053:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:13,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:13,057:INFO:Preparing preprocessing pipeline...
2024-05-09 16:48:13,057:INFO:Set up simple imputation.
2024-05-09 16:48:13,103:INFO:Finished creating preprocessing pipeline.
2024-05-09 16:48:13,114:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Marcelo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-05-09 16:48:13,114:INFO:Creating final display dataframe.
2024-05-09 16:48:13,263:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           default
2                   Target type            Binary
3           Original data shape       (22800, 24)
4        Transformed data shape       (22800, 24)
5   Transformed train set shape       (15959, 24)
6    Transformed test set shape        (6841, 24)
7              Numeric features                23
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              3f05
2024-05-09 16:48:13,358:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:13,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:13,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:13,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:13,444:INFO:setup() successfully completed in 2.36s...............
2024-05-09 16:48:13,454:INFO:Initializing compare_models()
2024-05-09 16:48:13,454:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, include=None, exclude=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-09 16:48:13,455:INFO:Checking exceptions
2024-05-09 16:48:13,470:INFO:Preparing display monitor
2024-05-09 16:48:13,493:INFO:Initializing Logistic Regression
2024-05-09 16:48:13,493:INFO:Total runtime is 0.0 minutes
2024-05-09 16:48:13,504:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:13,505:INFO:Initializing create_model()
2024-05-09 16:48:13,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:13,505:INFO:Checking exceptions
2024-05-09 16:48:13,505:INFO:Importing libraries
2024-05-09 16:48:13,505:INFO:Copying training dataset
2024-05-09 16:48:13,528:INFO:Defining folds
2024-05-09 16:48:13,528:INFO:Declaring metric variables
2024-05-09 16:48:13,532:INFO:Importing untrained model
2024-05-09 16:48:13,535:INFO:Logistic Regression Imported successfully
2024-05-09 16:48:13,543:INFO:Starting cross validation
2024-05-09 16:48:13,543:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:22,519:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 16:48:22,534:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 16:48:22,535:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 16:48:22,567:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 16:48:22,603:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 16:48:22,643:INFO:Calculating mean and std
2024-05-09 16:48:22,643:INFO:Creating metrics dataframe
2024-05-09 16:48:22,643:INFO:Uploading results into container
2024-05-09 16:48:22,650:INFO:Uploading model into container now
2024-05-09 16:48:22,650:INFO:_master_model_container: 1
2024-05-09 16:48:22,650:INFO:_display_container: 2
2024-05-09 16:48:22,650:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-09 16:48:22,650:INFO:create_model() successfully completed......................................
2024-05-09 16:48:22,749:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:22,749:INFO:Creating metrics dataframe
2024-05-09 16:48:22,753:INFO:Initializing K Neighbors Classifier
2024-05-09 16:48:22,753:INFO:Total runtime is 0.1543390154838562 minutes
2024-05-09 16:48:22,760:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:22,760:INFO:Initializing create_model()
2024-05-09 16:48:22,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:22,760:INFO:Checking exceptions
2024-05-09 16:48:22,760:INFO:Importing libraries
2024-05-09 16:48:22,760:INFO:Copying training dataset
2024-05-09 16:48:22,778:INFO:Defining folds
2024-05-09 16:48:22,778:INFO:Declaring metric variables
2024-05-09 16:48:22,785:INFO:Importing untrained model
2024-05-09 16:48:22,786:INFO:K Neighbors Classifier Imported successfully
2024-05-09 16:48:22,793:INFO:Starting cross validation
2024-05-09 16:48:22,793:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:28,413:INFO:Calculating mean and std
2024-05-09 16:48:28,416:INFO:Creating metrics dataframe
2024-05-09 16:48:28,419:INFO:Uploading results into container
2024-05-09 16:48:28,420:INFO:Uploading model into container now
2024-05-09 16:48:28,421:INFO:_master_model_container: 2
2024-05-09 16:48:28,421:INFO:_display_container: 2
2024-05-09 16:48:28,422:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 16:48:28,422:INFO:create_model() successfully completed......................................
2024-05-09 16:48:28,554:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:28,554:INFO:Creating metrics dataframe
2024-05-09 16:48:28,563:INFO:Initializing Naive Bayes
2024-05-09 16:48:28,563:INFO:Total runtime is 0.2511575023333232 minutes
2024-05-09 16:48:28,566:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:28,566:INFO:Initializing create_model()
2024-05-09 16:48:28,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:28,566:INFO:Checking exceptions
2024-05-09 16:48:28,566:INFO:Importing libraries
2024-05-09 16:48:28,566:INFO:Copying training dataset
2024-05-09 16:48:28,590:INFO:Defining folds
2024-05-09 16:48:28,590:INFO:Declaring metric variables
2024-05-09 16:48:28,594:INFO:Importing untrained model
2024-05-09 16:48:28,597:INFO:Naive Bayes Imported successfully
2024-05-09 16:48:28,606:INFO:Starting cross validation
2024-05-09 16:48:28,607:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:32,289:INFO:Calculating mean and std
2024-05-09 16:48:32,291:INFO:Creating metrics dataframe
2024-05-09 16:48:32,294:INFO:Uploading results into container
2024-05-09 16:48:32,295:INFO:Uploading model into container now
2024-05-09 16:48:32,295:INFO:_master_model_container: 3
2024-05-09 16:48:32,295:INFO:_display_container: 2
2024-05-09 16:48:32,295:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-09 16:48:32,296:INFO:create_model() successfully completed......................................
2024-05-09 16:48:32,394:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:32,394:INFO:Creating metrics dataframe
2024-05-09 16:48:32,403:INFO:Initializing Decision Tree Classifier
2024-05-09 16:48:32,403:INFO:Total runtime is 0.31517215967178347 minutes
2024-05-09 16:48:32,407:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:32,407:INFO:Initializing create_model()
2024-05-09 16:48:32,407:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:32,407:INFO:Checking exceptions
2024-05-09 16:48:32,407:INFO:Importing libraries
2024-05-09 16:48:32,407:INFO:Copying training dataset
2024-05-09 16:48:32,436:INFO:Defining folds
2024-05-09 16:48:32,436:INFO:Declaring metric variables
2024-05-09 16:48:32,442:INFO:Importing untrained model
2024-05-09 16:48:32,447:INFO:Decision Tree Classifier Imported successfully
2024-05-09 16:48:32,459:INFO:Starting cross validation
2024-05-09 16:48:32,459:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:33,034:INFO:Calculating mean and std
2024-05-09 16:48:33,035:INFO:Creating metrics dataframe
2024-05-09 16:48:33,037:INFO:Uploading results into container
2024-05-09 16:48:33,037:INFO:Uploading model into container now
2024-05-09 16:48:33,037:INFO:_master_model_container: 4
2024-05-09 16:48:33,037:INFO:_display_container: 2
2024-05-09 16:48:33,037:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 16:48:33,037:INFO:create_model() successfully completed......................................
2024-05-09 16:48:33,127:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:33,127:INFO:Creating metrics dataframe
2024-05-09 16:48:33,133:INFO:Initializing SVM - Linear Kernel
2024-05-09 16:48:33,133:INFO:Total runtime is 0.3273372014363607 minutes
2024-05-09 16:48:33,139:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:33,139:INFO:Initializing create_model()
2024-05-09 16:48:33,139:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:33,139:INFO:Checking exceptions
2024-05-09 16:48:33,139:INFO:Importing libraries
2024-05-09 16:48:33,139:INFO:Copying training dataset
2024-05-09 16:48:33,160:INFO:Defining folds
2024-05-09 16:48:33,160:INFO:Declaring metric variables
2024-05-09 16:48:33,163:INFO:Importing untrained model
2024-05-09 16:48:33,168:INFO:SVM - Linear Kernel Imported successfully
2024-05-09 16:48:33,175:INFO:Starting cross validation
2024-05-09 16:48:33,176:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:33,556:INFO:Calculating mean and std
2024-05-09 16:48:33,557:INFO:Creating metrics dataframe
2024-05-09 16:48:33,559:INFO:Uploading results into container
2024-05-09 16:48:33,559:INFO:Uploading model into container now
2024-05-09 16:48:33,560:INFO:_master_model_container: 5
2024-05-09 16:48:33,560:INFO:_display_container: 2
2024-05-09 16:48:33,560:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-09 16:48:33,560:INFO:create_model() successfully completed......................................
2024-05-09 16:48:33,643:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:33,643:INFO:Creating metrics dataframe
2024-05-09 16:48:33,654:INFO:Initializing Ridge Classifier
2024-05-09 16:48:33,654:INFO:Total runtime is 0.3360209703445435 minutes
2024-05-09 16:48:33,658:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:33,659:INFO:Initializing create_model()
2024-05-09 16:48:33,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:33,659:INFO:Checking exceptions
2024-05-09 16:48:33,659:INFO:Importing libraries
2024-05-09 16:48:33,659:INFO:Copying training dataset
2024-05-09 16:48:33,673:INFO:Defining folds
2024-05-09 16:48:33,673:INFO:Declaring metric variables
2024-05-09 16:48:33,673:INFO:Importing untrained model
2024-05-09 16:48:33,684:INFO:Ridge Classifier Imported successfully
2024-05-09 16:48:33,690:INFO:Starting cross validation
2024-05-09 16:48:33,691:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:33,784:INFO:Calculating mean and std
2024-05-09 16:48:33,785:INFO:Creating metrics dataframe
2024-05-09 16:48:33,786:INFO:Uploading results into container
2024-05-09 16:48:33,787:INFO:Uploading model into container now
2024-05-09 16:48:33,787:INFO:_master_model_container: 6
2024-05-09 16:48:33,787:INFO:_display_container: 2
2024-05-09 16:48:33,788:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-09 16:48:33,788:INFO:create_model() successfully completed......................................
2024-05-09 16:48:33,874:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:33,874:INFO:Creating metrics dataframe
2024-05-09 16:48:33,884:INFO:Initializing Random Forest Classifier
2024-05-09 16:48:33,884:INFO:Total runtime is 0.3398517727851868 minutes
2024-05-09 16:48:33,888:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:33,888:INFO:Initializing create_model()
2024-05-09 16:48:33,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:33,889:INFO:Checking exceptions
2024-05-09 16:48:33,889:INFO:Importing libraries
2024-05-09 16:48:33,889:INFO:Copying training dataset
2024-05-09 16:48:33,903:INFO:Defining folds
2024-05-09 16:48:33,903:INFO:Declaring metric variables
2024-05-09 16:48:33,903:INFO:Importing untrained model
2024-05-09 16:48:33,903:INFO:Random Forest Classifier Imported successfully
2024-05-09 16:48:33,919:INFO:Starting cross validation
2024-05-09 16:48:33,920:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:37,438:INFO:Calculating mean and std
2024-05-09 16:48:37,438:INFO:Creating metrics dataframe
2024-05-09 16:48:37,443:INFO:Uploading results into container
2024-05-09 16:48:37,443:INFO:Uploading model into container now
2024-05-09 16:48:37,443:INFO:_master_model_container: 7
2024-05-09 16:48:37,443:INFO:_display_container: 2
2024-05-09 16:48:37,443:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 16:48:37,445:INFO:create_model() successfully completed......................................
2024-05-09 16:48:37,533:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:37,533:INFO:Creating metrics dataframe
2024-05-09 16:48:37,551:INFO:Initializing Quadratic Discriminant Analysis
2024-05-09 16:48:37,551:INFO:Total runtime is 0.4009639382362366 minutes
2024-05-09 16:48:37,555:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:37,555:INFO:Initializing create_model()
2024-05-09 16:48:37,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:37,555:INFO:Checking exceptions
2024-05-09 16:48:37,555:INFO:Importing libraries
2024-05-09 16:48:37,555:INFO:Copying training dataset
2024-05-09 16:48:37,574:INFO:Defining folds
2024-05-09 16:48:37,574:INFO:Declaring metric variables
2024-05-09 16:48:37,584:INFO:Importing untrained model
2024-05-09 16:48:37,587:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-09 16:48:37,594:INFO:Starting cross validation
2024-05-09 16:48:37,596:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:37,704:INFO:Calculating mean and std
2024-05-09 16:48:37,716:INFO:Creating metrics dataframe
2024-05-09 16:48:37,718:INFO:Uploading results into container
2024-05-09 16:48:37,719:INFO:Uploading model into container now
2024-05-09 16:48:37,719:INFO:_master_model_container: 8
2024-05-09 16:48:37,719:INFO:_display_container: 2
2024-05-09 16:48:37,720:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-09 16:48:37,720:INFO:create_model() successfully completed......................................
2024-05-09 16:48:37,817:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:37,817:INFO:Creating metrics dataframe
2024-05-09 16:48:37,826:INFO:Initializing Ada Boost Classifier
2024-05-09 16:48:37,826:INFO:Total runtime is 0.40554921229680385 minutes
2024-05-09 16:48:37,829:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:37,830:INFO:Initializing create_model()
2024-05-09 16:48:37,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:37,830:INFO:Checking exceptions
2024-05-09 16:48:37,830:INFO:Importing libraries
2024-05-09 16:48:37,830:INFO:Copying training dataset
2024-05-09 16:48:37,850:INFO:Defining folds
2024-05-09 16:48:37,850:INFO:Declaring metric variables
2024-05-09 16:48:37,853:INFO:Importing untrained model
2024-05-09 16:48:37,857:INFO:Ada Boost Classifier Imported successfully
2024-05-09 16:48:37,863:INFO:Starting cross validation
2024-05-09 16:48:37,865:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:37,904:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 16:48:37,910:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 16:48:37,915:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 16:48:37,928:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 16:48:37,929:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 16:48:39,832:INFO:Calculating mean and std
2024-05-09 16:48:39,832:INFO:Creating metrics dataframe
2024-05-09 16:48:39,833:INFO:Uploading results into container
2024-05-09 16:48:39,836:INFO:Uploading model into container now
2024-05-09 16:48:39,836:INFO:_master_model_container: 9
2024-05-09 16:48:39,836:INFO:_display_container: 2
2024-05-09 16:48:39,836:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-09 16:48:39,836:INFO:create_model() successfully completed......................................
2024-05-09 16:48:39,927:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:39,928:INFO:Creating metrics dataframe
2024-05-09 16:48:39,934:INFO:Initializing Gradient Boosting Classifier
2024-05-09 16:48:39,934:INFO:Total runtime is 0.44067987998326624 minutes
2024-05-09 16:48:39,943:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:39,943:INFO:Initializing create_model()
2024-05-09 16:48:39,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:39,943:INFO:Checking exceptions
2024-05-09 16:48:39,943:INFO:Importing libraries
2024-05-09 16:48:39,943:INFO:Copying training dataset
2024-05-09 16:48:39,966:INFO:Defining folds
2024-05-09 16:48:39,966:INFO:Declaring metric variables
2024-05-09 16:48:39,971:INFO:Importing untrained model
2024-05-09 16:48:39,974:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 16:48:39,982:INFO:Starting cross validation
2024-05-09 16:48:39,983:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:47,926:INFO:Calculating mean and std
2024-05-09 16:48:47,926:INFO:Creating metrics dataframe
2024-05-09 16:48:47,929:INFO:Uploading results into container
2024-05-09 16:48:47,930:INFO:Uploading model into container now
2024-05-09 16:48:47,930:INFO:_master_model_container: 10
2024-05-09 16:48:47,930:INFO:_display_container: 2
2024-05-09 16:48:47,931:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 16:48:47,931:INFO:create_model() successfully completed......................................
2024-05-09 16:48:48,025:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:48,025:INFO:Creating metrics dataframe
2024-05-09 16:48:48,033:INFO:Initializing Linear Discriminant Analysis
2024-05-09 16:48:48,033:INFO:Total runtime is 0.575670337677002 minutes
2024-05-09 16:48:48,033:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:48,033:INFO:Initializing create_model()
2024-05-09 16:48:48,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:48,033:INFO:Checking exceptions
2024-05-09 16:48:48,033:INFO:Importing libraries
2024-05-09 16:48:48,033:INFO:Copying training dataset
2024-05-09 16:48:48,058:INFO:Defining folds
2024-05-09 16:48:48,058:INFO:Declaring metric variables
2024-05-09 16:48:48,062:INFO:Importing untrained model
2024-05-09 16:48:48,067:INFO:Linear Discriminant Analysis Imported successfully
2024-05-09 16:48:48,074:INFO:Starting cross validation
2024-05-09 16:48:48,074:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:48,209:INFO:Calculating mean and std
2024-05-09 16:48:48,213:INFO:Creating metrics dataframe
2024-05-09 16:48:48,215:INFO:Uploading results into container
2024-05-09 16:48:48,216:INFO:Uploading model into container now
2024-05-09 16:48:48,216:INFO:_master_model_container: 11
2024-05-09 16:48:48,216:INFO:_display_container: 2
2024-05-09 16:48:48,216:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-09 16:48:48,216:INFO:create_model() successfully completed......................................
2024-05-09 16:48:48,303:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:48,303:INFO:Creating metrics dataframe
2024-05-09 16:48:48,315:INFO:Initializing Extra Trees Classifier
2024-05-09 16:48:48,315:INFO:Total runtime is 0.5803731719652813 minutes
2024-05-09 16:48:48,319:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:48,319:INFO:Initializing create_model()
2024-05-09 16:48:48,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:48,320:INFO:Checking exceptions
2024-05-09 16:48:48,320:INFO:Importing libraries
2024-05-09 16:48:48,320:INFO:Copying training dataset
2024-05-09 16:48:48,333:INFO:Defining folds
2024-05-09 16:48:48,333:INFO:Declaring metric variables
2024-05-09 16:48:48,343:INFO:Importing untrained model
2024-05-09 16:48:48,350:INFO:Extra Trees Classifier Imported successfully
2024-05-09 16:48:48,362:INFO:Starting cross validation
2024-05-09 16:48:48,362:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:50,381:INFO:Calculating mean and std
2024-05-09 16:48:50,382:INFO:Creating metrics dataframe
2024-05-09 16:48:50,384:INFO:Uploading results into container
2024-05-09 16:48:50,385:INFO:Uploading model into container now
2024-05-09 16:48:50,385:INFO:_master_model_container: 12
2024-05-09 16:48:50,385:INFO:_display_container: 2
2024-05-09 16:48:50,386:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-09 16:48:50,386:INFO:create_model() successfully completed......................................
2024-05-09 16:48:50,480:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:50,480:INFO:Creating metrics dataframe
2024-05-09 16:48:50,490:INFO:Initializing Light Gradient Boosting Machine
2024-05-09 16:48:50,490:INFO:Total runtime is 0.6166235645612081 minutes
2024-05-09 16:48:50,493:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:50,495:INFO:Initializing create_model()
2024-05-09 16:48:50,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:50,495:INFO:Checking exceptions
2024-05-09 16:48:50,495:INFO:Importing libraries
2024-05-09 16:48:50,495:INFO:Copying training dataset
2024-05-09 16:48:50,516:INFO:Defining folds
2024-05-09 16:48:50,516:INFO:Declaring metric variables
2024-05-09 16:48:50,520:INFO:Importing untrained model
2024-05-09 16:48:50,523:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-09 16:48:50,531:INFO:Starting cross validation
2024-05-09 16:48:50,532:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:51,756:INFO:Calculating mean and std
2024-05-09 16:48:51,758:INFO:Creating metrics dataframe
2024-05-09 16:48:51,761:INFO:Uploading results into container
2024-05-09 16:48:51,762:INFO:Uploading model into container now
2024-05-09 16:48:51,763:INFO:_master_model_container: 13
2024-05-09 16:48:51,763:INFO:_display_container: 2
2024-05-09 16:48:51,766:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-09 16:48:51,766:INFO:create_model() successfully completed......................................
2024-05-09 16:48:51,890:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:51,890:INFO:Creating metrics dataframe
2024-05-09 16:48:51,899:INFO:Initializing Dummy Classifier
2024-05-09 16:48:51,899:INFO:Total runtime is 0.6401041825612387 minutes
2024-05-09 16:48:51,903:INFO:SubProcess create_model() called ==================================
2024-05-09 16:48:51,903:INFO:Initializing create_model()
2024-05-09 16:48:51,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE43C910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:51,903:INFO:Checking exceptions
2024-05-09 16:48:51,903:INFO:Importing libraries
2024-05-09 16:48:51,903:INFO:Copying training dataset
2024-05-09 16:48:51,929:INFO:Defining folds
2024-05-09 16:48:51,929:INFO:Declaring metric variables
2024-05-09 16:48:51,934:INFO:Importing untrained model
2024-05-09 16:48:51,939:INFO:Dummy Classifier Imported successfully
2024-05-09 16:48:51,948:INFO:Starting cross validation
2024-05-09 16:48:51,949:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:48:52,004:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 16:48:52,019:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 16:48:52,025:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 16:48:52,029:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 16:48:52,033:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 16:48:52,046:INFO:Calculating mean and std
2024-05-09 16:48:52,047:INFO:Creating metrics dataframe
2024-05-09 16:48:52,050:INFO:Uploading results into container
2024-05-09 16:48:52,050:INFO:Uploading model into container now
2024-05-09 16:48:52,051:INFO:_master_model_container: 14
2024-05-09 16:48:52,051:INFO:_display_container: 2
2024-05-09 16:48:52,051:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-09 16:48:52,051:INFO:create_model() successfully completed......................................
2024-05-09 16:48:52,143:INFO:SubProcess create_model() end ==================================
2024-05-09 16:48:52,143:INFO:Creating metrics dataframe
2024-05-09 16:48:52,157:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-05-09 16:48:52,165:INFO:Initializing create_model()
2024-05-09 16:48:52,165:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:52,165:INFO:Checking exceptions
2024-05-09 16:48:52,165:INFO:Importing libraries
2024-05-09 16:48:52,165:INFO:Copying training dataset
2024-05-09 16:48:52,185:INFO:Defining folds
2024-05-09 16:48:52,185:INFO:Declaring metric variables
2024-05-09 16:48:52,185:INFO:Importing untrained model
2024-05-09 16:48:52,185:INFO:Declaring custom model
2024-05-09 16:48:52,186:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 16:48:52,186:INFO:Cross validation set to False
2024-05-09 16:48:52,186:INFO:Fitting Model
2024-05-09 16:48:59,097:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 16:48:59,097:INFO:create_model() successfully completed......................................
2024-05-09 16:48:59,221:INFO:_master_model_container: 14
2024-05-09 16:48:59,221:INFO:_display_container: 2
2024-05-09 16:48:59,222:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 16:48:59,222:INFO:compare_models() successfully completed......................................
2024-05-09 16:48:59,364:INFO:gpu_param set to False
2024-05-09 16:48:59,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:59,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:59,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:59,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 16:48:59,603:INFO:Initializing create_model()
2024-05-09 16:48:59,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:48:59,603:INFO:Checking exceptions
2024-05-09 16:48:59,622:INFO:Importing libraries
2024-05-09 16:48:59,622:INFO:Copying training dataset
2024-05-09 16:48:59,643:INFO:Defining folds
2024-05-09 16:48:59,643:INFO:Declaring metric variables
2024-05-09 16:48:59,648:INFO:Importing untrained model
2024-05-09 16:48:59,653:INFO:Decision Tree Classifier Imported successfully
2024-05-09 16:48:59,662:INFO:Starting cross validation
2024-05-09 16:48:59,664:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:49:00,579:INFO:Calculating mean and std
2024-05-09 16:49:00,580:INFO:Creating metrics dataframe
2024-05-09 16:49:00,586:INFO:Finalizing model
2024-05-09 16:49:01,117:INFO:Uploading results into container
2024-05-09 16:49:01,118:INFO:Uploading model into container now
2024-05-09 16:49:01,128:INFO:_master_model_container: 15
2024-05-09 16:49:01,128:INFO:_display_container: 3
2024-05-09 16:49:01,129:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 16:49:01,129:INFO:create_model() successfully completed......................................
2024-05-09 16:49:01,335:INFO:Initializing create_model()
2024-05-09 16:49:01,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:49:01,335:INFO:Checking exceptions
2024-05-09 16:49:01,361:INFO:Importing libraries
2024-05-09 16:49:01,362:INFO:Copying training dataset
2024-05-09 16:49:01,389:INFO:Defining folds
2024-05-09 16:49:01,389:INFO:Declaring metric variables
2024-05-09 16:49:01,393:INFO:Importing untrained model
2024-05-09 16:49:01,399:INFO:K Neighbors Classifier Imported successfully
2024-05-09 16:49:01,407:INFO:Starting cross validation
2024-05-09 16:49:01,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:49:02,749:INFO:Calculating mean and std
2024-05-09 16:49:02,751:INFO:Creating metrics dataframe
2024-05-09 16:49:02,762:INFO:Finalizing model
2024-05-09 16:49:02,796:INFO:Uploading results into container
2024-05-09 16:49:02,796:INFO:Uploading model into container now
2024-05-09 16:49:02,818:INFO:_master_model_container: 16
2024-05-09 16:49:02,819:INFO:_display_container: 4
2024-05-09 16:49:02,819:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 16:49:02,819:INFO:create_model() successfully completed......................................
2024-05-09 16:49:02,986:INFO:Initializing create_model()
2024-05-09 16:49:02,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:49:02,987:INFO:Checking exceptions
2024-05-09 16:49:03,004:INFO:Importing libraries
2024-05-09 16:49:03,004:INFO:Copying training dataset
2024-05-09 16:49:03,038:INFO:Defining folds
2024-05-09 16:49:03,039:INFO:Declaring metric variables
2024-05-09 16:49:03,042:INFO:Importing untrained model
2024-05-09 16:49:03,048:INFO:Random Forest Classifier Imported successfully
2024-05-09 16:49:03,059:INFO:Starting cross validation
2024-05-09 16:49:03,060:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:49:11,568:INFO:Calculating mean and std
2024-05-09 16:49:11,570:INFO:Creating metrics dataframe
2024-05-09 16:49:11,577:INFO:Finalizing model
2024-05-09 16:49:12,647:INFO:Uploading results into container
2024-05-09 16:49:12,647:INFO:Uploading model into container now
2024-05-09 16:49:12,666:INFO:_master_model_container: 17
2024-05-09 16:49:12,666:INFO:_display_container: 5
2024-05-09 16:49:12,667:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 16:49:12,667:INFO:create_model() successfully completed......................................
2024-05-09 16:49:12,833:INFO:Initializing tune_model()
2024-05-09 16:49:12,833:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 16:49:12,833:INFO:Checking exceptions
2024-05-09 16:49:12,862:INFO:Copying training dataset
2024-05-09 16:49:12,877:INFO:Checking base model
2024-05-09 16:49:12,877:INFO:Base model : Decision Tree Classifier
2024-05-09 16:49:12,881:INFO:Declaring metric variables
2024-05-09 16:49:12,886:INFO:Defining Hyperparameters
2024-05-09 16:49:12,998:INFO:Tuning with n_jobs=-1
2024-05-09 16:49:12,998:INFO:Initializing RandomizedSearchCV
2024-05-09 16:49:14,778:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 1, 'actual_estimator__criterion': 'gini'}
2024-05-09 16:49:14,780:INFO:Hyperparameter search completed
2024-05-09 16:49:14,780:INFO:SubProcess create_model() called ==================================
2024-05-09 16:49:14,780:INFO:Initializing create_model()
2024-05-09 16:49:14,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CCE31D2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 1, 'criterion': 'gini'})
2024-05-09 16:49:14,780:INFO:Checking exceptions
2024-05-09 16:49:14,780:INFO:Importing libraries
2024-05-09 16:49:14,780:INFO:Copying training dataset
2024-05-09 16:49:14,806:INFO:Defining folds
2024-05-09 16:49:14,806:INFO:Declaring metric variables
2024-05-09 16:49:14,810:INFO:Importing untrained model
2024-05-09 16:49:14,811:INFO:Declaring custom model
2024-05-09 16:49:14,813:INFO:Decision Tree Classifier Imported successfully
2024-05-09 16:49:14,813:INFO:Starting cross validation
2024-05-09 16:49:14,823:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:49:15,023:INFO:Calculating mean and std
2024-05-09 16:49:15,024:INFO:Creating metrics dataframe
2024-05-09 16:49:15,032:INFO:Finalizing model
2024-05-09 16:49:15,083:INFO:Uploading results into container
2024-05-09 16:49:15,083:INFO:Uploading model into container now
2024-05-09 16:49:15,083:INFO:_master_model_container: 18
2024-05-09 16:49:15,083:INFO:_display_container: 6
2024-05-09 16:49:15,083:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 16:49:15,083:INFO:create_model() successfully completed......................................
2024-05-09 16:49:15,180:INFO:SubProcess create_model() end ==================================
2024-05-09 16:49:15,180:INFO:choose_better activated
2024-05-09 16:49:15,184:INFO:SubProcess create_model() called ==================================
2024-05-09 16:49:15,184:INFO:Initializing create_model()
2024-05-09 16:49:15,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:49:15,184:INFO:Checking exceptions
2024-05-09 16:49:15,184:INFO:Importing libraries
2024-05-09 16:49:15,184:INFO:Copying training dataset
2024-05-09 16:49:15,206:INFO:Defining folds
2024-05-09 16:49:15,206:INFO:Declaring metric variables
2024-05-09 16:49:15,206:INFO:Importing untrained model
2024-05-09 16:49:15,206:INFO:Declaring custom model
2024-05-09 16:49:15,207:INFO:Decision Tree Classifier Imported successfully
2024-05-09 16:49:15,207:INFO:Starting cross validation
2024-05-09 16:49:15,208:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:49:16,153:INFO:Calculating mean and std
2024-05-09 16:49:16,153:INFO:Creating metrics dataframe
2024-05-09 16:49:16,158:INFO:Finalizing model
2024-05-09 16:49:16,683:INFO:Uploading results into container
2024-05-09 16:49:16,683:INFO:Uploading model into container now
2024-05-09 16:49:16,683:INFO:_master_model_container: 19
2024-05-09 16:49:16,683:INFO:_display_container: 7
2024-05-09 16:49:16,683:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 16:49:16,683:INFO:create_model() successfully completed......................................
2024-05-09 16:49:16,783:INFO:SubProcess create_model() end ==================================
2024-05-09 16:49:16,783:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.7295
2024-05-09 16:49:16,783:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.8225
2024-05-09 16:49:16,783:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') is best model
2024-05-09 16:49:16,783:INFO:choose_better completed
2024-05-09 16:49:16,797:INFO:_master_model_container: 19
2024-05-09 16:49:16,797:INFO:_display_container: 6
2024-05-09 16:49:16,798:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 16:49:16,798:INFO:tune_model() successfully completed......................................
2024-05-09 16:49:16,995:INFO:Initializing tune_model()
2024-05-09 16:49:16,995:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, n_iter=10, custom_grid={'n_neighbors': array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 16:49:16,995:INFO:Checking exceptions
2024-05-09 16:49:17,013:INFO:Copying training dataset
2024-05-09 16:49:17,034:INFO:Checking base model
2024-05-09 16:49:17,034:INFO:Base model : K Neighbors Classifier
2024-05-09 16:49:17,038:INFO:Declaring metric variables
2024-05-09 16:49:17,041:INFO:Defining Hyperparameters
2024-05-09 16:49:17,140:INFO:custom_grid: {'actual_estimator__n_neighbors': array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])}
2024-05-09 16:49:17,141:INFO:Tuning with n_jobs=-1
2024-05-09 16:49:17,141:INFO:Initializing RandomizedSearchCV
2024-05-09 16:49:23,204:INFO:best_params: {'actual_estimator__n_neighbors': 42}
2024-05-09 16:49:23,204:INFO:Hyperparameter search completed
2024-05-09 16:49:23,205:INFO:SubProcess create_model() called ==================================
2024-05-09 16:49:23,205:INFO:Initializing create_model()
2024-05-09 16:49:23,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CC9148AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_neighbors': 42})
2024-05-09 16:49:23,205:INFO:Checking exceptions
2024-05-09 16:49:23,205:INFO:Importing libraries
2024-05-09 16:49:23,205:INFO:Copying training dataset
2024-05-09 16:49:23,227:INFO:Defining folds
2024-05-09 16:49:23,227:INFO:Declaring metric variables
2024-05-09 16:49:23,231:INFO:Importing untrained model
2024-05-09 16:49:23,231:INFO:Declaring custom model
2024-05-09 16:49:23,235:INFO:K Neighbors Classifier Imported successfully
2024-05-09 16:49:23,244:INFO:Starting cross validation
2024-05-09 16:49:23,244:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:49:24,340:INFO:Calculating mean and std
2024-05-09 16:49:24,341:INFO:Creating metrics dataframe
2024-05-09 16:49:24,343:INFO:Finalizing model
2024-05-09 16:49:24,379:INFO:Uploading results into container
2024-05-09 16:49:24,380:INFO:Uploading model into container now
2024-05-09 16:49:24,381:INFO:_master_model_container: 20
2024-05-09 16:49:24,381:INFO:_display_container: 7
2024-05-09 16:49:24,381:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,
                     weights='uniform')
2024-05-09 16:49:24,381:INFO:create_model() successfully completed......................................
2024-05-09 16:49:24,477:INFO:SubProcess create_model() end ==================================
2024-05-09 16:49:24,477:INFO:choose_better activated
2024-05-09 16:49:24,481:INFO:SubProcess create_model() called ==================================
2024-05-09 16:49:24,481:INFO:Initializing create_model()
2024-05-09 16:49:24,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:49:24,481:INFO:Checking exceptions
2024-05-09 16:49:24,483:INFO:Importing libraries
2024-05-09 16:49:24,483:INFO:Copying training dataset
2024-05-09 16:49:24,502:INFO:Defining folds
2024-05-09 16:49:24,504:INFO:Declaring metric variables
2024-05-09 16:49:24,504:INFO:Importing untrained model
2024-05-09 16:49:24,504:INFO:Declaring custom model
2024-05-09 16:49:24,504:INFO:K Neighbors Classifier Imported successfully
2024-05-09 16:49:24,504:INFO:Starting cross validation
2024-05-09 16:49:24,505:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:49:25,508:INFO:Calculating mean and std
2024-05-09 16:49:25,509:INFO:Creating metrics dataframe
2024-05-09 16:49:25,510:INFO:Finalizing model
2024-05-09 16:49:25,543:INFO:Uploading results into container
2024-05-09 16:49:25,548:INFO:Uploading model into container now
2024-05-09 16:49:25,548:INFO:_master_model_container: 21
2024-05-09 16:49:25,548:INFO:_display_container: 8
2024-05-09 16:49:25,548:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 16:49:25,548:INFO:create_model() successfully completed......................................
2024-05-09 16:49:25,654:INFO:SubProcess create_model() end ==================================
2024-05-09 16:49:25,654:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') result for Accuracy is 0.7504
2024-05-09 16:49:25,654:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,
                     weights='uniform') result for Accuracy is 0.7802
2024-05-09 16:49:25,654:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,
                     weights='uniform') is best model
2024-05-09 16:49:25,654:INFO:choose_better completed
2024-05-09 16:49:25,668:INFO:_master_model_container: 21
2024-05-09 16:49:25,668:INFO:_display_container: 7
2024-05-09 16:49:25,668:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,
                     weights='uniform')
2024-05-09 16:49:25,668:INFO:tune_model() successfully completed......................................
2024-05-09 16:49:25,898:INFO:Initializing tune_model()
2024-05-09 16:49:25,898:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 16:49:25,898:INFO:Checking exceptions
2024-05-09 16:49:25,930:INFO:Copying training dataset
2024-05-09 16:49:25,946:INFO:Checking base model
2024-05-09 16:49:25,946:INFO:Base model : Random Forest Classifier
2024-05-09 16:49:25,950:INFO:Declaring metric variables
2024-05-09 16:49:25,954:INFO:Defining Hyperparameters
2024-05-09 16:49:26,055:INFO:Tuning with n_jobs=-1
2024-05-09 16:49:26,055:INFO:Initializing RandomizedSearchCV
2024-05-09 16:51:13,814:INFO:best_params: {'actual_estimator__n_estimators': 130, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': True}
2024-05-09 16:51:13,814:INFO:Hyperparameter search completed
2024-05-09 16:51:13,814:INFO:SubProcess create_model() called ==================================
2024-05-09 16:51:13,814:INFO:Initializing create_model()
2024-05-09 16:51:13,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CC9148AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 130, 'min_samples_split': 9, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.0002, 'max_features': 'log2', 'max_depth': 4, 'criterion': 'entropy', 'class_weight': 'balanced_subsample', 'bootstrap': True})
2024-05-09 16:51:13,814:INFO:Checking exceptions
2024-05-09 16:51:13,814:INFO:Importing libraries
2024-05-09 16:51:13,814:INFO:Copying training dataset
2024-05-09 16:51:13,838:INFO:Defining folds
2024-05-09 16:51:13,838:INFO:Declaring metric variables
2024-05-09 16:51:13,840:INFO:Importing untrained model
2024-05-09 16:51:13,840:INFO:Declaring custom model
2024-05-09 16:51:13,844:INFO:Random Forest Classifier Imported successfully
2024-05-09 16:51:13,844:INFO:Starting cross validation
2024-05-09 16:51:13,854:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:51:18,854:INFO:Calculating mean and std
2024-05-09 16:51:18,856:INFO:Creating metrics dataframe
2024-05-09 16:51:18,863:INFO:Finalizing model
2024-05-09 16:51:19,713:INFO:Uploading results into container
2024-05-09 16:51:19,713:INFO:Uploading model into container now
2024-05-09 16:51:19,713:INFO:_master_model_container: 22
2024-05-09 16:51:19,722:INFO:_display_container: 8
2024-05-09 16:51:19,723:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-05-09 16:51:19,723:INFO:create_model() successfully completed......................................
2024-05-09 16:51:19,823:INFO:SubProcess create_model() end ==================================
2024-05-09 16:51:19,823:INFO:choose_better activated
2024-05-09 16:51:19,823:INFO:SubProcess create_model() called ==================================
2024-05-09 16:51:19,823:INFO:Initializing create_model()
2024-05-09 16:51:19,823:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:51:19,823:INFO:Checking exceptions
2024-05-09 16:51:19,823:INFO:Importing libraries
2024-05-09 16:51:19,823:INFO:Copying training dataset
2024-05-09 16:51:19,853:INFO:Defining folds
2024-05-09 16:51:19,853:INFO:Declaring metric variables
2024-05-09 16:51:19,853:INFO:Importing untrained model
2024-05-09 16:51:19,853:INFO:Declaring custom model
2024-05-09 16:51:19,853:INFO:Random Forest Classifier Imported successfully
2024-05-09 16:51:19,853:INFO:Starting cross validation
2024-05-09 16:51:19,855:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 16:51:27,473:INFO:Calculating mean and std
2024-05-09 16:51:27,473:INFO:Creating metrics dataframe
2024-05-09 16:51:27,477:INFO:Finalizing model
2024-05-09 16:51:28,471:INFO:Uploading results into container
2024-05-09 16:51:28,471:INFO:Uploading model into container now
2024-05-09 16:51:28,473:INFO:_master_model_container: 23
2024-05-09 16:51:28,473:INFO:_display_container: 9
2024-05-09 16:51:28,473:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 16:51:28,473:INFO:create_model() successfully completed......................................
2024-05-09 16:51:28,567:INFO:SubProcess create_model() end ==================================
2024-05-09 16:51:28,567:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for F1 is 0.4864
2024-05-09 16:51:28,567:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for F1 is 0.5513
2024-05-09 16:51:28,567:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2024-05-09 16:51:28,567:INFO:choose_better completed
2024-05-09 16:51:28,579:INFO:_master_model_container: 23
2024-05-09 16:51:28,579:INFO:_display_container: 8
2024-05-09 16:51:28,579:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-05-09 16:51:28,579:INFO:tune_model() successfully completed......................................
2024-05-09 16:51:28,708:INFO:Initializing plot_model()
2024-05-09 16:51:28,708:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 16:51:28,708:INFO:Checking exceptions
2024-05-09 16:51:28,744:INFO:Preloading libraries
2024-05-09 16:51:28,757:INFO:Copying training dataset
2024-05-09 16:51:28,757:INFO:Plot type: auc
2024-05-09 16:51:28,923:INFO:Fitting Model
2024-05-09 16:51:28,923:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 16:51:28,923:INFO:Scoring test/hold-out set
2024-05-09 16:51:29,273:INFO:Visual Rendered Successfully
2024-05-09 16:51:29,353:INFO:plot_model() successfully completed......................................
2024-05-09 16:51:29,393:INFO:Initializing plot_model()
2024-05-09 16:51:29,393:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=pr, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 16:51:29,393:INFO:Checking exceptions
2024-05-09 16:51:29,422:INFO:Preloading libraries
2024-05-09 16:51:29,431:INFO:Copying training dataset
2024-05-09 16:51:29,431:INFO:Plot type: pr
2024-05-09 16:51:29,568:INFO:Fitting Model
2024-05-09 16:51:29,568:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 16:51:29,568:INFO:Scoring test/hold-out set
2024-05-09 16:51:29,843:INFO:Visual Rendered Successfully
2024-05-09 16:51:29,934:INFO:plot_model() successfully completed......................................
2024-05-09 16:51:29,973:INFO:Initializing plot_model()
2024-05-09 16:51:29,973:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 16:51:29,973:INFO:Checking exceptions
2024-05-09 16:51:30,012:INFO:Preloading libraries
2024-05-09 16:51:30,023:INFO:Copying training dataset
2024-05-09 16:51:30,024:INFO:Plot type: feature
2024-05-09 16:51:30,024:WARNING:No coef_ found. Trying feature_importances_
2024-05-09 16:51:30,241:INFO:Visual Rendered Successfully
2024-05-09 16:51:30,327:INFO:plot_model() successfully completed......................................
2024-05-09 16:51:30,358:INFO:Initializing plot_model()
2024-05-09 16:51:30,358:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 16:51:30,358:INFO:Checking exceptions
2024-05-09 16:51:30,390:INFO:Preloading libraries
2024-05-09 16:51:30,402:INFO:Copying training dataset
2024-05-09 16:51:30,402:INFO:Plot type: confusion_matrix
2024-05-09 16:51:30,548:INFO:Fitting Model
2024-05-09 16:51:30,548:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-05-09 16:51:30,548:INFO:Scoring test/hold-out set
2024-05-09 16:51:30,769:INFO:Visual Rendered Successfully
2024-05-09 16:51:30,874:INFO:plot_model() successfully completed......................................
2024-05-09 16:51:30,913:INFO:Initializing evaluate_model()
2024-05-09 16:51:30,913:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-09 16:51:30,941:INFO:Initializing plot_model()
2024-05-09 16:51:30,941:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 16:51:30,941:INFO:Checking exceptions
2024-05-09 16:51:30,974:INFO:Preloading libraries
2024-05-09 16:51:30,986:INFO:Copying training dataset
2024-05-09 16:51:30,986:INFO:Plot type: pipeline
2024-05-09 16:51:31,123:INFO:Visual Rendered Successfully
2024-05-09 16:51:31,214:INFO:plot_model() successfully completed......................................
2024-05-09 16:51:31,253:INFO:Initializing predict_model()
2024-05-09 16:51:31,253:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024CC6C15E40>)
2024-05-09 16:51:31,253:INFO:Checking exceptions
2024-05-09 16:51:31,253:INFO:Preloading libraries
2024-05-09 16:51:31,544:INFO:Initializing finalize_model()
2024-05-09 16:51:31,544:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 16:51:31,544:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-05-09 16:51:31,560:INFO:Initializing create_model()
2024-05-09 16:51:31,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0002,
                       min_samples_leaf=5, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=130, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 16:51:31,560:INFO:Checking exceptions
2024-05-09 16:51:31,564:INFO:Importing libraries
2024-05-09 16:51:31,564:INFO:Copying training dataset
2024-05-09 16:51:31,564:INFO:Defining folds
2024-05-09 16:51:31,564:INFO:Declaring metric variables
2024-05-09 16:51:31,564:INFO:Importing untrained model
2024-05-09 16:51:31,564:INFO:Declaring custom model
2024-05-09 16:51:31,564:INFO:Random Forest Classifier Imported successfully
2024-05-09 16:51:31,564:INFO:Cross validation set to False
2024-05-09 16:51:31,564:INFO:Fitting Model
2024-05-09 16:51:32,627:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-09 16:51:32,627:INFO:create_model() successfully completed......................................
2024-05-09 16:51:32,719:INFO:_master_model_container: 23
2024-05-09 16:51:32,719:INFO:_display_container: 9
2024-05-09 16:51:32,723:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-09 16:51:32,723:INFO:finalize_model() successfully completed......................................
2024-05-09 16:51:32,914:INFO:Initializing predict_model()
2024-05-09 16:51:32,914:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024CCE6737E0>)
2024-05-09 16:51:32,914:INFO:Checking exceptions
2024-05-09 16:51:32,914:INFO:Preloading libraries
2024-05-09 16:51:33,272:INFO:Initializing predict_model()
2024-05-09 16:51:33,272:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024CCE673CE0>)
2024-05-09 16:51:33,272:INFO:Checking exceptions
2024-05-09 16:51:33,272:INFO:Preloading libraries
2024-05-09 16:51:33,272:INFO:Set up data.
2024-05-09 16:51:33,272:INFO:Set up index.
2024-05-09 16:51:33,691:INFO:Initializing save_model()
2024-05-09 16:51:33,691:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=Final RF Model 01Jun2022, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Marcelo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-09 16:51:33,691:INFO:Adding model into prep_pipe
2024-05-09 16:51:33,691:WARNING:Only Model saved as it was a pipeline.
2024-05-09 16:51:33,743:INFO:Final RF Model 01Jun2022.pkl saved in current working directory
2024-05-09 16:51:33,761:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             'PAY_AMT4', 'PAY_AMT5',
                                             'PAY_AMT6'],
                                    transform...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-09 16:51:33,761:INFO:save_model() successfully completed......................................
2024-05-09 16:51:33,909:INFO:Initializing load_model()
2024-05-09 16:51:33,909:INFO:load_model(model_name=Final RF Model 01Jun2022, platform=None, authentication=None, verbose=True)
2024-05-09 16:51:34,002:INFO:Initializing predict_model()
2024-05-09 16:51:34,003:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CC6294090>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Marcelo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['LIMIT_BAL', 'SEX', 'EDUCATION',
                                             'MARRIAGE', 'AGE', 'PAY_1',
                                             'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5',
                                             'PAY_6', 'BILL_AMT1', 'BILL_AMT2',
                                             'BILL_AMT3', 'BILL_AMT4',
                                             'BILL_AMT5', 'BILL_AMT6',
                                             'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3',
                                             '...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=4,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0002,
                                        min_samples_leaf=5, min_samples_split=9,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=130,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024CCE672700>)
2024-05-09 16:51:34,003:INFO:Checking exceptions
2024-05-09 16:51:34,003:INFO:Preloading libraries
2024-05-09 16:51:34,006:INFO:Set up data.
2024-05-09 16:51:34,014:INFO:Set up index.
2024-05-09 17:25:31,134:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 17:25:31,142:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 17:25:31,142:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 17:25:31,142:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 17:25:31,639:INFO:PyCaret ClassificationExperiment
2024-05-09 17:25:31,639:INFO:Logging name: clf-default-name
2024-05-09 17:25:31,639:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-09 17:25:31,639:INFO:version 3.3.2
2024-05-09 17:25:31,639:INFO:Initializing setup()
2024-05-09 17:25:31,639:INFO:self.USI: 43d0
2024-05-09 17:25:31,639:INFO:self._variable_keys: {'memory', '_available_plots', 'idx', 'y', 'n_jobs_param', 'X_train', 'exp_id', 'is_multiclass', 'exp_name_log', 'log_plots_param', 'y_test', 'target_param', 'USI', 'data', 'fold_groups_param', '_ml_usecase', 'logging_param', 'seed', 'gpu_param', 'X', 'y_train', 'html_param', 'X_test', 'gpu_n_jobs_param', 'fold_generator', 'pipeline', 'fold_shuffle_param', 'fix_imbalance'}
2024-05-09 17:25:31,640:INFO:Checking environment
2024-05-09 17:25:31,640:INFO:python_version: 3.11.5
2024-05-09 17:25:31,640:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-09 17:25:31,640:INFO:machine: AMD64
2024-05-09 17:25:31,640:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 17:25:31,640:INFO:Memory: svmem(total=34056318976, available=25551806464, percent=25.0, used=8504512512, free=25551806464)
2024-05-09 17:25:31,640:INFO:Physical Core: 6
2024-05-09 17:25:31,640:INFO:Logical Core: 12
2024-05-09 17:25:31,640:INFO:Checking libraries
2024-05-09 17:25:31,640:INFO:System:
2024-05-09 17:25:31,640:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-09 17:25:31,640:INFO:executable: c:\Users\Marcelo\anaconda3\python.exe
2024-05-09 17:25:31,640:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 17:25:31,640:INFO:PyCaret required dependencies:
2024-05-09 17:25:32,512:INFO:                 pip: 23.2.1
2024-05-09 17:25:32,512:INFO:          setuptools: 68.0.0
2024-05-09 17:25:32,512:INFO:             pycaret: 3.3.2
2024-05-09 17:25:32,512:INFO:             IPython: 8.20.0
2024-05-09 17:25:32,512:INFO:          ipywidgets: 8.0.4
2024-05-09 17:25:32,512:INFO:                tqdm: 4.65.0
2024-05-09 17:25:32,512:INFO:               numpy: 1.26.3
2024-05-09 17:25:32,512:INFO:              pandas: 2.1.4
2024-05-09 17:25:32,512:INFO:              jinja2: 3.1.3
2024-05-09 17:25:32,512:INFO:               scipy: 1.11.4
2024-05-09 17:25:32,512:INFO:              joblib: 1.2.0
2024-05-09 17:25:32,512:INFO:             sklearn: 1.4.2
2024-05-09 17:25:32,512:INFO:                pyod: 1.1.3
2024-05-09 17:25:32,512:INFO:            imblearn: 0.12.2
2024-05-09 17:25:32,512:INFO:   category_encoders: 2.6.3
2024-05-09 17:25:32,512:INFO:            lightgbm: 4.3.0
2024-05-09 17:25:32,512:INFO:               numba: 0.59.0
2024-05-09 17:25:32,512:INFO:            requests: 2.31.0
2024-05-09 17:25:32,512:INFO:          matplotlib: 3.8.3
2024-05-09 17:25:32,512:INFO:          scikitplot: 0.3.7
2024-05-09 17:25:32,512:INFO:         yellowbrick: 1.5
2024-05-09 17:25:32,512:INFO:              plotly: 5.22.0
2024-05-09 17:25:32,512:INFO:    plotly-resampler: Not installed
2024-05-09 17:25:32,512:INFO:             kaleido: 0.2.1
2024-05-09 17:25:32,512:INFO:           schemdraw: 0.15
2024-05-09 17:25:32,512:INFO:         statsmodels: 0.14.0
2024-05-09 17:25:32,512:INFO:              sktime: 0.26.0
2024-05-09 17:25:32,512:INFO:               tbats: 1.1.3
2024-05-09 17:25:32,512:INFO:            pmdarima: 2.0.4
2024-05-09 17:25:32,512:INFO:              psutil: 5.9.0
2024-05-09 17:25:32,512:INFO:          markupsafe: 2.1.3
2024-05-09 17:25:32,512:INFO:             pickle5: Not installed
2024-05-09 17:25:32,512:INFO:         cloudpickle: 2.2.1
2024-05-09 17:25:32,512:INFO:         deprecation: 2.1.0
2024-05-09 17:25:32,512:INFO:              xxhash: 2.0.2
2024-05-09 17:25:32,512:INFO:           wurlitzer: Not installed
2024-05-09 17:25:32,512:INFO:PyCaret optional dependencies:
2024-05-09 17:25:32,525:INFO:                shap: Not installed
2024-05-09 17:25:32,525:INFO:           interpret: Not installed
2024-05-09 17:25:32,525:INFO:                umap: Not installed
2024-05-09 17:25:32,525:INFO:     ydata_profiling: Not installed
2024-05-09 17:25:32,525:INFO:  explainerdashboard: Not installed
2024-05-09 17:25:32,525:INFO:             autoviz: Not installed
2024-05-09 17:25:32,525:INFO:           fairlearn: Not installed
2024-05-09 17:25:32,525:INFO:          deepchecks: Not installed
2024-05-09 17:25:32,525:INFO:             xgboost: Not installed
2024-05-09 17:25:32,525:INFO:            catboost: Not installed
2024-05-09 17:25:32,526:INFO:              kmodes: Not installed
2024-05-09 17:25:32,526:INFO:             mlxtend: Not installed
2024-05-09 17:25:32,526:INFO:       statsforecast: Not installed
2024-05-09 17:25:32,526:INFO:        tune_sklearn: Not installed
2024-05-09 17:25:32,526:INFO:                 ray: Not installed
2024-05-09 17:25:32,526:INFO:            hyperopt: Not installed
2024-05-09 17:25:32,526:INFO:              optuna: Not installed
2024-05-09 17:25:32,526:INFO:               skopt: Not installed
2024-05-09 17:25:32,526:INFO:              mlflow: Not installed
2024-05-09 17:25:32,526:INFO:              gradio: Not installed
2024-05-09 17:25:32,526:INFO:             fastapi: Not installed
2024-05-09 17:25:32,526:INFO:             uvicorn: Not installed
2024-05-09 17:25:32,526:INFO:              m2cgen: Not installed
2024-05-09 17:25:32,526:INFO:           evidently: Not installed
2024-05-09 17:25:32,526:INFO:               fugue: Not installed
2024-05-09 17:25:32,526:INFO:           streamlit: 1.22.0
2024-05-09 17:25:32,526:INFO:             prophet: Not installed
2024-05-09 17:25:32,526:INFO:None
2024-05-09 17:25:32,526:INFO:Set up data.
2024-05-09 17:25:32,560:INFO:Set up folding strategy.
2024-05-09 17:25:32,560:INFO:Set up train/test split.
2024-05-09 17:25:32,585:INFO:Set up index.
2024-05-09 17:25:32,586:INFO:Assigning column types.
2024-05-09 17:25:32,592:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 17:25:32,633:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 17:25:32,634:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:25:32,671:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:32,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:32,712:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 17:25:32,712:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:25:32,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:32,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:32,742:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 17:25:32,786:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:25:32,812:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:32,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:32,854:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:25:32,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:32,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:32,877:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-09 17:25:32,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:32,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:33,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:33,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:33,025:INFO:Preparing preprocessing pipeline...
2024-05-09 17:25:33,027:INFO:Set up simple imputation.
2024-05-09 17:25:33,036:INFO:Set up encoding of ordinal features.
2024-05-09 17:25:33,044:INFO:Set up encoding of categorical features.
2024-05-09 17:25:33,338:INFO:Finished creating preprocessing pipeline.
2024-05-09 17:25:33,367:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Marcelo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['tipo_renda', 'educacao',
                                             'estado_civil',
                                             'tipo_residencia'],
                                    transformer=OneHotEncoder(cols=['tipo_renda',
                                                                    'educacao',
                                                                    'estado_civil',
                                                                    'tipo_residencia'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-05-09 17:25:33,367:INFO:Creating final display dataframe.
2024-05-09 17:25:33,930:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target               mau
2                   Target type            Binary
3           Original data shape       (47500, 13)
4        Transformed data shape       (47500, 30)
5   Transformed train set shape       (33250, 30)
6    Transformed test set shape       (14250, 30)
7              Numeric features                 5
8          Categorical features                 7
9      Rows with missing values             16.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              43d0
2024-05-09 17:25:34,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,072:INFO:setup() successfully completed in 2.44s...............
2024-05-09 17:25:34,100:INFO:PyCaret ClassificationExperiment
2024-05-09 17:25:34,100:INFO:Logging name: clf-default-name
2024-05-09 17:25:34,100:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-09 17:25:34,100:INFO:version 3.3.2
2024-05-09 17:25:34,100:INFO:Initializing setup()
2024-05-09 17:25:34,100:INFO:self.USI: a33f
2024-05-09 17:25:34,100:INFO:self._variable_keys: {'memory', '_available_plots', 'idx', 'y', 'n_jobs_param', 'X_train', 'exp_id', 'is_multiclass', 'exp_name_log', 'log_plots_param', 'y_test', 'target_param', 'USI', 'data', 'fold_groups_param', '_ml_usecase', 'logging_param', 'seed', 'gpu_param', 'X', 'y_train', 'html_param', 'X_test', 'gpu_n_jobs_param', 'fold_generator', 'pipeline', 'fold_shuffle_param', 'fix_imbalance'}
2024-05-09 17:25:34,100:INFO:Checking environment
2024-05-09 17:25:34,100:INFO:python_version: 3.11.5
2024-05-09 17:25:34,100:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-09 17:25:34,100:INFO:machine: AMD64
2024-05-09 17:25:34,100:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 17:25:34,100:INFO:Memory: svmem(total=34056318976, available=25586073600, percent=24.9, used=8470245376, free=25586073600)
2024-05-09 17:25:34,100:INFO:Physical Core: 6
2024-05-09 17:25:34,100:INFO:Logical Core: 12
2024-05-09 17:25:34,100:INFO:Checking libraries
2024-05-09 17:25:34,100:INFO:System:
2024-05-09 17:25:34,100:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-09 17:25:34,100:INFO:executable: c:\Users\Marcelo\anaconda3\python.exe
2024-05-09 17:25:34,100:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 17:25:34,100:INFO:PyCaret required dependencies:
2024-05-09 17:25:34,100:INFO:                 pip: 23.2.1
2024-05-09 17:25:34,100:INFO:          setuptools: 68.0.0
2024-05-09 17:25:34,100:INFO:             pycaret: 3.3.2
2024-05-09 17:25:34,100:INFO:             IPython: 8.20.0
2024-05-09 17:25:34,100:INFO:          ipywidgets: 8.0.4
2024-05-09 17:25:34,102:INFO:                tqdm: 4.65.0
2024-05-09 17:25:34,102:INFO:               numpy: 1.26.3
2024-05-09 17:25:34,102:INFO:              pandas: 2.1.4
2024-05-09 17:25:34,102:INFO:              jinja2: 3.1.3
2024-05-09 17:25:34,102:INFO:               scipy: 1.11.4
2024-05-09 17:25:34,102:INFO:              joblib: 1.2.0
2024-05-09 17:25:34,102:INFO:             sklearn: 1.4.2
2024-05-09 17:25:34,102:INFO:                pyod: 1.1.3
2024-05-09 17:25:34,102:INFO:            imblearn: 0.12.2
2024-05-09 17:25:34,102:INFO:   category_encoders: 2.6.3
2024-05-09 17:25:34,102:INFO:            lightgbm: 4.3.0
2024-05-09 17:25:34,102:INFO:               numba: 0.59.0
2024-05-09 17:25:34,102:INFO:            requests: 2.31.0
2024-05-09 17:25:34,102:INFO:          matplotlib: 3.8.3
2024-05-09 17:25:34,102:INFO:          scikitplot: 0.3.7
2024-05-09 17:25:34,102:INFO:         yellowbrick: 1.5
2024-05-09 17:25:34,102:INFO:              plotly: 5.22.0
2024-05-09 17:25:34,102:INFO:    plotly-resampler: Not installed
2024-05-09 17:25:34,102:INFO:             kaleido: 0.2.1
2024-05-09 17:25:34,102:INFO:           schemdraw: 0.15
2024-05-09 17:25:34,102:INFO:         statsmodels: 0.14.0
2024-05-09 17:25:34,103:INFO:              sktime: 0.26.0
2024-05-09 17:25:34,103:INFO:               tbats: 1.1.3
2024-05-09 17:25:34,103:INFO:            pmdarima: 2.0.4
2024-05-09 17:25:34,103:INFO:              psutil: 5.9.0
2024-05-09 17:25:34,103:INFO:          markupsafe: 2.1.3
2024-05-09 17:25:34,103:INFO:             pickle5: Not installed
2024-05-09 17:25:34,103:INFO:         cloudpickle: 2.2.1
2024-05-09 17:25:34,103:INFO:         deprecation: 2.1.0
2024-05-09 17:25:34,103:INFO:              xxhash: 2.0.2
2024-05-09 17:25:34,103:INFO:           wurlitzer: Not installed
2024-05-09 17:25:34,103:INFO:PyCaret optional dependencies:
2024-05-09 17:25:34,103:INFO:                shap: Not installed
2024-05-09 17:25:34,103:INFO:           interpret: Not installed
2024-05-09 17:25:34,103:INFO:                umap: Not installed
2024-05-09 17:25:34,103:INFO:     ydata_profiling: Not installed
2024-05-09 17:25:34,103:INFO:  explainerdashboard: Not installed
2024-05-09 17:25:34,103:INFO:             autoviz: Not installed
2024-05-09 17:25:34,103:INFO:           fairlearn: Not installed
2024-05-09 17:25:34,103:INFO:          deepchecks: Not installed
2024-05-09 17:25:34,103:INFO:             xgboost: Not installed
2024-05-09 17:25:34,103:INFO:            catboost: Not installed
2024-05-09 17:25:34,104:INFO:              kmodes: Not installed
2024-05-09 17:25:34,104:INFO:             mlxtend: Not installed
2024-05-09 17:25:34,104:INFO:       statsforecast: Not installed
2024-05-09 17:25:34,104:INFO:        tune_sklearn: Not installed
2024-05-09 17:25:34,104:INFO:                 ray: Not installed
2024-05-09 17:25:34,104:INFO:            hyperopt: Not installed
2024-05-09 17:25:34,104:INFO:              optuna: Not installed
2024-05-09 17:25:34,104:INFO:               skopt: Not installed
2024-05-09 17:25:34,104:INFO:              mlflow: Not installed
2024-05-09 17:25:34,104:INFO:              gradio: Not installed
2024-05-09 17:25:34,104:INFO:             fastapi: Not installed
2024-05-09 17:25:34,104:INFO:             uvicorn: Not installed
2024-05-09 17:25:34,104:INFO:              m2cgen: Not installed
2024-05-09 17:25:34,104:INFO:           evidently: Not installed
2024-05-09 17:25:34,104:INFO:               fugue: Not installed
2024-05-09 17:25:34,104:INFO:           streamlit: 1.22.0
2024-05-09 17:25:34,104:INFO:             prophet: Not installed
2024-05-09 17:25:34,104:INFO:None
2024-05-09 17:25:34,104:INFO:Set up data.
2024-05-09 17:25:34,140:INFO:Set up folding strategy.
2024-05-09 17:25:34,140:INFO:Set up train/test split.
2024-05-09 17:25:34,161:INFO:Set up index.
2024-05-09 17:25:34,162:INFO:Assigning column types.
2024-05-09 17:25:34,170:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 17:25:34,212:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 17:25:34,212:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:25:34,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,277:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 17:25:34,282:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:25:34,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,304:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 17:25:34,347:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:25:34,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,412:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:25:34,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,433:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-09 17:25:34,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,577:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:34,583:INFO:Preparing preprocessing pipeline...
2024-05-09 17:25:34,585:INFO:Set up simple imputation.
2024-05-09 17:25:34,593:INFO:Set up encoding of ordinal features.
2024-05-09 17:25:34,602:INFO:Set up encoding of categorical features.
2024-05-09 17:25:34,872:INFO:Finished creating preprocessing pipeline.
2024-05-09 17:25:34,899:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Marcelo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['tipo_renda', 'educacao',
                                             'estado_civil',
                                             'tipo_residencia'],
                                    transformer=OneHotEncoder(cols=['tipo_renda',
                                                                    'educacao',
                                                                    'estado_civil',
                                                                    'tipo_residencia'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-05-09 17:25:34,899:INFO:Creating final display dataframe.
2024-05-09 17:25:35,426:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target               mau
2                   Target type            Binary
3           Original data shape       (47500, 13)
4        Transformed data shape       (47500, 30)
5   Transformed train set shape       (33250, 30)
6    Transformed test set shape       (14250, 30)
7              Numeric features                 5
8          Categorical features                 7
9      Rows with missing values             16.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              a33f
2024-05-09 17:25:35,499:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:35,499:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:35,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:35,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:25:35,567:INFO:setup() successfully completed in 1.47s...............
2024-05-09 17:25:35,576:INFO:Initializing compare_models()
2024-05-09 17:25:35,576:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, include=None, exclude=None, fold=10, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, 'include': None, 'exclude': None, 'fold': 10, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-09 17:25:35,576:INFO:Checking exceptions
2024-05-09 17:25:35,587:INFO:Preparing display monitor
2024-05-09 17:25:35,610:INFO:Initializing Logistic Regression
2024-05-09 17:25:35,610:INFO:Total runtime is 0.0 minutes
2024-05-09 17:25:35,612:INFO:SubProcess create_model() called ==================================
2024-05-09 17:25:35,612:INFO:Initializing create_model()
2024-05-09 17:25:35,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:25:35,612:INFO:Checking exceptions
2024-05-09 17:25:35,612:INFO:Importing libraries
2024-05-09 17:25:35,612:INFO:Copying training dataset
2024-05-09 17:25:35,627:INFO:Defining folds
2024-05-09 17:25:35,627:INFO:Declaring metric variables
2024-05-09 17:25:35,630:INFO:Importing untrained model
2024-05-09 17:25:35,634:INFO:Logistic Regression Imported successfully
2024-05-09 17:25:35,642:INFO:Starting cross validation
2024-05-09 17:25:35,644:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:25:50,607:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:25:50,632:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:25:50,702:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:25:50,735:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:25:50,754:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:25:50,755:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:25:50,772:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:25:50,772:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:25:50,790:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:25:50,822:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:25:50,833:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:25:50,842:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:25:50,863:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:25:50,881:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:25:50,886:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:25:50,893:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:25:50,893:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:25:50,928:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:25:50,931:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:25:50,993:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:25:51,002:INFO:Calculating mean and std
2024-05-09 17:25:51,002:INFO:Creating metrics dataframe
2024-05-09 17:25:51,012:INFO:Uploading results into container
2024-05-09 17:25:51,014:INFO:Uploading model into container now
2024-05-09 17:25:51,014:INFO:_master_model_container: 1
2024-05-09 17:25:51,016:INFO:_display_container: 2
2024-05-09 17:25:51,016:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-09 17:25:51,017:INFO:create_model() successfully completed......................................
2024-05-09 17:25:51,102:INFO:SubProcess create_model() end ==================================
2024-05-09 17:25:51,102:INFO:Creating metrics dataframe
2024-05-09 17:25:51,114:INFO:Initializing K Neighbors Classifier
2024-05-09 17:25:51,114:INFO:Total runtime is 0.25839861631393435 minutes
2024-05-09 17:25:51,118:INFO:SubProcess create_model() called ==================================
2024-05-09 17:25:51,119:INFO:Initializing create_model()
2024-05-09 17:25:51,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:25:51,119:INFO:Checking exceptions
2024-05-09 17:25:51,119:INFO:Importing libraries
2024-05-09 17:25:51,119:INFO:Copying training dataset
2024-05-09 17:25:51,133:INFO:Defining folds
2024-05-09 17:25:51,133:INFO:Declaring metric variables
2024-05-09 17:25:51,142:INFO:Importing untrained model
2024-05-09 17:25:51,142:INFO:K Neighbors Classifier Imported successfully
2024-05-09 17:25:51,153:INFO:Starting cross validation
2024-05-09 17:25:51,155:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:25:57,529:INFO:Calculating mean and std
2024-05-09 17:25:57,530:INFO:Creating metrics dataframe
2024-05-09 17:25:57,532:INFO:Uploading results into container
2024-05-09 17:25:57,532:INFO:Uploading model into container now
2024-05-09 17:25:57,532:INFO:_master_model_container: 2
2024-05-09 17:25:57,532:INFO:_display_container: 2
2024-05-09 17:25:57,532:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 17:25:57,532:INFO:create_model() successfully completed......................................
2024-05-09 17:25:57,618:INFO:SubProcess create_model() end ==================================
2024-05-09 17:25:57,618:INFO:Creating metrics dataframe
2024-05-09 17:25:57,627:INFO:Initializing Naive Bayes
2024-05-09 17:25:57,628:INFO:Total runtime is 0.3669619083404541 minutes
2024-05-09 17:25:57,632:INFO:SubProcess create_model() called ==================================
2024-05-09 17:25:57,632:INFO:Initializing create_model()
2024-05-09 17:25:57,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:25:57,632:INFO:Checking exceptions
2024-05-09 17:25:57,632:INFO:Importing libraries
2024-05-09 17:25:57,633:INFO:Copying training dataset
2024-05-09 17:25:57,648:INFO:Defining folds
2024-05-09 17:25:57,648:INFO:Declaring metric variables
2024-05-09 17:25:57,652:INFO:Importing untrained model
2024-05-09 17:25:57,655:INFO:Naive Bayes Imported successfully
2024-05-09 17:25:57,660:INFO:Starting cross validation
2024-05-09 17:25:57,663:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:25:58,485:INFO:Calculating mean and std
2024-05-09 17:25:58,486:INFO:Creating metrics dataframe
2024-05-09 17:25:58,487:INFO:Uploading results into container
2024-05-09 17:25:58,488:INFO:Uploading model into container now
2024-05-09 17:25:58,488:INFO:_master_model_container: 3
2024-05-09 17:25:58,488:INFO:_display_container: 2
2024-05-09 17:25:58,488:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-09 17:25:58,488:INFO:create_model() successfully completed......................................
2024-05-09 17:25:58,562:INFO:SubProcess create_model() end ==================================
2024-05-09 17:25:58,562:INFO:Creating metrics dataframe
2024-05-09 17:25:58,565:INFO:Initializing Decision Tree Classifier
2024-05-09 17:25:58,565:INFO:Total runtime is 0.38258432149887084 minutes
2024-05-09 17:25:58,572:INFO:SubProcess create_model() called ==================================
2024-05-09 17:25:58,572:INFO:Initializing create_model()
2024-05-09 17:25:58,572:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:25:58,572:INFO:Checking exceptions
2024-05-09 17:25:58,572:INFO:Importing libraries
2024-05-09 17:25:58,572:INFO:Copying training dataset
2024-05-09 17:25:58,590:INFO:Defining folds
2024-05-09 17:25:58,590:INFO:Declaring metric variables
2024-05-09 17:25:58,593:INFO:Importing untrained model
2024-05-09 17:25:58,598:INFO:Decision Tree Classifier Imported successfully
2024-05-09 17:25:58,602:INFO:Starting cross validation
2024-05-09 17:25:58,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:25:59,802:INFO:Calculating mean and std
2024-05-09 17:25:59,802:INFO:Creating metrics dataframe
2024-05-09 17:25:59,802:INFO:Uploading results into container
2024-05-09 17:25:59,802:INFO:Uploading model into container now
2024-05-09 17:25:59,802:INFO:_master_model_container: 4
2024-05-09 17:25:59,802:INFO:_display_container: 2
2024-05-09 17:25:59,802:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 17:25:59,802:INFO:create_model() successfully completed......................................
2024-05-09 17:25:59,883:INFO:SubProcess create_model() end ==================================
2024-05-09 17:25:59,884:INFO:Creating metrics dataframe
2024-05-09 17:25:59,892:INFO:Initializing SVM - Linear Kernel
2024-05-09 17:25:59,892:INFO:Total runtime is 0.4046968499819438 minutes
2024-05-09 17:25:59,895:INFO:SubProcess create_model() called ==================================
2024-05-09 17:25:59,895:INFO:Initializing create_model()
2024-05-09 17:25:59,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:25:59,895:INFO:Checking exceptions
2024-05-09 17:25:59,895:INFO:Importing libraries
2024-05-09 17:25:59,896:INFO:Copying training dataset
2024-05-09 17:25:59,902:INFO:Defining folds
2024-05-09 17:25:59,902:INFO:Declaring metric variables
2024-05-09 17:25:59,913:INFO:Importing untrained model
2024-05-09 17:25:59,917:INFO:SVM - Linear Kernel Imported successfully
2024-05-09 17:25:59,922:INFO:Starting cross validation
2024-05-09 17:25:59,924:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:00,763:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:00,765:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:00,787:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:00,789:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:00,798:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:00,842:INFO:Calculating mean and std
2024-05-09 17:26:00,842:INFO:Creating metrics dataframe
2024-05-09 17:26:00,848:INFO:Uploading results into container
2024-05-09 17:26:00,848:INFO:Uploading model into container now
2024-05-09 17:26:00,849:INFO:_master_model_container: 5
2024-05-09 17:26:00,849:INFO:_display_container: 2
2024-05-09 17:26:00,849:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-09 17:26:00,849:INFO:create_model() successfully completed......................................
2024-05-09 17:26:00,925:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:00,925:INFO:Creating metrics dataframe
2024-05-09 17:26:00,932:INFO:Initializing Ridge Classifier
2024-05-09 17:26:00,932:INFO:Total runtime is 0.4220326900482178 minutes
2024-05-09 17:26:00,942:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:00,942:INFO:Initializing create_model()
2024-05-09 17:26:00,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:00,942:INFO:Checking exceptions
2024-05-09 17:26:00,942:INFO:Importing libraries
2024-05-09 17:26:00,942:INFO:Copying training dataset
2024-05-09 17:26:00,964:INFO:Defining folds
2024-05-09 17:26:00,964:INFO:Declaring metric variables
2024-05-09 17:26:00,972:INFO:Importing untrained model
2024-05-09 17:26:00,972:INFO:Ridge Classifier Imported successfully
2024-05-09 17:26:00,983:INFO:Starting cross validation
2024-05-09 17:26:00,986:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:01,780:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:01,794:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:01,798:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:01,814:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:01,829:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:01,832:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:01,842:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:01,850:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:01,852:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:01,862:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:01,870:INFO:Calculating mean and std
2024-05-09 17:26:01,870:INFO:Creating metrics dataframe
2024-05-09 17:26:01,872:INFO:Uploading results into container
2024-05-09 17:26:01,873:INFO:Uploading model into container now
2024-05-09 17:26:01,873:INFO:_master_model_container: 6
2024-05-09 17:26:01,873:INFO:_display_container: 2
2024-05-09 17:26:01,873:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-09 17:26:01,873:INFO:create_model() successfully completed......................................
2024-05-09 17:26:01,946:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:01,946:INFO:Creating metrics dataframe
2024-05-09 17:26:01,956:INFO:Initializing Random Forest Classifier
2024-05-09 17:26:01,957:INFO:Total runtime is 0.4391113956769308 minutes
2024-05-09 17:26:01,960:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:01,961:INFO:Initializing create_model()
2024-05-09 17:26:01,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:01,961:INFO:Checking exceptions
2024-05-09 17:26:01,961:INFO:Importing libraries
2024-05-09 17:26:01,961:INFO:Copying training dataset
2024-05-09 17:26:01,972:INFO:Defining folds
2024-05-09 17:26:01,972:INFO:Declaring metric variables
2024-05-09 17:26:01,977:INFO:Importing untrained model
2024-05-09 17:26:01,983:INFO:Random Forest Classifier Imported successfully
2024-05-09 17:26:01,989:INFO:Starting cross validation
2024-05-09 17:26:01,992:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:08,604:INFO:Calculating mean and std
2024-05-09 17:26:08,605:INFO:Creating metrics dataframe
2024-05-09 17:26:08,606:INFO:Uploading results into container
2024-05-09 17:26:08,607:INFO:Uploading model into container now
2024-05-09 17:26:08,607:INFO:_master_model_container: 7
2024-05-09 17:26:08,607:INFO:_display_container: 2
2024-05-09 17:26:08,608:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 17:26:08,608:INFO:create_model() successfully completed......................................
2024-05-09 17:26:08,682:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:08,682:INFO:Creating metrics dataframe
2024-05-09 17:26:08,682:INFO:Initializing Quadratic Discriminant Analysis
2024-05-09 17:26:08,682:INFO:Total runtime is 0.5511977394421896 minutes
2024-05-09 17:26:08,692:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:08,692:INFO:Initializing create_model()
2024-05-09 17:26:08,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:08,692:INFO:Checking exceptions
2024-05-09 17:26:08,692:INFO:Importing libraries
2024-05-09 17:26:08,692:INFO:Copying training dataset
2024-05-09 17:26:08,708:INFO:Defining folds
2024-05-09 17:26:08,709:INFO:Declaring metric variables
2024-05-09 17:26:08,712:INFO:Importing untrained model
2024-05-09 17:26:08,714:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-09 17:26:08,714:INFO:Starting cross validation
2024-05-09 17:26:08,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:09,457:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:09,536:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:09,582:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:09,609:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:09,622:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:09,636:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:09,646:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:09,664:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:09,665:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:09,678:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:09,782:INFO:Calculating mean and std
2024-05-09 17:26:09,782:INFO:Creating metrics dataframe
2024-05-09 17:26:09,782:INFO:Uploading results into container
2024-05-09 17:26:09,782:INFO:Uploading model into container now
2024-05-09 17:26:09,782:INFO:_master_model_container: 8
2024-05-09 17:26:09,782:INFO:_display_container: 2
2024-05-09 17:26:09,782:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-09 17:26:09,782:INFO:create_model() successfully completed......................................
2024-05-09 17:26:09,865:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:09,865:INFO:Creating metrics dataframe
2024-05-09 17:26:09,873:INFO:Initializing Ada Boost Classifier
2024-05-09 17:26:09,873:INFO:Total runtime is 0.5710472822189332 minutes
2024-05-09 17:26:09,876:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:09,876:INFO:Initializing create_model()
2024-05-09 17:26:09,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:09,876:INFO:Checking exceptions
2024-05-09 17:26:09,877:INFO:Importing libraries
2024-05-09 17:26:09,877:INFO:Copying training dataset
2024-05-09 17:26:09,882:INFO:Defining folds
2024-05-09 17:26:09,882:INFO:Declaring metric variables
2024-05-09 17:26:09,892:INFO:Importing untrained model
2024-05-09 17:26:09,897:INFO:Ada Boost Classifier Imported successfully
2024-05-09 17:26:09,903:INFO:Starting cross validation
2024-05-09 17:26:09,905:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:10,448:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:26:10,482:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:26:10,492:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:26:10,514:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:26:10,534:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:26:10,547:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:26:10,573:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:26:10,575:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:26:10,576:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:26:10,582:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:26:12,995:INFO:Calculating mean and std
2024-05-09 17:26:12,995:INFO:Creating metrics dataframe
2024-05-09 17:26:12,998:INFO:Uploading results into container
2024-05-09 17:26:12,998:INFO:Uploading model into container now
2024-05-09 17:26:12,998:INFO:_master_model_container: 9
2024-05-09 17:26:12,999:INFO:_display_container: 2
2024-05-09 17:26:12,999:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-09 17:26:12,999:INFO:create_model() successfully completed......................................
2024-05-09 17:26:13,072:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:13,072:INFO:Creating metrics dataframe
2024-05-09 17:26:13,082:INFO:Initializing Gradient Boosting Classifier
2024-05-09 17:26:13,082:INFO:Total runtime is 0.624526580174764 minutes
2024-05-09 17:26:13,082:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:13,082:INFO:Initializing create_model()
2024-05-09 17:26:13,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:13,082:INFO:Checking exceptions
2024-05-09 17:26:13,082:INFO:Importing libraries
2024-05-09 17:26:13,082:INFO:Copying training dataset
2024-05-09 17:26:13,109:INFO:Defining folds
2024-05-09 17:26:13,109:INFO:Declaring metric variables
2024-05-09 17:26:13,113:INFO:Importing untrained model
2024-05-09 17:26:13,113:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 17:26:13,122:INFO:Starting cross validation
2024-05-09 17:26:13,122:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:21,100:INFO:Calculating mean and std
2024-05-09 17:26:21,101:INFO:Creating metrics dataframe
2024-05-09 17:26:21,102:INFO:Uploading results into container
2024-05-09 17:26:21,102:INFO:Uploading model into container now
2024-05-09 17:26:21,103:INFO:_master_model_container: 10
2024-05-09 17:26:21,103:INFO:_display_container: 2
2024-05-09 17:26:21,103:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 17:26:21,103:INFO:create_model() successfully completed......................................
2024-05-09 17:26:21,179:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:21,182:INFO:Creating metrics dataframe
2024-05-09 17:26:21,182:INFO:Initializing Linear Discriminant Analysis
2024-05-09 17:26:21,182:INFO:Total runtime is 0.7595327496528625 minutes
2024-05-09 17:26:21,195:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:21,195:INFO:Initializing create_model()
2024-05-09 17:26:21,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:21,195:INFO:Checking exceptions
2024-05-09 17:26:21,196:INFO:Importing libraries
2024-05-09 17:26:21,196:INFO:Copying training dataset
2024-05-09 17:26:21,207:INFO:Defining folds
2024-05-09 17:26:21,207:INFO:Declaring metric variables
2024-05-09 17:26:21,210:INFO:Importing untrained model
2024-05-09 17:26:21,212:INFO:Linear Discriminant Analysis Imported successfully
2024-05-09 17:26:21,212:INFO:Starting cross validation
2024-05-09 17:26:21,222:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:22,222:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:22,240:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:22,252:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:22,272:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:22,277:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:22,282:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:22,282:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:22,282:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:22,304:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:22,305:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:22,312:INFO:Calculating mean and std
2024-05-09 17:26:22,312:INFO:Creating metrics dataframe
2024-05-09 17:26:22,312:INFO:Uploading results into container
2024-05-09 17:26:22,312:INFO:Uploading model into container now
2024-05-09 17:26:22,317:INFO:_master_model_container: 11
2024-05-09 17:26:22,317:INFO:_display_container: 2
2024-05-09 17:26:22,317:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-09 17:26:22,317:INFO:create_model() successfully completed......................................
2024-05-09 17:26:22,387:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:22,387:INFO:Creating metrics dataframe
2024-05-09 17:26:22,402:INFO:Initializing Extra Trees Classifier
2024-05-09 17:26:22,402:INFO:Total runtime is 0.7798612157503764 minutes
2024-05-09 17:26:22,405:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:22,405:INFO:Initializing create_model()
2024-05-09 17:26:22,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:22,406:INFO:Checking exceptions
2024-05-09 17:26:22,406:INFO:Importing libraries
2024-05-09 17:26:22,406:INFO:Copying training dataset
2024-05-09 17:26:22,413:INFO:Defining folds
2024-05-09 17:26:22,413:INFO:Declaring metric variables
2024-05-09 17:26:22,422:INFO:Importing untrained model
2024-05-09 17:26:22,422:INFO:Extra Trees Classifier Imported successfully
2024-05-09 17:26:22,432:INFO:Starting cross validation
2024-05-09 17:26:22,433:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:29,451:INFO:Calculating mean and std
2024-05-09 17:26:29,451:INFO:Creating metrics dataframe
2024-05-09 17:26:29,451:INFO:Uploading results into container
2024-05-09 17:26:29,451:INFO:Uploading model into container now
2024-05-09 17:26:29,451:INFO:_master_model_container: 12
2024-05-09 17:26:29,451:INFO:_display_container: 2
2024-05-09 17:26:29,451:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-09 17:26:29,451:INFO:create_model() successfully completed......................................
2024-05-09 17:26:29,539:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:29,539:INFO:Creating metrics dataframe
2024-05-09 17:26:29,545:INFO:Initializing Light Gradient Boosting Machine
2024-05-09 17:26:29,545:INFO:Total runtime is 0.8989182194073995 minutes
2024-05-09 17:26:29,552:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:29,552:INFO:Initializing create_model()
2024-05-09 17:26:29,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:29,552:INFO:Checking exceptions
2024-05-09 17:26:29,552:INFO:Importing libraries
2024-05-09 17:26:29,552:INFO:Copying training dataset
2024-05-09 17:26:29,569:INFO:Defining folds
2024-05-09 17:26:29,570:INFO:Declaring metric variables
2024-05-09 17:26:29,573:INFO:Importing untrained model
2024-05-09 17:26:29,578:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-09 17:26:29,582:INFO:Starting cross validation
2024-05-09 17:26:29,582:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:32,242:INFO:Calculating mean and std
2024-05-09 17:26:32,245:INFO:Creating metrics dataframe
2024-05-09 17:26:32,245:INFO:Uploading results into container
2024-05-09 17:26:32,245:INFO:Uploading model into container now
2024-05-09 17:26:32,245:INFO:_master_model_container: 13
2024-05-09 17:26:32,245:INFO:_display_container: 2
2024-05-09 17:26:32,245:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-09 17:26:32,245:INFO:create_model() successfully completed......................................
2024-05-09 17:26:32,378:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:32,378:INFO:Creating metrics dataframe
2024-05-09 17:26:32,392:INFO:Initializing Dummy Classifier
2024-05-09 17:26:32,392:INFO:Total runtime is 0.9463642199834188 minutes
2024-05-09 17:26:32,396:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:32,397:INFO:Initializing create_model()
2024-05-09 17:26:32,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B8205E590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:32,397:INFO:Checking exceptions
2024-05-09 17:26:32,397:INFO:Importing libraries
2024-05-09 17:26:32,397:INFO:Copying training dataset
2024-05-09 17:26:32,412:INFO:Defining folds
2024-05-09 17:26:32,412:INFO:Declaring metric variables
2024-05-09 17:26:32,412:INFO:Importing untrained model
2024-05-09 17:26:32,422:INFO:Dummy Classifier Imported successfully
2024-05-09 17:26:32,432:INFO:Starting cross validation
2024-05-09 17:26:32,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:33,163:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:33,182:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:33,200:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:33,217:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:33,245:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:33,252:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:33,257:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:33,262:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:33,265:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:33,266:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:33,277:INFO:Calculating mean and std
2024-05-09 17:26:33,278:INFO:Creating metrics dataframe
2024-05-09 17:26:33,282:INFO:Uploading results into container
2024-05-09 17:26:33,282:INFO:Uploading model into container now
2024-05-09 17:26:33,282:INFO:_master_model_container: 14
2024-05-09 17:26:33,282:INFO:_display_container: 2
2024-05-09 17:26:33,282:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-09 17:26:33,282:INFO:create_model() successfully completed......................................
2024-05-09 17:26:33,362:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:33,362:INFO:Creating metrics dataframe
2024-05-09 17:26:33,374:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-05-09 17:26:33,382:INFO:Initializing create_model()
2024-05-09 17:26:33,382:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:33,382:INFO:Checking exceptions
2024-05-09 17:26:33,382:INFO:Importing libraries
2024-05-09 17:26:33,382:INFO:Copying training dataset
2024-05-09 17:26:33,401:INFO:Defining folds
2024-05-09 17:26:33,401:INFO:Declaring metric variables
2024-05-09 17:26:33,401:INFO:Importing untrained model
2024-05-09 17:26:33,401:INFO:Declaring custom model
2024-05-09 17:26:33,402:INFO:Ada Boost Classifier Imported successfully
2024-05-09 17:26:33,403:INFO:Cross validation set to False
2024-05-09 17:26:33,403:INFO:Fitting Model
2024-05-09 17:26:33,722:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:26:34,945:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-09 17:26:34,945:INFO:create_model() successfully completed......................................
2024-05-09 17:26:35,044:INFO:_master_model_container: 14
2024-05-09 17:26:35,044:INFO:_display_container: 2
2024-05-09 17:26:35,044:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-09 17:26:35,044:INFO:compare_models() successfully completed......................................
2024-05-09 17:26:35,072:INFO:Initializing compare_models()
2024-05-09 17:26:35,072:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, include=None, exclude=None, fold=10, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, 'include': None, 'exclude': None, 'fold': 10, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-09 17:26:35,072:INFO:Checking exceptions
2024-05-09 17:26:35,077:INFO:Preparing display monitor
2024-05-09 17:26:35,099:INFO:Initializing Logistic Regression
2024-05-09 17:26:35,099:INFO:Total runtime is 0.0 minutes
2024-05-09 17:26:35,102:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:35,103:INFO:Initializing create_model()
2024-05-09 17:26:35,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:35,103:INFO:Checking exceptions
2024-05-09 17:26:35,103:INFO:Importing libraries
2024-05-09 17:26:35,103:INFO:Copying training dataset
2024-05-09 17:26:35,117:INFO:Defining folds
2024-05-09 17:26:35,117:INFO:Declaring metric variables
2024-05-09 17:26:35,120:INFO:Importing untrained model
2024-05-09 17:26:35,123:INFO:Logistic Regression Imported successfully
2024-05-09 17:26:35,131:INFO:Starting cross validation
2024-05-09 17:26:35,132:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:43,287:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:26:43,311:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:26:43,336:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:26:43,374:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:26:43,376:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:26:43,408:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:26:43,412:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:26:43,412:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:43,430:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:43,430:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:26:43,452:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:43,470:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:26:43,473:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:43,482:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:43,501:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:43,501:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:43,512:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:26:43,512:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:43,552:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:43,608:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:43,612:INFO:Calculating mean and std
2024-05-09 17:26:43,612:INFO:Creating metrics dataframe
2024-05-09 17:26:43,622:INFO:Uploading results into container
2024-05-09 17:26:43,622:INFO:Uploading model into container now
2024-05-09 17:26:43,622:INFO:_master_model_container: 15
2024-05-09 17:26:43,622:INFO:_display_container: 3
2024-05-09 17:26:43,622:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-09 17:26:43,622:INFO:create_model() successfully completed......................................
2024-05-09 17:26:43,697:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:43,697:INFO:Creating metrics dataframe
2024-05-09 17:26:43,704:INFO:Initializing K Neighbors Classifier
2024-05-09 17:26:43,704:INFO:Total runtime is 0.14342067241668702 minutes
2024-05-09 17:26:43,708:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:43,708:INFO:Initializing create_model()
2024-05-09 17:26:43,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:43,708:INFO:Checking exceptions
2024-05-09 17:26:43,708:INFO:Importing libraries
2024-05-09 17:26:43,708:INFO:Copying training dataset
2024-05-09 17:26:43,722:INFO:Defining folds
2024-05-09 17:26:43,722:INFO:Declaring metric variables
2024-05-09 17:26:43,726:INFO:Importing untrained model
2024-05-09 17:26:43,730:INFO:K Neighbors Classifier Imported successfully
2024-05-09 17:26:43,737:INFO:Starting cross validation
2024-05-09 17:26:43,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:46,764:INFO:Calculating mean and std
2024-05-09 17:26:46,765:INFO:Creating metrics dataframe
2024-05-09 17:26:46,766:INFO:Uploading results into container
2024-05-09 17:26:46,767:INFO:Uploading model into container now
2024-05-09 17:26:46,767:INFO:_master_model_container: 16
2024-05-09 17:26:46,767:INFO:_display_container: 3
2024-05-09 17:26:46,767:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 17:26:46,767:INFO:create_model() successfully completed......................................
2024-05-09 17:26:46,842:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:46,842:INFO:Creating metrics dataframe
2024-05-09 17:26:46,843:INFO:Initializing Naive Bayes
2024-05-09 17:26:46,843:INFO:Total runtime is 0.19574419260025025 minutes
2024-05-09 17:26:46,852:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:46,852:INFO:Initializing create_model()
2024-05-09 17:26:46,852:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:46,852:INFO:Checking exceptions
2024-05-09 17:26:46,852:INFO:Importing libraries
2024-05-09 17:26:46,852:INFO:Copying training dataset
2024-05-09 17:26:46,869:INFO:Defining folds
2024-05-09 17:26:46,869:INFO:Declaring metric variables
2024-05-09 17:26:46,872:INFO:Importing untrained model
2024-05-09 17:26:46,875:INFO:Naive Bayes Imported successfully
2024-05-09 17:26:46,876:INFO:Starting cross validation
2024-05-09 17:26:46,882:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:47,694:INFO:Calculating mean and std
2024-05-09 17:26:47,695:INFO:Creating metrics dataframe
2024-05-09 17:26:47,697:INFO:Uploading results into container
2024-05-09 17:26:47,698:INFO:Uploading model into container now
2024-05-09 17:26:47,698:INFO:_master_model_container: 17
2024-05-09 17:26:47,698:INFO:_display_container: 3
2024-05-09 17:26:47,698:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-09 17:26:47,699:INFO:create_model() successfully completed......................................
2024-05-09 17:26:47,777:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:47,777:INFO:Creating metrics dataframe
2024-05-09 17:26:47,782:INFO:Initializing Decision Tree Classifier
2024-05-09 17:26:47,782:INFO:Total runtime is 0.21138278245925904 minutes
2024-05-09 17:26:47,782:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:47,782:INFO:Initializing create_model()
2024-05-09 17:26:47,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:47,782:INFO:Checking exceptions
2024-05-09 17:26:47,782:INFO:Importing libraries
2024-05-09 17:26:47,782:INFO:Copying training dataset
2024-05-09 17:26:47,802:INFO:Defining folds
2024-05-09 17:26:47,802:INFO:Declaring metric variables
2024-05-09 17:26:47,805:INFO:Importing untrained model
2024-05-09 17:26:47,808:INFO:Decision Tree Classifier Imported successfully
2024-05-09 17:26:47,812:INFO:Starting cross validation
2024-05-09 17:26:47,812:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:49,092:INFO:Calculating mean and std
2024-05-09 17:26:49,093:INFO:Creating metrics dataframe
2024-05-09 17:26:49,095:INFO:Uploading results into container
2024-05-09 17:26:49,096:INFO:Uploading model into container now
2024-05-09 17:26:49,096:INFO:_master_model_container: 18
2024-05-09 17:26:49,096:INFO:_display_container: 3
2024-05-09 17:26:49,096:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 17:26:49,096:INFO:create_model() successfully completed......................................
2024-05-09 17:26:49,173:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:49,173:INFO:Creating metrics dataframe
2024-05-09 17:26:49,182:INFO:Initializing SVM - Linear Kernel
2024-05-09 17:26:49,182:INFO:Total runtime is 0.23472013076146445 minutes
2024-05-09 17:26:49,182:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:49,182:INFO:Initializing create_model()
2024-05-09 17:26:49,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:49,182:INFO:Checking exceptions
2024-05-09 17:26:49,182:INFO:Importing libraries
2024-05-09 17:26:49,182:INFO:Copying training dataset
2024-05-09 17:26:49,212:INFO:Defining folds
2024-05-09 17:26:49,212:INFO:Declaring metric variables
2024-05-09 17:26:49,212:INFO:Importing untrained model
2024-05-09 17:26:49,212:INFO:SVM - Linear Kernel Imported successfully
2024-05-09 17:26:49,230:INFO:Starting cross validation
2024-05-09 17:26:49,232:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:50,112:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:50,136:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:50,143:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:50,152:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:50,201:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:50,235:INFO:Calculating mean and std
2024-05-09 17:26:50,236:INFO:Creating metrics dataframe
2024-05-09 17:26:50,238:INFO:Uploading results into container
2024-05-09 17:26:50,239:INFO:Uploading model into container now
2024-05-09 17:26:50,239:INFO:_master_model_container: 19
2024-05-09 17:26:50,239:INFO:_display_container: 3
2024-05-09 17:26:50,239:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-09 17:26:50,240:INFO:create_model() successfully completed......................................
2024-05-09 17:26:50,312:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:50,312:INFO:Creating metrics dataframe
2024-05-09 17:26:50,328:INFO:Initializing Ridge Classifier
2024-05-09 17:26:50,328:INFO:Total runtime is 0.2538152019182841 minutes
2024-05-09 17:26:50,331:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:50,332:INFO:Initializing create_model()
2024-05-09 17:26:50,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:50,332:INFO:Checking exceptions
2024-05-09 17:26:50,332:INFO:Importing libraries
2024-05-09 17:26:50,332:INFO:Copying training dataset
2024-05-09 17:26:50,343:INFO:Defining folds
2024-05-09 17:26:50,343:INFO:Declaring metric variables
2024-05-09 17:26:50,343:INFO:Importing untrained model
2024-05-09 17:26:50,352:INFO:Ridge Classifier Imported successfully
2024-05-09 17:26:50,352:INFO:Starting cross validation
2024-05-09 17:26:50,359:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:51,068:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:51,092:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:51,093:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:51,112:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:51,112:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:51,122:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:51,132:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:51,135:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:51,140:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:51,167:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:26:51,187:INFO:Calculating mean and std
2024-05-09 17:26:51,187:INFO:Creating metrics dataframe
2024-05-09 17:26:51,193:INFO:Uploading results into container
2024-05-09 17:26:51,194:INFO:Uploading model into container now
2024-05-09 17:26:51,196:INFO:_master_model_container: 20
2024-05-09 17:26:51,196:INFO:_display_container: 3
2024-05-09 17:26:51,196:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-09 17:26:51,196:INFO:create_model() successfully completed......................................
2024-05-09 17:26:51,272:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:51,273:INFO:Creating metrics dataframe
2024-05-09 17:26:51,276:INFO:Initializing Random Forest Classifier
2024-05-09 17:26:51,276:INFO:Total runtime is 0.269625194867452 minutes
2024-05-09 17:26:51,282:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:51,282:INFO:Initializing create_model()
2024-05-09 17:26:51,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:51,282:INFO:Checking exceptions
2024-05-09 17:26:51,282:INFO:Importing libraries
2024-05-09 17:26:51,282:INFO:Copying training dataset
2024-05-09 17:26:51,298:INFO:Defining folds
2024-05-09 17:26:51,298:INFO:Declaring metric variables
2024-05-09 17:26:51,301:INFO:Importing untrained model
2024-05-09 17:26:51,304:INFO:Random Forest Classifier Imported successfully
2024-05-09 17:26:51,309:INFO:Starting cross validation
2024-05-09 17:26:51,312:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:58,225:INFO:Calculating mean and std
2024-05-09 17:26:58,225:INFO:Creating metrics dataframe
2024-05-09 17:26:58,232:INFO:Uploading results into container
2024-05-09 17:26:58,232:INFO:Uploading model into container now
2024-05-09 17:26:58,232:INFO:_master_model_container: 21
2024-05-09 17:26:58,232:INFO:_display_container: 3
2024-05-09 17:26:58,232:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 17:26:58,232:INFO:create_model() successfully completed......................................
2024-05-09 17:26:58,312:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:58,312:INFO:Creating metrics dataframe
2024-05-09 17:26:58,320:INFO:Initializing Quadratic Discriminant Analysis
2024-05-09 17:26:58,320:INFO:Total runtime is 0.3870284636815389 minutes
2024-05-09 17:26:58,323:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:58,323:INFO:Initializing create_model()
2024-05-09 17:26:58,323:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:58,323:INFO:Checking exceptions
2024-05-09 17:26:58,323:INFO:Importing libraries
2024-05-09 17:26:58,324:INFO:Copying training dataset
2024-05-09 17:26:58,332:INFO:Defining folds
2024-05-09 17:26:58,332:INFO:Declaring metric variables
2024-05-09 17:26:58,340:INFO:Importing untrained model
2024-05-09 17:26:58,344:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-09 17:26:58,350:INFO:Starting cross validation
2024-05-09 17:26:58,352:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:26:59,125:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:59,127:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:59,156:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:59,172:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:59,267:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:59,278:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:59,286:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:59,298:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:59,308:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:26:59,446:INFO:Calculating mean and std
2024-05-09 17:26:59,447:INFO:Creating metrics dataframe
2024-05-09 17:26:59,448:INFO:Uploading results into container
2024-05-09 17:26:59,448:INFO:Uploading model into container now
2024-05-09 17:26:59,449:INFO:_master_model_container: 22
2024-05-09 17:26:59,449:INFO:_display_container: 3
2024-05-09 17:26:59,449:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-09 17:26:59,449:INFO:create_model() successfully completed......................................
2024-05-09 17:26:59,536:INFO:SubProcess create_model() end ==================================
2024-05-09 17:26:59,536:INFO:Creating metrics dataframe
2024-05-09 17:26:59,544:INFO:Initializing Ada Boost Classifier
2024-05-09 17:26:59,544:INFO:Total runtime is 0.4074270645777385 minutes
2024-05-09 17:26:59,547:INFO:SubProcess create_model() called ==================================
2024-05-09 17:26:59,548:INFO:Initializing create_model()
2024-05-09 17:26:59,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:26:59,548:INFO:Checking exceptions
2024-05-09 17:26:59,548:INFO:Importing libraries
2024-05-09 17:26:59,548:INFO:Copying training dataset
2024-05-09 17:26:59,562:INFO:Defining folds
2024-05-09 17:26:59,562:INFO:Declaring metric variables
2024-05-09 17:26:59,562:INFO:Importing untrained model
2024-05-09 17:26:59,562:INFO:Ada Boost Classifier Imported successfully
2024-05-09 17:26:59,577:INFO:Starting cross validation
2024-05-09 17:26:59,579:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:27:00,115:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:27:00,126:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:27:00,149:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:27:00,178:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:27:00,202:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:27:00,210:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:27:00,226:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:27:00,237:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:27:00,249:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:27:00,253:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:27:02,715:INFO:Calculating mean and std
2024-05-09 17:27:02,716:INFO:Creating metrics dataframe
2024-05-09 17:27:02,717:INFO:Uploading results into container
2024-05-09 17:27:02,718:INFO:Uploading model into container now
2024-05-09 17:27:02,718:INFO:_master_model_container: 23
2024-05-09 17:27:02,718:INFO:_display_container: 3
2024-05-09 17:27:02,718:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-09 17:27:02,718:INFO:create_model() successfully completed......................................
2024-05-09 17:27:02,792:INFO:SubProcess create_model() end ==================================
2024-05-09 17:27:02,792:INFO:Creating metrics dataframe
2024-05-09 17:27:02,802:INFO:Initializing Gradient Boosting Classifier
2024-05-09 17:27:02,802:INFO:Total runtime is 0.46171704530715946 minutes
2024-05-09 17:27:02,811:INFO:SubProcess create_model() called ==================================
2024-05-09 17:27:02,811:INFO:Initializing create_model()
2024-05-09 17:27:02,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:27:02,811:INFO:Checking exceptions
2024-05-09 17:27:02,811:INFO:Importing libraries
2024-05-09 17:27:02,811:INFO:Copying training dataset
2024-05-09 17:27:02,824:INFO:Defining folds
2024-05-09 17:27:02,824:INFO:Declaring metric variables
2024-05-09 17:27:02,825:INFO:Importing untrained model
2024-05-09 17:27:02,825:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 17:27:02,832:INFO:Starting cross validation
2024-05-09 17:27:02,832:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:27:10,883:INFO:Calculating mean and std
2024-05-09 17:27:10,885:INFO:Creating metrics dataframe
2024-05-09 17:27:10,886:INFO:Uploading results into container
2024-05-09 17:27:10,886:INFO:Uploading model into container now
2024-05-09 17:27:10,887:INFO:_master_model_container: 24
2024-05-09 17:27:10,887:INFO:_display_container: 3
2024-05-09 17:27:10,887:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 17:27:10,887:INFO:create_model() successfully completed......................................
2024-05-09 17:27:10,962:INFO:SubProcess create_model() end ==================================
2024-05-09 17:27:10,962:INFO:Creating metrics dataframe
2024-05-09 17:27:10,975:INFO:Initializing Linear Discriminant Analysis
2024-05-09 17:27:10,975:INFO:Total runtime is 0.5979315916697184 minutes
2024-05-09 17:27:10,979:INFO:SubProcess create_model() called ==================================
2024-05-09 17:27:10,979:INFO:Initializing create_model()
2024-05-09 17:27:10,979:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:27:10,980:INFO:Checking exceptions
2024-05-09 17:27:10,980:INFO:Importing libraries
2024-05-09 17:27:10,980:INFO:Copying training dataset
2024-05-09 17:27:10,995:INFO:Defining folds
2024-05-09 17:27:10,995:INFO:Declaring metric variables
2024-05-09 17:27:10,998:INFO:Importing untrained model
2024-05-09 17:27:11,002:INFO:Linear Discriminant Analysis Imported successfully
2024-05-09 17:27:11,014:INFO:Starting cross validation
2024-05-09 17:27:11,020:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:27:12,062:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:12,090:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:12,097:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:12,110:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:12,113:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:12,125:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:12,134:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:12,134:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:12,135:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:12,148:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:12,155:INFO:Calculating mean and std
2024-05-09 17:27:12,157:INFO:Creating metrics dataframe
2024-05-09 17:27:12,157:INFO:Uploading results into container
2024-05-09 17:27:12,157:INFO:Uploading model into container now
2024-05-09 17:27:12,157:INFO:_master_model_container: 25
2024-05-09 17:27:12,157:INFO:_display_container: 3
2024-05-09 17:27:12,157:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-09 17:27:12,157:INFO:create_model() successfully completed......................................
2024-05-09 17:27:12,272:INFO:SubProcess create_model() end ==================================
2024-05-09 17:27:12,272:INFO:Creating metrics dataframe
2024-05-09 17:27:12,282:INFO:Initializing Extra Trees Classifier
2024-05-09 17:27:12,282:INFO:Total runtime is 0.6197139581044515 minutes
2024-05-09 17:27:12,284:INFO:SubProcess create_model() called ==================================
2024-05-09 17:27:12,285:INFO:Initializing create_model()
2024-05-09 17:27:12,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:27:12,285:INFO:Checking exceptions
2024-05-09 17:27:12,285:INFO:Importing libraries
2024-05-09 17:27:12,285:INFO:Copying training dataset
2024-05-09 17:27:12,292:INFO:Defining folds
2024-05-09 17:27:12,292:INFO:Declaring metric variables
2024-05-09 17:27:12,292:INFO:Importing untrained model
2024-05-09 17:27:12,302:INFO:Extra Trees Classifier Imported successfully
2024-05-09 17:27:12,311:INFO:Starting cross validation
2024-05-09 17:27:12,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:27:19,573:INFO:Calculating mean and std
2024-05-09 17:27:19,582:INFO:Creating metrics dataframe
2024-05-09 17:27:19,582:INFO:Uploading results into container
2024-05-09 17:27:19,582:INFO:Uploading model into container now
2024-05-09 17:27:19,582:INFO:_master_model_container: 26
2024-05-09 17:27:19,582:INFO:_display_container: 3
2024-05-09 17:27:19,582:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-09 17:27:19,582:INFO:create_model() successfully completed......................................
2024-05-09 17:27:19,673:INFO:SubProcess create_model() end ==================================
2024-05-09 17:27:19,673:INFO:Creating metrics dataframe
2024-05-09 17:27:19,682:INFO:Initializing Light Gradient Boosting Machine
2024-05-09 17:27:19,682:INFO:Total runtime is 0.7430522640546163 minutes
2024-05-09 17:27:19,688:INFO:SubProcess create_model() called ==================================
2024-05-09 17:27:19,688:INFO:Initializing create_model()
2024-05-09 17:27:19,689:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:27:19,689:INFO:Checking exceptions
2024-05-09 17:27:19,689:INFO:Importing libraries
2024-05-09 17:27:19,689:INFO:Copying training dataset
2024-05-09 17:27:19,705:INFO:Defining folds
2024-05-09 17:27:19,705:INFO:Declaring metric variables
2024-05-09 17:27:19,707:INFO:Importing untrained model
2024-05-09 17:27:19,712:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-09 17:27:19,712:INFO:Starting cross validation
2024-05-09 17:27:19,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:27:22,492:INFO:Calculating mean and std
2024-05-09 17:27:22,494:INFO:Creating metrics dataframe
2024-05-09 17:27:22,497:INFO:Uploading results into container
2024-05-09 17:27:22,497:INFO:Uploading model into container now
2024-05-09 17:27:22,498:INFO:_master_model_container: 27
2024-05-09 17:27:22,498:INFO:_display_container: 3
2024-05-09 17:27:22,500:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-09 17:27:22,500:INFO:create_model() successfully completed......................................
2024-05-09 17:27:22,623:INFO:SubProcess create_model() end ==================================
2024-05-09 17:27:22,623:INFO:Creating metrics dataframe
2024-05-09 17:27:22,635:INFO:Initializing Dummy Classifier
2024-05-09 17:27:22,635:INFO:Total runtime is 0.7922702789306642 minutes
2024-05-09 17:27:22,638:INFO:SubProcess create_model() called ==================================
2024-05-09 17:27:22,638:INFO:Initializing create_model()
2024-05-09 17:27:22,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B821862D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:27:22,638:INFO:Checking exceptions
2024-05-09 17:27:22,639:INFO:Importing libraries
2024-05-09 17:27:22,639:INFO:Copying training dataset
2024-05-09 17:27:22,656:INFO:Defining folds
2024-05-09 17:27:22,656:INFO:Declaring metric variables
2024-05-09 17:27:22,661:INFO:Importing untrained model
2024-05-09 17:27:22,664:INFO:Dummy Classifier Imported successfully
2024-05-09 17:27:22,670:INFO:Starting cross validation
2024-05-09 17:27:22,673:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:27:23,473:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:23,502:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:23,518:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:23,526:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:23,552:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:23,561:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:23,570:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:23,573:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:23,589:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:23,594:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:27:23,605:INFO:Calculating mean and std
2024-05-09 17:27:23,606:INFO:Creating metrics dataframe
2024-05-09 17:27:23,606:INFO:Uploading results into container
2024-05-09 17:27:23,606:INFO:Uploading model into container now
2024-05-09 17:27:23,606:INFO:_master_model_container: 28
2024-05-09 17:27:23,606:INFO:_display_container: 3
2024-05-09 17:27:23,606:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-09 17:27:23,606:INFO:create_model() successfully completed......................................
2024-05-09 17:27:23,706:INFO:SubProcess create_model() end ==================================
2024-05-09 17:27:23,706:INFO:Creating metrics dataframe
2024-05-09 17:27:23,731:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-05-09 17:27:23,742:INFO:Initializing create_model()
2024-05-09 17:27:23,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:27:23,742:INFO:Checking exceptions
2024-05-09 17:27:23,742:INFO:Importing libraries
2024-05-09 17:27:23,742:INFO:Copying training dataset
2024-05-09 17:27:23,761:INFO:Defining folds
2024-05-09 17:27:23,762:INFO:Declaring metric variables
2024-05-09 17:27:23,762:INFO:Importing untrained model
2024-05-09 17:27:23,762:INFO:Declaring custom model
2024-05-09 17:27:23,763:INFO:SVM - Linear Kernel Imported successfully
2024-05-09 17:27:23,764:INFO:Cross validation set to False
2024-05-09 17:27:23,764:INFO:Fitting Model
2024-05-09 17:27:24,127:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-09 17:27:24,127:INFO:create_model() successfully completed......................................
2024-05-09 17:27:24,255:INFO:_master_model_container: 28
2024-05-09 17:27:24,255:INFO:_display_container: 3
2024-05-09 17:27:24,256:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-09 17:27:24,256:INFO:compare_models() successfully completed......................................
2024-05-09 17:27:24,343:INFO:gpu_param set to False
2024-05-09 17:27:24,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:27:24,417:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:27:24,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:27:24,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:27:24,522:INFO:Initializing create_model()
2024-05-09 17:27:24,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:27:24,522:INFO:Checking exceptions
2024-05-09 17:27:24,539:INFO:Importing libraries
2024-05-09 17:27:24,540:INFO:Copying training dataset
2024-05-09 17:27:24,558:INFO:Defining folds
2024-05-09 17:27:24,558:INFO:Declaring metric variables
2024-05-09 17:27:24,562:INFO:Importing untrained model
2024-05-09 17:27:24,566:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 17:27:24,580:INFO:Starting cross validation
2024-05-09 17:27:24,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:27:33,866:INFO:Calculating mean and std
2024-05-09 17:27:33,867:INFO:Creating metrics dataframe
2024-05-09 17:27:33,872:INFO:Finalizing model
2024-05-09 17:27:38,069:INFO:Uploading results into container
2024-05-09 17:27:38,070:INFO:Uploading model into container now
2024-05-09 17:27:38,072:INFO:_master_model_container: 29
2024-05-09 17:27:38,072:INFO:_display_container: 4
2024-05-09 17:27:38,072:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 17:27:38,072:INFO:create_model() successfully completed......................................
2024-05-09 17:27:38,185:INFO:Initializing tune_model()
2024-05-09 17:27:38,185:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 17:27:38,185:INFO:Checking exceptions
2024-05-09 17:27:38,205:INFO:Copying training dataset
2024-05-09 17:27:38,213:INFO:Checking base model
2024-05-09 17:27:38,213:INFO:Base model : Gradient Boosting Classifier
2024-05-09 17:27:38,213:INFO:Declaring metric variables
2024-05-09 17:27:38,222:INFO:Defining Hyperparameters
2024-05-09 17:27:38,304:INFO:Tuning with n_jobs=-1
2024-05-09 17:27:38,304:INFO:Initializing RandomizedSearchCV
2024-05-09 17:29:31,972:INFO:best_params: {'actual_estimator__subsample': 0.2, 'actual_estimator__n_estimators': 30, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__learning_rate': 0.4}
2024-05-09 17:29:31,972:INFO:Hyperparameter search completed
2024-05-09 17:29:31,972:INFO:SubProcess create_model() called ==================================
2024-05-09 17:29:31,972:INFO:Initializing create_model()
2024-05-09 17:29:31,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BF1338710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.2, 'n_estimators': 30, 'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.05, 'max_features': 'sqrt', 'max_depth': 8, 'learning_rate': 0.4})
2024-05-09 17:29:31,972:INFO:Checking exceptions
2024-05-09 17:29:31,972:INFO:Importing libraries
2024-05-09 17:29:31,972:INFO:Copying training dataset
2024-05-09 17:29:31,987:INFO:Defining folds
2024-05-09 17:29:31,987:INFO:Declaring metric variables
2024-05-09 17:29:31,990:INFO:Importing untrained model
2024-05-09 17:29:31,990:INFO:Declaring custom model
2024-05-09 17:29:31,994:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 17:29:31,994:INFO:Starting cross validation
2024-05-09 17:29:31,994:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:29:33,754:INFO:Calculating mean and std
2024-05-09 17:29:33,756:INFO:Creating metrics dataframe
2024-05-09 17:29:33,762:INFO:Finalizing model
2024-05-09 17:29:34,393:INFO:Uploading results into container
2024-05-09 17:29:34,393:INFO:Uploading model into container now
2024-05-09 17:29:34,393:INFO:_master_model_container: 30
2024-05-09 17:29:34,393:INFO:_display_container: 5
2024-05-09 17:29:34,393:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 17:29:34,393:INFO:create_model() successfully completed......................................
2024-05-09 17:29:34,472:INFO:SubProcess create_model() end ==================================
2024-05-09 17:29:34,472:INFO:choose_better activated
2024-05-09 17:29:34,477:INFO:SubProcess create_model() called ==================================
2024-05-09 17:29:34,478:INFO:Initializing create_model()
2024-05-09 17:29:34,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:29:34,478:INFO:Checking exceptions
2024-05-09 17:29:34,480:INFO:Importing libraries
2024-05-09 17:29:34,480:INFO:Copying training dataset
2024-05-09 17:29:34,493:INFO:Defining folds
2024-05-09 17:29:34,493:INFO:Declaring metric variables
2024-05-09 17:29:34,493:INFO:Importing untrained model
2024-05-09 17:29:34,493:INFO:Declaring custom model
2024-05-09 17:29:34,493:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 17:29:34,493:INFO:Starting cross validation
2024-05-09 17:29:34,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:29:43,402:INFO:Calculating mean and std
2024-05-09 17:29:43,402:INFO:Creating metrics dataframe
2024-05-09 17:29:43,402:INFO:Finalizing model
2024-05-09 17:29:47,652:INFO:Uploading results into container
2024-05-09 17:29:47,652:INFO:Uploading model into container now
2024-05-09 17:29:47,652:INFO:_master_model_container: 31
2024-05-09 17:29:47,653:INFO:_display_container: 6
2024-05-09 17:29:47,653:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 17:29:47,653:INFO:create_model() successfully completed......................................
2024-05-09 17:29:47,726:INFO:SubProcess create_model() end ==================================
2024-05-09 17:29:47,726:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for F1 is 0.0458
2024-05-09 17:29:47,726:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for F1 is 0.1439
2024-05-09 17:29:47,726:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2024-05-09 17:29:47,726:INFO:choose_better completed
2024-05-09 17:29:47,740:INFO:_master_model_container: 31
2024-05-09 17:29:47,740:INFO:_display_container: 5
2024-05-09 17:29:47,741:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 17:29:47,741:INFO:tune_model() successfully completed......................................
2024-05-09 17:29:47,850:INFO:Initializing plot_model()
2024-05-09 17:29:47,850:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 17:29:47,850:INFO:Checking exceptions
2024-05-09 17:29:47,858:INFO:Preloading libraries
2024-05-09 17:29:47,862:INFO:Copying training dataset
2024-05-09 17:29:47,862:INFO:Plot type: auc
2024-05-09 17:29:48,159:INFO:Fitting Model
2024-05-09 17:29:48,162:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-05-09 17:29:48,162:INFO:Scoring test/hold-out set
2024-05-09 17:29:48,417:INFO:Visual Rendered Successfully
2024-05-09 17:29:48,492:INFO:plot_model() successfully completed......................................
2024-05-09 17:29:48,532:INFO:Initializing plot_model()
2024-05-09 17:29:48,532:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=pr, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 17:29:48,540:INFO:Checking exceptions
2024-05-09 17:29:48,547:INFO:Preloading libraries
2024-05-09 17:29:48,550:INFO:Copying training dataset
2024-05-09 17:29:48,550:INFO:Plot type: pr
2024-05-09 17:29:48,852:INFO:Fitting Model
2024-05-09 17:29:48,853:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-05-09 17:29:48,854:INFO:Scoring test/hold-out set
2024-05-09 17:29:49,032:INFO:Visual Rendered Successfully
2024-05-09 17:29:49,116:INFO:plot_model() successfully completed......................................
2024-05-09 17:29:49,142:INFO:Initializing plot_model()
2024-05-09 17:29:49,142:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 17:29:49,142:INFO:Checking exceptions
2024-05-09 17:29:49,150:INFO:Preloading libraries
2024-05-09 17:29:49,155:INFO:Copying training dataset
2024-05-09 17:29:49,155:INFO:Plot type: feature
2024-05-09 17:29:49,155:WARNING:No coef_ found. Trying feature_importances_
2024-05-09 17:29:49,348:INFO:Visual Rendered Successfully
2024-05-09 17:29:49,425:INFO:plot_model() successfully completed......................................
2024-05-09 17:29:49,451:INFO:Initializing plot_model()
2024-05-09 17:29:49,452:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 17:29:49,452:INFO:Checking exceptions
2024-05-09 17:29:49,460:INFO:Preloading libraries
2024-05-09 17:29:49,464:INFO:Copying training dataset
2024-05-09 17:29:49,464:INFO:Plot type: confusion_matrix
2024-05-09 17:29:49,762:INFO:Fitting Model
2024-05-09 17:29:49,772:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-05-09 17:29:49,772:INFO:Scoring test/hold-out set
2024-05-09 17:29:49,902:INFO:Visual Rendered Successfully
2024-05-09 17:29:49,981:INFO:plot_model() successfully completed......................................
2024-05-09 17:29:50,007:INFO:Initializing evaluate_model()
2024-05-09 17:29:50,007:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-09 17:29:50,024:INFO:Initializing plot_model()
2024-05-09 17:29:50,024:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 17:29:50,024:INFO:Checking exceptions
2024-05-09 17:29:50,030:INFO:Preloading libraries
2024-05-09 17:29:50,033:INFO:Copying training dataset
2024-05-09 17:29:50,033:INFO:Plot type: pipeline
2024-05-09 17:29:50,181:INFO:Visual Rendered Successfully
2024-05-09 17:29:50,262:INFO:plot_model() successfully completed......................................
2024-05-09 17:29:50,293:INFO:Initializing predict_model()
2024-05-09 17:29:50,293:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026B825684A0>)
2024-05-09 17:29:50,293:INFO:Checking exceptions
2024-05-09 17:29:50,293:INFO:Preloading libraries
2024-05-09 17:29:50,720:INFO:Initializing finalize_model()
2024-05-09 17:29:50,720:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 17:29:50,720:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 17:29:50,729:INFO:Initializing create_model()
2024-05-09 17:29:50,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:29:50,729:INFO:Checking exceptions
2024-05-09 17:29:50,731:INFO:Importing libraries
2024-05-09 17:29:50,731:INFO:Copying training dataset
2024-05-09 17:29:50,732:INFO:Defining folds
2024-05-09 17:29:50,732:INFO:Declaring metric variables
2024-05-09 17:29:50,732:INFO:Importing untrained model
2024-05-09 17:29:50,733:INFO:Declaring custom model
2024-05-09 17:29:50,733:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 17:29:50,734:INFO:Cross validation set to False
2024-05-09 17:29:50,734:INFO:Fitting Model
2024-05-09 17:29:51,520:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWra...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.4, loss='log_loss',
                                            max_depth=8, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=30,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=0.2,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-05-09 17:29:51,520:INFO:create_model() successfully completed......................................
2024-05-09 17:29:51,592:INFO:_master_model_container: 31
2024-05-09 17:29:51,592:INFO:_display_container: 6
2024-05-09 17:29:51,625:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWra...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.4, loss='log_loss',
                                            max_depth=8, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=30,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=0.2,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-05-09 17:29:51,625:INFO:finalize_model() successfully completed......................................
2024-05-09 17:29:51,866:INFO:Initializing predict_model()
2024-05-09 17:29:51,866:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWra...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.4, loss='log_loss',
                                            max_depth=8, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=30,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=0.2,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026B8256A0C0>)
2024-05-09 17:29:51,866:INFO:Checking exceptions
2024-05-09 17:29:51,866:INFO:Preloading libraries
2024-05-09 17:29:52,323:INFO:Initializing predict_model()
2024-05-09 17:29:52,323:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B82198110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWra...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.4, loss='log_loss',
                                            max_depth=8, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=30,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=0.2,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026B8256B1A0>)
2024-05-09 17:29:52,323:INFO:Checking exceptions
2024-05-09 17:29:52,324:INFO:Preloading libraries
2024-05-09 17:29:52,327:INFO:Set up data.
2024-05-09 17:29:52,335:INFO:Set up index.
2024-05-09 17:59:20,372:INFO:PyCaret ClassificationExperiment
2024-05-09 17:59:20,372:INFO:Logging name: clf-default-name
2024-05-09 17:59:20,372:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-09 17:59:20,372:INFO:version 3.3.2
2024-05-09 17:59:20,373:INFO:Initializing setup()
2024-05-09 17:59:20,373:INFO:self.USI: 5b4e
2024-05-09 17:59:20,373:INFO:self._variable_keys: {'memory', '_available_plots', 'idx', 'y', 'n_jobs_param', 'X_train', 'exp_id', 'is_multiclass', 'exp_name_log', 'log_plots_param', 'y_test', 'target_param', 'USI', 'data', 'fold_groups_param', '_ml_usecase', 'logging_param', 'seed', 'gpu_param', 'X', 'y_train', 'html_param', 'X_test', 'gpu_n_jobs_param', 'fold_generator', 'pipeline', 'fold_shuffle_param', 'fix_imbalance'}
2024-05-09 17:59:20,373:INFO:Checking environment
2024-05-09 17:59:20,373:INFO:python_version: 3.11.5
2024-05-09 17:59:20,373:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-09 17:59:20,373:INFO:machine: AMD64
2024-05-09 17:59:20,373:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 17:59:20,373:INFO:Memory: svmem(total=34056318976, available=25226891264, percent=25.9, used=8829427712, free=25226891264)
2024-05-09 17:59:20,373:INFO:Physical Core: 6
2024-05-09 17:59:20,373:INFO:Logical Core: 12
2024-05-09 17:59:20,373:INFO:Checking libraries
2024-05-09 17:59:20,373:INFO:System:
2024-05-09 17:59:20,374:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-09 17:59:20,374:INFO:executable: c:\Users\Marcelo\anaconda3\python.exe
2024-05-09 17:59:20,374:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 17:59:20,374:INFO:PyCaret required dependencies:
2024-05-09 17:59:20,374:INFO:                 pip: 23.2.1
2024-05-09 17:59:20,374:INFO:          setuptools: 68.0.0
2024-05-09 17:59:20,374:INFO:             pycaret: 3.3.2
2024-05-09 17:59:20,374:INFO:             IPython: 8.20.0
2024-05-09 17:59:20,374:INFO:          ipywidgets: 8.0.4
2024-05-09 17:59:20,374:INFO:                tqdm: 4.65.0
2024-05-09 17:59:20,374:INFO:               numpy: 1.26.3
2024-05-09 17:59:20,374:INFO:              pandas: 2.1.4
2024-05-09 17:59:20,374:INFO:              jinja2: 3.1.3
2024-05-09 17:59:20,374:INFO:               scipy: 1.11.4
2024-05-09 17:59:20,374:INFO:              joblib: 1.2.0
2024-05-09 17:59:20,374:INFO:             sklearn: 1.4.2
2024-05-09 17:59:20,374:INFO:                pyod: 1.1.3
2024-05-09 17:59:20,374:INFO:            imblearn: 0.12.2
2024-05-09 17:59:20,374:INFO:   category_encoders: 2.6.3
2024-05-09 17:59:20,374:INFO:            lightgbm: 4.3.0
2024-05-09 17:59:20,374:INFO:               numba: 0.59.0
2024-05-09 17:59:20,374:INFO:            requests: 2.31.0
2024-05-09 17:59:20,374:INFO:          matplotlib: 3.8.3
2024-05-09 17:59:20,374:INFO:          scikitplot: 0.3.7
2024-05-09 17:59:20,374:INFO:         yellowbrick: 1.5
2024-05-09 17:59:20,374:INFO:              plotly: 5.22.0
2024-05-09 17:59:20,374:INFO:    plotly-resampler: Not installed
2024-05-09 17:59:20,374:INFO:             kaleido: 0.2.1
2024-05-09 17:59:20,374:INFO:           schemdraw: 0.15
2024-05-09 17:59:20,374:INFO:         statsmodels: 0.14.0
2024-05-09 17:59:20,374:INFO:              sktime: 0.26.0
2024-05-09 17:59:20,374:INFO:               tbats: 1.1.3
2024-05-09 17:59:20,374:INFO:            pmdarima: 2.0.4
2024-05-09 17:59:20,375:INFO:              psutil: 5.9.0
2024-05-09 17:59:20,375:INFO:          markupsafe: 2.1.3
2024-05-09 17:59:20,375:INFO:             pickle5: Not installed
2024-05-09 17:59:20,375:INFO:         cloudpickle: 2.2.1
2024-05-09 17:59:20,375:INFO:         deprecation: 2.1.0
2024-05-09 17:59:20,375:INFO:              xxhash: 2.0.2
2024-05-09 17:59:20,375:INFO:           wurlitzer: Not installed
2024-05-09 17:59:20,375:INFO:PyCaret optional dependencies:
2024-05-09 17:59:20,375:INFO:                shap: Not installed
2024-05-09 17:59:20,375:INFO:           interpret: Not installed
2024-05-09 17:59:20,375:INFO:                umap: Not installed
2024-05-09 17:59:20,375:INFO:     ydata_profiling: Not installed
2024-05-09 17:59:20,375:INFO:  explainerdashboard: Not installed
2024-05-09 17:59:20,375:INFO:             autoviz: Not installed
2024-05-09 17:59:20,375:INFO:           fairlearn: Not installed
2024-05-09 17:59:20,375:INFO:          deepchecks: Not installed
2024-05-09 17:59:20,375:INFO:             xgboost: Not installed
2024-05-09 17:59:20,375:INFO:            catboost: Not installed
2024-05-09 17:59:20,375:INFO:              kmodes: Not installed
2024-05-09 17:59:20,375:INFO:             mlxtend: Not installed
2024-05-09 17:59:20,375:INFO:       statsforecast: Not installed
2024-05-09 17:59:20,375:INFO:        tune_sklearn: Not installed
2024-05-09 17:59:20,376:INFO:                 ray: Not installed
2024-05-09 17:59:20,376:INFO:            hyperopt: Not installed
2024-05-09 17:59:20,376:INFO:              optuna: Not installed
2024-05-09 17:59:20,376:INFO:               skopt: Not installed
2024-05-09 17:59:20,376:INFO:              mlflow: Not installed
2024-05-09 17:59:20,376:INFO:              gradio: Not installed
2024-05-09 17:59:20,376:INFO:             fastapi: Not installed
2024-05-09 17:59:20,376:INFO:             uvicorn: Not installed
2024-05-09 17:59:20,376:INFO:              m2cgen: Not installed
2024-05-09 17:59:20,376:INFO:           evidently: Not installed
2024-05-09 17:59:20,376:INFO:               fugue: Not installed
2024-05-09 17:59:20,376:INFO:           streamlit: 1.22.0
2024-05-09 17:59:20,376:INFO:             prophet: Not installed
2024-05-09 17:59:20,376:INFO:None
2024-05-09 17:59:20,376:INFO:Set up data.
2024-05-09 17:59:20,417:INFO:Set up folding strategy.
2024-05-09 17:59:20,417:INFO:Set up train/test split.
2024-05-09 17:59:20,444:INFO:Set up index.
2024-05-09 17:59:20,444:INFO:Assigning column types.
2024-05-09 17:59:20,459:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 17:59:20,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 17:59:20,523:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:59:20,563:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:20,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:20,604:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 17:59:20,605:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:59:20,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:20,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:20,630:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 17:59:20,671:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:59:20,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:20,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:20,734:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:59:20,763:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:20,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:20,763:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-09 17:59:20,834:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:20,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:20,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:20,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:20,902:INFO:Preparing preprocessing pipeline...
2024-05-09 17:59:20,905:INFO:Set up simple imputation.
2024-05-09 17:59:20,906:INFO:Set up encoding of ordinal features.
2024-05-09 17:59:20,919:INFO:Set up encoding of categorical features.
2024-05-09 17:59:21,198:INFO:Finished creating preprocessing pipeline.
2024-05-09 17:59:21,246:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Marcelo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['tipo_renda', 'educacao',
                                             'estado_civil',
                                             'tipo_residencia'],
                                    transformer=OneHotEncoder(cols=['tipo_renda',
                                                                    'educacao',
                                                                    'estado_civil',
                                                                    'tipo_residencia'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-05-09 17:59:21,246:INFO:Creating final display dataframe.
2024-05-09 17:59:21,764:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target               mau
2                   Target type            Binary
3           Original data shape       (47500, 13)
4        Transformed data shape       (47500, 30)
5   Transformed train set shape       (33250, 30)
6    Transformed test set shape       (14250, 30)
7              Numeric features                 5
8          Categorical features                 7
9      Rows with missing values             17.1%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              5b4e
2024-05-09 17:59:21,834:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:21,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:21,905:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:21,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:21,906:INFO:setup() successfully completed in 1.54s...............
2024-05-09 17:59:21,977:INFO:PyCaret ClassificationExperiment
2024-05-09 17:59:21,977:INFO:Logging name: clf-default-name
2024-05-09 17:59:21,977:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-09 17:59:21,977:INFO:version 3.3.2
2024-05-09 17:59:21,977:INFO:Initializing setup()
2024-05-09 17:59:21,977:INFO:self.USI: f1f3
2024-05-09 17:59:21,977:INFO:self._variable_keys: {'memory', '_available_plots', 'idx', 'y', 'n_jobs_param', 'X_train', 'exp_id', 'is_multiclass', 'exp_name_log', 'log_plots_param', 'y_test', 'target_param', 'USI', 'data', 'fold_groups_param', '_ml_usecase', 'logging_param', 'seed', 'gpu_param', 'X', 'y_train', 'html_param', 'X_test', 'gpu_n_jobs_param', 'fold_generator', 'pipeline', 'fold_shuffle_param', 'fix_imbalance'}
2024-05-09 17:59:21,977:INFO:Checking environment
2024-05-09 17:59:21,977:INFO:python_version: 3.11.5
2024-05-09 17:59:21,977:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-09 17:59:21,977:INFO:machine: AMD64
2024-05-09 17:59:21,977:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 17:59:21,977:INFO:Memory: svmem(total=34056318976, available=25279930368, percent=25.8, used=8776388608, free=25279930368)
2024-05-09 17:59:21,977:INFO:Physical Core: 6
2024-05-09 17:59:21,977:INFO:Logical Core: 12
2024-05-09 17:59:21,977:INFO:Checking libraries
2024-05-09 17:59:21,977:INFO:System:
2024-05-09 17:59:21,977:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-09 17:59:21,977:INFO:executable: c:\Users\Marcelo\anaconda3\python.exe
2024-05-09 17:59:21,977:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 17:59:21,977:INFO:PyCaret required dependencies:
2024-05-09 17:59:21,977:INFO:                 pip: 23.2.1
2024-05-09 17:59:21,977:INFO:          setuptools: 68.0.0
2024-05-09 17:59:21,977:INFO:             pycaret: 3.3.2
2024-05-09 17:59:21,977:INFO:             IPython: 8.20.0
2024-05-09 17:59:21,984:INFO:          ipywidgets: 8.0.4
2024-05-09 17:59:21,984:INFO:                tqdm: 4.65.0
2024-05-09 17:59:21,984:INFO:               numpy: 1.26.3
2024-05-09 17:59:21,984:INFO:              pandas: 2.1.4
2024-05-09 17:59:21,984:INFO:              jinja2: 3.1.3
2024-05-09 17:59:21,984:INFO:               scipy: 1.11.4
2024-05-09 17:59:21,984:INFO:              joblib: 1.2.0
2024-05-09 17:59:21,984:INFO:             sklearn: 1.4.2
2024-05-09 17:59:21,984:INFO:                pyod: 1.1.3
2024-05-09 17:59:21,984:INFO:            imblearn: 0.12.2
2024-05-09 17:59:21,984:INFO:   category_encoders: 2.6.3
2024-05-09 17:59:21,984:INFO:            lightgbm: 4.3.0
2024-05-09 17:59:21,984:INFO:               numba: 0.59.0
2024-05-09 17:59:21,984:INFO:            requests: 2.31.0
2024-05-09 17:59:21,984:INFO:          matplotlib: 3.8.3
2024-05-09 17:59:21,984:INFO:          scikitplot: 0.3.7
2024-05-09 17:59:21,984:INFO:         yellowbrick: 1.5
2024-05-09 17:59:21,984:INFO:              plotly: 5.22.0
2024-05-09 17:59:21,984:INFO:    plotly-resampler: Not installed
2024-05-09 17:59:21,984:INFO:             kaleido: 0.2.1
2024-05-09 17:59:21,984:INFO:           schemdraw: 0.15
2024-05-09 17:59:21,984:INFO:         statsmodels: 0.14.0
2024-05-09 17:59:21,984:INFO:              sktime: 0.26.0
2024-05-09 17:59:21,984:INFO:               tbats: 1.1.3
2024-05-09 17:59:21,984:INFO:            pmdarima: 2.0.4
2024-05-09 17:59:21,984:INFO:              psutil: 5.9.0
2024-05-09 17:59:21,984:INFO:          markupsafe: 2.1.3
2024-05-09 17:59:21,984:INFO:             pickle5: Not installed
2024-05-09 17:59:21,984:INFO:         cloudpickle: 2.2.1
2024-05-09 17:59:21,984:INFO:         deprecation: 2.1.0
2024-05-09 17:59:21,984:INFO:              xxhash: 2.0.2
2024-05-09 17:59:21,984:INFO:           wurlitzer: Not installed
2024-05-09 17:59:21,984:INFO:PyCaret optional dependencies:
2024-05-09 17:59:21,984:INFO:                shap: Not installed
2024-05-09 17:59:21,984:INFO:           interpret: Not installed
2024-05-09 17:59:21,984:INFO:                umap: Not installed
2024-05-09 17:59:21,984:INFO:     ydata_profiling: Not installed
2024-05-09 17:59:21,984:INFO:  explainerdashboard: Not installed
2024-05-09 17:59:21,984:INFO:             autoviz: Not installed
2024-05-09 17:59:21,984:INFO:           fairlearn: Not installed
2024-05-09 17:59:21,984:INFO:          deepchecks: Not installed
2024-05-09 17:59:21,984:INFO:             xgboost: Not installed
2024-05-09 17:59:21,984:INFO:            catboost: Not installed
2024-05-09 17:59:21,984:INFO:              kmodes: Not installed
2024-05-09 17:59:21,984:INFO:             mlxtend: Not installed
2024-05-09 17:59:21,984:INFO:       statsforecast: Not installed
2024-05-09 17:59:21,984:INFO:        tune_sklearn: Not installed
2024-05-09 17:59:21,984:INFO:                 ray: Not installed
2024-05-09 17:59:21,984:INFO:            hyperopt: Not installed
2024-05-09 17:59:21,984:INFO:              optuna: Not installed
2024-05-09 17:59:21,984:INFO:               skopt: Not installed
2024-05-09 17:59:21,984:INFO:              mlflow: Not installed
2024-05-09 17:59:21,984:INFO:              gradio: Not installed
2024-05-09 17:59:21,984:INFO:             fastapi: Not installed
2024-05-09 17:59:21,984:INFO:             uvicorn: Not installed
2024-05-09 17:59:21,984:INFO:              m2cgen: Not installed
2024-05-09 17:59:21,984:INFO:           evidently: Not installed
2024-05-09 17:59:21,984:INFO:               fugue: Not installed
2024-05-09 17:59:21,984:INFO:           streamlit: 1.22.0
2024-05-09 17:59:21,984:INFO:             prophet: Not installed
2024-05-09 17:59:21,984:INFO:None
2024-05-09 17:59:21,984:INFO:Set up data.
2024-05-09 17:59:22,024:INFO:Set up folding strategy.
2024-05-09 17:59:22,024:INFO:Set up train/test split.
2024-05-09 17:59:22,043:INFO:Set up index.
2024-05-09 17:59:22,043:INFO:Assigning column types.
2024-05-09 17:59:22,043:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 17:59:22,089:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 17:59:22,089:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:59:22,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:22,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:22,156:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 17:59:22,156:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:59:22,183:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:22,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:22,183:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 17:59:22,225:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:59:22,249:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:22,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:22,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-09 17:59:22,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:22,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:22,319:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-09 17:59:22,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:22,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:22,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:22,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:22,454:INFO:Preparing preprocessing pipeline...
2024-05-09 17:59:22,456:INFO:Set up simple imputation.
2024-05-09 17:59:22,464:INFO:Set up encoding of ordinal features.
2024-05-09 17:59:22,474:INFO:Set up encoding of categorical features.
2024-05-09 17:59:22,744:INFO:Finished creating preprocessing pipeline.
2024-05-09 17:59:22,772:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Marcelo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['tipo_renda', 'educacao',
                                             'estado_civil',
                                             'tipo_residencia'],
                                    transformer=OneHotEncoder(cols=['tipo_renda',
                                                                    'educacao',
                                                                    'estado_civil',
                                                                    'tipo_residencia'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-05-09 17:59:22,772:INFO:Creating final display dataframe.
2024-05-09 17:59:23,306:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target               mau
2                   Target type            Binary
3           Original data shape       (47500, 13)
4        Transformed data shape       (47500, 30)
5   Transformed train set shape       (33250, 30)
6    Transformed test set shape       (14250, 30)
7              Numeric features                 5
8          Categorical features                 7
9      Rows with missing values             17.1%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              f1f3
2024-05-09 17:59:23,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:23,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:23,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:23,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 17:59:23,447:INFO:setup() successfully completed in 1.47s...............
2024-05-09 17:59:23,514:INFO:Initializing compare_models()
2024-05-09 17:59:23,514:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, include=None, exclude=None, fold=10, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, 'include': None, 'exclude': None, 'fold': 10, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-09 17:59:23,515:INFO:Checking exceptions
2024-05-09 17:59:23,523:INFO:Preparing display monitor
2024-05-09 17:59:23,545:INFO:Initializing Logistic Regression
2024-05-09 17:59:23,546:INFO:Total runtime is 1.6673405965169272e-05 minutes
2024-05-09 17:59:23,549:INFO:SubProcess create_model() called ==================================
2024-05-09 17:59:23,549:INFO:Initializing create_model()
2024-05-09 17:59:23,549:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:59:23,550:INFO:Checking exceptions
2024-05-09 17:59:23,550:INFO:Importing libraries
2024-05-09 17:59:23,550:INFO:Copying training dataset
2024-05-09 17:59:23,565:INFO:Defining folds
2024-05-09 17:59:23,565:INFO:Declaring metric variables
2024-05-09 17:59:23,568:INFO:Importing untrained model
2024-05-09 17:59:23,570:INFO:Logistic Regression Imported successfully
2024-05-09 17:59:23,579:INFO:Starting cross validation
2024-05-09 17:59:23,582:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:59:38,735:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:39,239:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:59:39,274:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:59:39,307:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:59:39,347:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:59:39,360:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:59:39,360:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:59:39,375:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:59:39,375:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:39,397:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:39,423:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:59:39,425:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:39,457:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 17:59:39,458:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:39,458:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:39,471:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:39,475:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:39,526:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:39,575:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:39,591:INFO:Calculating mean and std
2024-05-09 17:59:39,591:INFO:Creating metrics dataframe
2024-05-09 17:59:39,591:INFO:Uploading results into container
2024-05-09 17:59:39,591:INFO:Uploading model into container now
2024-05-09 17:59:39,591:INFO:_master_model_container: 1
2024-05-09 17:59:39,591:INFO:_display_container: 2
2024-05-09 17:59:39,591:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-09 17:59:39,591:INFO:create_model() successfully completed......................................
2024-05-09 17:59:39,756:INFO:SubProcess create_model() end ==================================
2024-05-09 17:59:39,756:INFO:Creating metrics dataframe
2024-05-09 17:59:39,756:INFO:Initializing K Neighbors Classifier
2024-05-09 17:59:39,756:INFO:Total runtime is 0.27017751932144163 minutes
2024-05-09 17:59:39,773:INFO:SubProcess create_model() called ==================================
2024-05-09 17:59:39,773:INFO:Initializing create_model()
2024-05-09 17:59:39,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:59:39,773:INFO:Checking exceptions
2024-05-09 17:59:39,773:INFO:Importing libraries
2024-05-09 17:59:39,773:INFO:Copying training dataset
2024-05-09 17:59:39,787:INFO:Defining folds
2024-05-09 17:59:39,788:INFO:Declaring metric variables
2024-05-09 17:59:39,789:INFO:Importing untrained model
2024-05-09 17:59:39,789:INFO:K Neighbors Classifier Imported successfully
2024-05-09 17:59:39,789:INFO:Starting cross validation
2024-05-09 17:59:39,805:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:59:46,084:INFO:Calculating mean and std
2024-05-09 17:59:46,099:INFO:Creating metrics dataframe
2024-05-09 17:59:46,099:INFO:Uploading results into container
2024-05-09 17:59:46,099:INFO:Uploading model into container now
2024-05-09 17:59:46,099:INFO:_master_model_container: 2
2024-05-09 17:59:46,099:INFO:_display_container: 2
2024-05-09 17:59:46,099:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 17:59:46,099:INFO:create_model() successfully completed......................................
2024-05-09 17:59:46,254:INFO:SubProcess create_model() end ==================================
2024-05-09 17:59:46,254:INFO:Creating metrics dataframe
2024-05-09 17:59:46,254:INFO:Initializing Naive Bayes
2024-05-09 17:59:46,254:INFO:Total runtime is 0.3784849683443705 minutes
2024-05-09 17:59:46,270:INFO:SubProcess create_model() called ==================================
2024-05-09 17:59:46,270:INFO:Initializing create_model()
2024-05-09 17:59:46,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:59:46,270:INFO:Checking exceptions
2024-05-09 17:59:46,270:INFO:Importing libraries
2024-05-09 17:59:46,270:INFO:Copying training dataset
2024-05-09 17:59:46,270:INFO:Defining folds
2024-05-09 17:59:46,270:INFO:Declaring metric variables
2024-05-09 17:59:46,285:INFO:Importing untrained model
2024-05-09 17:59:46,285:INFO:Naive Bayes Imported successfully
2024-05-09 17:59:46,285:INFO:Starting cross validation
2024-05-09 17:59:46,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:59:47,104:INFO:Calculating mean and std
2024-05-09 17:59:47,104:INFO:Creating metrics dataframe
2024-05-09 17:59:47,104:INFO:Uploading results into container
2024-05-09 17:59:47,104:INFO:Uploading model into container now
2024-05-09 17:59:47,104:INFO:_master_model_container: 3
2024-05-09 17:59:47,104:INFO:_display_container: 2
2024-05-09 17:59:47,104:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-09 17:59:47,104:INFO:create_model() successfully completed......................................
2024-05-09 17:59:47,255:INFO:SubProcess create_model() end ==================================
2024-05-09 17:59:47,255:INFO:Creating metrics dataframe
2024-05-09 17:59:47,262:INFO:Initializing Decision Tree Classifier
2024-05-09 17:59:47,263:INFO:Total runtime is 0.39530311028162635 minutes
2024-05-09 17:59:47,266:INFO:SubProcess create_model() called ==================================
2024-05-09 17:59:47,266:INFO:Initializing create_model()
2024-05-09 17:59:47,266:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:59:47,266:INFO:Checking exceptions
2024-05-09 17:59:47,266:INFO:Importing libraries
2024-05-09 17:59:47,267:INFO:Copying training dataset
2024-05-09 17:59:47,270:INFO:Defining folds
2024-05-09 17:59:47,270:INFO:Declaring metric variables
2024-05-09 17:59:47,270:INFO:Importing untrained model
2024-05-09 17:59:47,287:INFO:Decision Tree Classifier Imported successfully
2024-05-09 17:59:47,287:INFO:Starting cross validation
2024-05-09 17:59:47,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:59:48,503:INFO:Calculating mean and std
2024-05-09 17:59:48,519:INFO:Creating metrics dataframe
2024-05-09 17:59:48,520:INFO:Uploading results into container
2024-05-09 17:59:48,520:INFO:Uploading model into container now
2024-05-09 17:59:48,520:INFO:_master_model_container: 4
2024-05-09 17:59:48,520:INFO:_display_container: 2
2024-05-09 17:59:48,520:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 17:59:48,520:INFO:create_model() successfully completed......................................
2024-05-09 17:59:48,670:INFO:SubProcess create_model() end ==================================
2024-05-09 17:59:48,670:INFO:Creating metrics dataframe
2024-05-09 17:59:48,670:INFO:Initializing SVM - Linear Kernel
2024-05-09 17:59:48,670:INFO:Total runtime is 0.41875014305114744 minutes
2024-05-09 17:59:48,670:INFO:SubProcess create_model() called ==================================
2024-05-09 17:59:48,670:INFO:Initializing create_model()
2024-05-09 17:59:48,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:59:48,670:INFO:Checking exceptions
2024-05-09 17:59:48,670:INFO:Importing libraries
2024-05-09 17:59:48,670:INFO:Copying training dataset
2024-05-09 17:59:48,687:INFO:Defining folds
2024-05-09 17:59:48,687:INFO:Declaring metric variables
2024-05-09 17:59:48,687:INFO:Importing untrained model
2024-05-09 17:59:48,702:INFO:SVM - Linear Kernel Imported successfully
2024-05-09 17:59:48,703:INFO:Starting cross validation
2024-05-09 17:59:48,703:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:59:49,545:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:49,592:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:49,605:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:49,620:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:49,637:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:49,637:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:49,703:INFO:Calculating mean and std
2024-05-09 17:59:49,703:INFO:Creating metrics dataframe
2024-05-09 17:59:49,703:INFO:Uploading results into container
2024-05-09 17:59:49,703:INFO:Uploading model into container now
2024-05-09 17:59:49,703:INFO:_master_model_container: 5
2024-05-09 17:59:49,703:INFO:_display_container: 2
2024-05-09 17:59:49,703:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-09 17:59:49,703:INFO:create_model() successfully completed......................................
2024-05-09 17:59:49,837:INFO:SubProcess create_model() end ==================================
2024-05-09 17:59:49,837:INFO:Creating metrics dataframe
2024-05-09 17:59:49,853:INFO:Initializing Ridge Classifier
2024-05-09 17:59:49,853:INFO:Total runtime is 0.4384709358215332 minutes
2024-05-09 17:59:49,853:INFO:SubProcess create_model() called ==================================
2024-05-09 17:59:49,853:INFO:Initializing create_model()
2024-05-09 17:59:49,853:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:59:49,853:INFO:Checking exceptions
2024-05-09 17:59:49,853:INFO:Importing libraries
2024-05-09 17:59:49,853:INFO:Copying training dataset
2024-05-09 17:59:49,870:INFO:Defining folds
2024-05-09 17:59:49,870:INFO:Declaring metric variables
2024-05-09 17:59:49,870:INFO:Importing untrained model
2024-05-09 17:59:49,870:INFO:Ridge Classifier Imported successfully
2024-05-09 17:59:49,886:INFO:Starting cross validation
2024-05-09 17:59:49,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:59:50,672:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:50,672:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:50,689:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:50,704:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:50,708:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:50,712:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:50,725:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:50,739:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:50,739:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:50,739:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 17:59:50,751:INFO:Calculating mean and std
2024-05-09 17:59:50,752:INFO:Creating metrics dataframe
2024-05-09 17:59:50,754:INFO:Uploading results into container
2024-05-09 17:59:50,754:INFO:Uploading model into container now
2024-05-09 17:59:50,754:INFO:_master_model_container: 6
2024-05-09 17:59:50,754:INFO:_display_container: 2
2024-05-09 17:59:50,754:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-09 17:59:50,756:INFO:create_model() successfully completed......................................
2024-05-09 17:59:50,886:INFO:SubProcess create_model() end ==================================
2024-05-09 17:59:50,886:INFO:Creating metrics dataframe
2024-05-09 17:59:50,886:INFO:Initializing Random Forest Classifier
2024-05-09 17:59:50,886:INFO:Total runtime is 0.45568925539652505 minutes
2024-05-09 17:59:50,886:INFO:SubProcess create_model() called ==================================
2024-05-09 17:59:50,886:INFO:Initializing create_model()
2024-05-09 17:59:50,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:59:50,886:INFO:Checking exceptions
2024-05-09 17:59:50,886:INFO:Importing libraries
2024-05-09 17:59:50,886:INFO:Copying training dataset
2024-05-09 17:59:50,905:INFO:Defining folds
2024-05-09 17:59:50,905:INFO:Declaring metric variables
2024-05-09 17:59:50,913:INFO:Importing untrained model
2024-05-09 17:59:50,917:INFO:Random Forest Classifier Imported successfully
2024-05-09 17:59:50,920:INFO:Starting cross validation
2024-05-09 17:59:50,920:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:59:57,828:INFO:Calculating mean and std
2024-05-09 17:59:57,829:INFO:Creating metrics dataframe
2024-05-09 17:59:57,832:INFO:Uploading results into container
2024-05-09 17:59:57,832:INFO:Uploading model into container now
2024-05-09 17:59:57,833:INFO:_master_model_container: 7
2024-05-09 17:59:57,833:INFO:_display_container: 2
2024-05-09 17:59:57,833:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 17:59:57,833:INFO:create_model() successfully completed......................................
2024-05-09 17:59:57,970:INFO:SubProcess create_model() end ==================================
2024-05-09 17:59:57,970:INFO:Creating metrics dataframe
2024-05-09 17:59:57,986:INFO:Initializing Quadratic Discriminant Analysis
2024-05-09 17:59:57,986:INFO:Total runtime is 0.574018915494283 minutes
2024-05-09 17:59:57,986:INFO:SubProcess create_model() called ==================================
2024-05-09 17:59:57,986:INFO:Initializing create_model()
2024-05-09 17:59:57,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:59:57,986:INFO:Checking exceptions
2024-05-09 17:59:57,986:INFO:Importing libraries
2024-05-09 17:59:57,986:INFO:Copying training dataset
2024-05-09 17:59:58,003:INFO:Defining folds
2024-05-09 17:59:58,003:INFO:Declaring metric variables
2024-05-09 17:59:58,003:INFO:Importing untrained model
2024-05-09 17:59:58,019:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-09 17:59:58,019:INFO:Starting cross validation
2024-05-09 17:59:58,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:59:58,921:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:59:58,923:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:59:58,953:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:59:58,971:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:59:58,971:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:59:59,007:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:59:59,057:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:59:59,058:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:59:59,069:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:59:59,085:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 17:59:59,186:INFO:Calculating mean and std
2024-05-09 17:59:59,186:INFO:Creating metrics dataframe
2024-05-09 17:59:59,201:INFO:Uploading results into container
2024-05-09 17:59:59,201:INFO:Uploading model into container now
2024-05-09 17:59:59,202:INFO:_master_model_container: 8
2024-05-09 17:59:59,202:INFO:_display_container: 2
2024-05-09 17:59:59,203:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-09 17:59:59,203:INFO:create_model() successfully completed......................................
2024-05-09 17:59:59,336:INFO:SubProcess create_model() end ==================================
2024-05-09 17:59:59,336:INFO:Creating metrics dataframe
2024-05-09 17:59:59,353:INFO:Initializing Ada Boost Classifier
2024-05-09 17:59:59,353:INFO:Total runtime is 0.5967911799748737 minutes
2024-05-09 17:59:59,353:INFO:SubProcess create_model() called ==================================
2024-05-09 17:59:59,353:INFO:Initializing create_model()
2024-05-09 17:59:59,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 17:59:59,353:INFO:Checking exceptions
2024-05-09 17:59:59,353:INFO:Importing libraries
2024-05-09 17:59:59,353:INFO:Copying training dataset
2024-05-09 17:59:59,376:INFO:Defining folds
2024-05-09 17:59:59,376:INFO:Declaring metric variables
2024-05-09 17:59:59,379:INFO:Importing untrained model
2024-05-09 17:59:59,381:INFO:Ada Boost Classifier Imported successfully
2024-05-09 17:59:59,386:INFO:Starting cross validation
2024-05-09 17:59:59,386:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 17:59:59,961:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 17:59:59,970:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:00,024:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:00,028:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:00,051:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:00,055:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:00,083:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:00,083:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:00,086:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:00,103:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:02,716:INFO:Calculating mean and std
2024-05-09 18:00:02,716:INFO:Creating metrics dataframe
2024-05-09 18:00:02,716:INFO:Uploading results into container
2024-05-09 18:00:02,716:INFO:Uploading model into container now
2024-05-09 18:00:02,716:INFO:_master_model_container: 9
2024-05-09 18:00:02,716:INFO:_display_container: 2
2024-05-09 18:00:02,716:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-09 18:00:02,716:INFO:create_model() successfully completed......................................
2024-05-09 18:00:02,853:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:02,853:INFO:Creating metrics dataframe
2024-05-09 18:00:02,868:INFO:Initializing Gradient Boosting Classifier
2024-05-09 18:00:02,868:INFO:Total runtime is 0.6553874810536702 minutes
2024-05-09 18:00:02,868:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:02,868:INFO:Initializing create_model()
2024-05-09 18:00:02,868:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:02,868:INFO:Checking exceptions
2024-05-09 18:00:02,868:INFO:Importing libraries
2024-05-09 18:00:02,868:INFO:Copying training dataset
2024-05-09 18:00:02,884:INFO:Defining folds
2024-05-09 18:00:02,884:INFO:Declaring metric variables
2024-05-09 18:00:02,884:INFO:Importing untrained model
2024-05-09 18:00:02,884:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 18:00:02,900:INFO:Starting cross validation
2024-05-09 18:00:02,900:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:11,518:INFO:Calculating mean and std
2024-05-09 18:00:11,518:INFO:Creating metrics dataframe
2024-05-09 18:00:11,534:INFO:Uploading results into container
2024-05-09 18:00:11,535:INFO:Uploading model into container now
2024-05-09 18:00:11,535:INFO:_master_model_container: 10
2024-05-09 18:00:11,535:INFO:_display_container: 2
2024-05-09 18:00:11,535:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 18:00:11,535:INFO:create_model() successfully completed......................................
2024-05-09 18:00:11,701:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:11,701:INFO:Creating metrics dataframe
2024-05-09 18:00:11,709:INFO:Initializing Linear Discriminant Analysis
2024-05-09 18:00:11,709:INFO:Total runtime is 0.80273939371109 minutes
2024-05-09 18:00:11,709:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:11,709:INFO:Initializing create_model()
2024-05-09 18:00:11,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:11,709:INFO:Checking exceptions
2024-05-09 18:00:11,709:INFO:Importing libraries
2024-05-09 18:00:11,709:INFO:Copying training dataset
2024-05-09 18:00:11,718:INFO:Defining folds
2024-05-09 18:00:11,718:INFO:Declaring metric variables
2024-05-09 18:00:11,733:INFO:Importing untrained model
2024-05-09 18:00:11,735:INFO:Linear Discriminant Analysis Imported successfully
2024-05-09 18:00:11,735:INFO:Starting cross validation
2024-05-09 18:00:11,735:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:12,902:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:12,902:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:12,918:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:12,935:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:12,952:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:12,968:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:12,990:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:12,994:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:12,999:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:13,001:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:13,001:INFO:Calculating mean and std
2024-05-09 18:00:13,001:INFO:Creating metrics dataframe
2024-05-09 18:00:13,017:INFO:Uploading results into container
2024-05-09 18:00:13,018:INFO:Uploading model into container now
2024-05-09 18:00:13,018:INFO:_master_model_container: 11
2024-05-09 18:00:13,018:INFO:_display_container: 2
2024-05-09 18:00:13,018:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-09 18:00:13,018:INFO:create_model() successfully completed......................................
2024-05-09 18:00:13,151:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:13,151:INFO:Creating metrics dataframe
2024-05-09 18:00:13,168:INFO:Initializing Extra Trees Classifier
2024-05-09 18:00:13,168:INFO:Total runtime is 0.8270454565684 minutes
2024-05-09 18:00:13,168:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:13,168:INFO:Initializing create_model()
2024-05-09 18:00:13,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:13,168:INFO:Checking exceptions
2024-05-09 18:00:13,168:INFO:Importing libraries
2024-05-09 18:00:13,168:INFO:Copying training dataset
2024-05-09 18:00:13,184:INFO:Defining folds
2024-05-09 18:00:13,184:INFO:Declaring metric variables
2024-05-09 18:00:13,184:INFO:Importing untrained model
2024-05-09 18:00:13,184:INFO:Extra Trees Classifier Imported successfully
2024-05-09 18:00:13,199:INFO:Starting cross validation
2024-05-09 18:00:13,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:20,117:INFO:Calculating mean and std
2024-05-09 18:00:20,117:INFO:Creating metrics dataframe
2024-05-09 18:00:20,117:INFO:Uploading results into container
2024-05-09 18:00:20,117:INFO:Uploading model into container now
2024-05-09 18:00:20,117:INFO:_master_model_container: 12
2024-05-09 18:00:20,117:INFO:_display_container: 2
2024-05-09 18:00:20,117:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-09 18:00:20,117:INFO:create_model() successfully completed......................................
2024-05-09 18:00:20,276:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:20,276:INFO:Creating metrics dataframe
2024-05-09 18:00:20,289:INFO:Initializing Light Gradient Boosting Machine
2024-05-09 18:00:20,289:INFO:Total runtime is 0.9457308371861775 minutes
2024-05-09 18:00:20,289:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:20,289:INFO:Initializing create_model()
2024-05-09 18:00:20,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:20,289:INFO:Checking exceptions
2024-05-09 18:00:20,289:INFO:Importing libraries
2024-05-09 18:00:20,289:INFO:Copying training dataset
2024-05-09 18:00:20,305:INFO:Defining folds
2024-05-09 18:00:20,305:INFO:Declaring metric variables
2024-05-09 18:00:20,305:INFO:Importing untrained model
2024-05-09 18:00:20,305:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-09 18:00:20,322:INFO:Starting cross validation
2024-05-09 18:00:20,322:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:22,834:INFO:Calculating mean and std
2024-05-09 18:00:22,834:INFO:Creating metrics dataframe
2024-05-09 18:00:22,834:INFO:Uploading results into container
2024-05-09 18:00:22,834:INFO:Uploading model into container now
2024-05-09 18:00:22,834:INFO:_master_model_container: 13
2024-05-09 18:00:22,834:INFO:_display_container: 2
2024-05-09 18:00:22,834:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-09 18:00:22,834:INFO:create_model() successfully completed......................................
2024-05-09 18:00:23,033:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:23,033:INFO:Creating metrics dataframe
2024-05-09 18:00:23,040:INFO:Initializing Dummy Classifier
2024-05-09 18:00:23,040:INFO:Total runtime is 0.9915873487790424 minutes
2024-05-09 18:00:23,051:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:23,051:INFO:Initializing create_model()
2024-05-09 18:00:23,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86CAD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:23,051:INFO:Checking exceptions
2024-05-09 18:00:23,051:INFO:Importing libraries
2024-05-09 18:00:23,051:INFO:Copying training dataset
2024-05-09 18:00:23,064:INFO:Defining folds
2024-05-09 18:00:23,064:INFO:Declaring metric variables
2024-05-09 18:00:23,066:INFO:Importing untrained model
2024-05-09 18:00:23,066:INFO:Dummy Classifier Imported successfully
2024-05-09 18:00:23,066:INFO:Starting cross validation
2024-05-09 18:00:23,066:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:23,733:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:23,737:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:23,753:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:23,753:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:23,769:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:23,784:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:23,784:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:23,784:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:23,784:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:23,800:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:23,816:INFO:Calculating mean and std
2024-05-09 18:00:23,816:INFO:Creating metrics dataframe
2024-05-09 18:00:23,816:INFO:Uploading results into container
2024-05-09 18:00:23,816:INFO:Uploading model into container now
2024-05-09 18:00:23,816:INFO:_master_model_container: 14
2024-05-09 18:00:23,816:INFO:_display_container: 2
2024-05-09 18:00:23,816:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-09 18:00:23,816:INFO:create_model() successfully completed......................................
2024-05-09 18:00:23,951:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:23,951:INFO:Creating metrics dataframe
2024-05-09 18:00:23,966:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-05-09 18:00:23,984:INFO:Initializing create_model()
2024-05-09 18:00:23,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:23,984:INFO:Checking exceptions
2024-05-09 18:00:23,984:INFO:Importing libraries
2024-05-09 18:00:23,984:INFO:Copying training dataset
2024-05-09 18:00:23,984:INFO:Defining folds
2024-05-09 18:00:23,984:INFO:Declaring metric variables
2024-05-09 18:00:23,984:INFO:Importing untrained model
2024-05-09 18:00:23,984:INFO:Declaring custom model
2024-05-09 18:00:23,999:INFO:Logistic Regression Imported successfully
2024-05-09 18:00:24,001:INFO:Cross validation set to False
2024-05-09 18:00:24,001:INFO:Fitting Model
2024-05-09 18:00:26,246:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-09 18:00:26,246:INFO:create_model() successfully completed......................................
2024-05-09 18:00:26,429:INFO:_master_model_container: 14
2024-05-09 18:00:26,429:INFO:_display_container: 2
2024-05-09 18:00:26,430:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-09 18:00:26,430:INFO:compare_models() successfully completed......................................
2024-05-09 18:00:26,471:INFO:Initializing compare_models()
2024-05-09 18:00:26,471:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, include=None, exclude=None, fold=10, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, 'include': None, 'exclude': None, 'fold': 10, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-09 18:00:26,477:INFO:Checking exceptions
2024-05-09 18:00:26,482:INFO:Preparing display monitor
2024-05-09 18:00:26,506:INFO:Initializing Logistic Regression
2024-05-09 18:00:26,506:INFO:Total runtime is 0.0 minutes
2024-05-09 18:00:26,510:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:26,510:INFO:Initializing create_model()
2024-05-09 18:00:26,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:26,511:INFO:Checking exceptions
2024-05-09 18:00:26,511:INFO:Importing libraries
2024-05-09 18:00:26,511:INFO:Copying training dataset
2024-05-09 18:00:26,520:INFO:Defining folds
2024-05-09 18:00:26,520:INFO:Declaring metric variables
2024-05-09 18:00:26,532:INFO:Importing untrained model
2024-05-09 18:00:26,537:INFO:Logistic Regression Imported successfully
2024-05-09 18:00:26,547:INFO:Starting cross validation
2024-05-09 18:00:26,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:34,096:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:34,584:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 18:00:34,613:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 18:00:34,673:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 18:00:34,688:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 18:00:34,705:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 18:00:34,708:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:34,712:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 18:00:34,724:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 18:00:34,730:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:34,753:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 18:00:34,754:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:34,767:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-09 18:00:34,783:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:34,783:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:34,799:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:34,815:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:34,816:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:34,833:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:34,849:INFO:Calculating mean and std
2024-05-09 18:00:34,849:INFO:Creating metrics dataframe
2024-05-09 18:00:34,849:INFO:Uploading results into container
2024-05-09 18:00:34,849:INFO:Uploading model into container now
2024-05-09 18:00:34,849:INFO:_master_model_container: 15
2024-05-09 18:00:34,849:INFO:_display_container: 3
2024-05-09 18:00:34,849:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-09 18:00:34,849:INFO:create_model() successfully completed......................................
2024-05-09 18:00:35,000:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:35,000:INFO:Creating metrics dataframe
2024-05-09 18:00:35,000:INFO:Initializing K Neighbors Classifier
2024-05-09 18:00:35,000:INFO:Total runtime is 0.14155413309733073 minutes
2024-05-09 18:00:35,000:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:35,000:INFO:Initializing create_model()
2024-05-09 18:00:35,000:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:35,000:INFO:Checking exceptions
2024-05-09 18:00:35,000:INFO:Importing libraries
2024-05-09 18:00:35,000:INFO:Copying training dataset
2024-05-09 18:00:35,016:INFO:Defining folds
2024-05-09 18:00:35,016:INFO:Declaring metric variables
2024-05-09 18:00:35,031:INFO:Importing untrained model
2024-05-09 18:00:35,036:INFO:K Neighbors Classifier Imported successfully
2024-05-09 18:00:35,042:INFO:Starting cross validation
2024-05-09 18:00:35,045:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:38,081:INFO:Calculating mean and std
2024-05-09 18:00:38,081:INFO:Creating metrics dataframe
2024-05-09 18:00:38,081:INFO:Uploading results into container
2024-05-09 18:00:38,081:INFO:Uploading model into container now
2024-05-09 18:00:38,081:INFO:_master_model_container: 16
2024-05-09 18:00:38,081:INFO:_display_container: 3
2024-05-09 18:00:38,081:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-09 18:00:38,081:INFO:create_model() successfully completed......................................
2024-05-09 18:00:38,213:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:38,213:INFO:Creating metrics dataframe
2024-05-09 18:00:38,229:INFO:Initializing Naive Bayes
2024-05-09 18:00:38,229:INFO:Total runtime is 0.19537000656127929 minutes
2024-05-09 18:00:38,229:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:38,229:INFO:Initializing create_model()
2024-05-09 18:00:38,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:38,229:INFO:Checking exceptions
2024-05-09 18:00:38,229:INFO:Importing libraries
2024-05-09 18:00:38,229:INFO:Copying training dataset
2024-05-09 18:00:38,244:INFO:Defining folds
2024-05-09 18:00:38,244:INFO:Declaring metric variables
2024-05-09 18:00:38,244:INFO:Importing untrained model
2024-05-09 18:00:38,260:INFO:Naive Bayes Imported successfully
2024-05-09 18:00:38,267:INFO:Starting cross validation
2024-05-09 18:00:38,269:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:39,081:INFO:Calculating mean and std
2024-05-09 18:00:39,081:INFO:Creating metrics dataframe
2024-05-09 18:00:39,097:INFO:Uploading results into container
2024-05-09 18:00:39,098:INFO:Uploading model into container now
2024-05-09 18:00:39,098:INFO:_master_model_container: 17
2024-05-09 18:00:39,098:INFO:_display_container: 3
2024-05-09 18:00:39,098:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-09 18:00:39,099:INFO:create_model() successfully completed......................................
2024-05-09 18:00:39,233:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:39,233:INFO:Creating metrics dataframe
2024-05-09 18:00:39,252:INFO:Initializing Decision Tree Classifier
2024-05-09 18:00:39,252:INFO:Total runtime is 0.21242628494898477 minutes
2024-05-09 18:00:39,255:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:39,255:INFO:Initializing create_model()
2024-05-09 18:00:39,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:39,255:INFO:Checking exceptions
2024-05-09 18:00:39,255:INFO:Importing libraries
2024-05-09 18:00:39,255:INFO:Copying training dataset
2024-05-09 18:00:39,271:INFO:Defining folds
2024-05-09 18:00:39,271:INFO:Declaring metric variables
2024-05-09 18:00:39,272:INFO:Importing untrained model
2024-05-09 18:00:39,272:INFO:Decision Tree Classifier Imported successfully
2024-05-09 18:00:39,285:INFO:Starting cross validation
2024-05-09 18:00:39,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:40,556:INFO:Calculating mean and std
2024-05-09 18:00:40,557:INFO:Creating metrics dataframe
2024-05-09 18:00:40,559:INFO:Uploading results into container
2024-05-09 18:00:40,559:INFO:Uploading model into container now
2024-05-09 18:00:40,561:INFO:_master_model_container: 18
2024-05-09 18:00:40,561:INFO:_display_container: 3
2024-05-09 18:00:40,561:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-09 18:00:40,561:INFO:create_model() successfully completed......................................
2024-05-09 18:00:40,728:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:40,728:INFO:Creating metrics dataframe
2024-05-09 18:00:40,737:INFO:Initializing SVM - Linear Kernel
2024-05-09 18:00:40,737:INFO:Total runtime is 0.23718181053797402 minutes
2024-05-09 18:00:40,741:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:40,741:INFO:Initializing create_model()
2024-05-09 18:00:40,741:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:40,741:INFO:Checking exceptions
2024-05-09 18:00:40,741:INFO:Importing libraries
2024-05-09 18:00:40,741:INFO:Copying training dataset
2024-05-09 18:00:40,756:INFO:Defining folds
2024-05-09 18:00:40,756:INFO:Declaring metric variables
2024-05-09 18:00:40,759:INFO:Importing untrained model
2024-05-09 18:00:40,762:INFO:SVM - Linear Kernel Imported successfully
2024-05-09 18:00:40,770:INFO:Starting cross validation
2024-05-09 18:00:40,771:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:41,669:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:41,686:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:41,698:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:41,713:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:41,713:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:41,749:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:41,812:INFO:Calculating mean and std
2024-05-09 18:00:41,814:INFO:Creating metrics dataframe
2024-05-09 18:00:41,816:INFO:Uploading results into container
2024-05-09 18:00:41,817:INFO:Uploading model into container now
2024-05-09 18:00:41,817:INFO:_master_model_container: 19
2024-05-09 18:00:41,817:INFO:_display_container: 3
2024-05-09 18:00:41,818:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-09 18:00:41,818:INFO:create_model() successfully completed......................................
2024-05-09 18:00:41,950:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:41,950:INFO:Creating metrics dataframe
2024-05-09 18:00:41,965:INFO:Initializing Ridge Classifier
2024-05-09 18:00:41,965:INFO:Total runtime is 0.25764746665954585 minutes
2024-05-09 18:00:41,965:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:41,965:INFO:Initializing create_model()
2024-05-09 18:00:41,965:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:41,965:INFO:Checking exceptions
2024-05-09 18:00:41,965:INFO:Importing libraries
2024-05-09 18:00:41,965:INFO:Copying training dataset
2024-05-09 18:00:41,981:INFO:Defining folds
2024-05-09 18:00:41,981:INFO:Declaring metric variables
2024-05-09 18:00:41,981:INFO:Importing untrained model
2024-05-09 18:00:41,996:INFO:Ridge Classifier Imported successfully
2024-05-09 18:00:42,001:INFO:Starting cross validation
2024-05-09 18:00:42,004:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:42,778:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:42,778:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:42,793:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:42,793:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:42,798:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:42,817:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:42,817:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:42,817:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:42,817:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:42,832:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:00:42,848:INFO:Calculating mean and std
2024-05-09 18:00:42,848:INFO:Creating metrics dataframe
2024-05-09 18:00:42,848:INFO:Uploading results into container
2024-05-09 18:00:42,848:INFO:Uploading model into container now
2024-05-09 18:00:42,848:INFO:_master_model_container: 20
2024-05-09 18:00:42,848:INFO:_display_container: 3
2024-05-09 18:00:42,848:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-09 18:00:42,848:INFO:create_model() successfully completed......................................
2024-05-09 18:00:42,995:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:42,995:INFO:Creating metrics dataframe
2024-05-09 18:00:43,016:INFO:Initializing Random Forest Classifier
2024-05-09 18:00:43,016:INFO:Total runtime is 0.27516525189081825 minutes
2024-05-09 18:00:43,016:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:43,016:INFO:Initializing create_model()
2024-05-09 18:00:43,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:43,016:INFO:Checking exceptions
2024-05-09 18:00:43,016:INFO:Importing libraries
2024-05-09 18:00:43,016:INFO:Copying training dataset
2024-05-09 18:00:43,041:INFO:Defining folds
2024-05-09 18:00:43,043:INFO:Declaring metric variables
2024-05-09 18:00:43,048:INFO:Importing untrained model
2024-05-09 18:00:43,056:INFO:Random Forest Classifier Imported successfully
2024-05-09 18:00:43,067:INFO:Starting cross validation
2024-05-09 18:00:43,067:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:49,681:INFO:Calculating mean and std
2024-05-09 18:00:49,681:INFO:Creating metrics dataframe
2024-05-09 18:00:49,681:INFO:Uploading results into container
2024-05-09 18:00:49,696:INFO:Uploading model into container now
2024-05-09 18:00:49,697:INFO:_master_model_container: 21
2024-05-09 18:00:49,697:INFO:_display_container: 3
2024-05-09 18:00:49,698:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-09 18:00:49,698:INFO:create_model() successfully completed......................................
2024-05-09 18:00:49,840:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:49,840:INFO:Creating metrics dataframe
2024-05-09 18:00:49,847:INFO:Initializing Quadratic Discriminant Analysis
2024-05-09 18:00:49,847:INFO:Total runtime is 0.38901572227478026 minutes
2024-05-09 18:00:49,847:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:49,847:INFO:Initializing create_model()
2024-05-09 18:00:49,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:49,847:INFO:Checking exceptions
2024-05-09 18:00:49,847:INFO:Importing libraries
2024-05-09 18:00:49,847:INFO:Copying training dataset
2024-05-09 18:00:49,866:INFO:Defining folds
2024-05-09 18:00:49,866:INFO:Declaring metric variables
2024-05-09 18:00:49,870:INFO:Importing untrained model
2024-05-09 18:00:49,871:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-09 18:00:49,871:INFO:Starting cross validation
2024-05-09 18:00:49,880:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:50,623:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 18:00:50,695:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 18:00:50,732:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 18:00:50,775:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 18:00:50,784:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 18:00:50,817:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 18:00:50,822:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 18:00:50,831:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 18:00:50,831:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 18:00:50,848:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-09 18:00:50,969:INFO:Calculating mean and std
2024-05-09 18:00:50,969:INFO:Creating metrics dataframe
2024-05-09 18:00:50,969:INFO:Uploading results into container
2024-05-09 18:00:50,969:INFO:Uploading model into container now
2024-05-09 18:00:50,969:INFO:_master_model_container: 22
2024-05-09 18:00:50,969:INFO:_display_container: 3
2024-05-09 18:00:50,969:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-09 18:00:50,969:INFO:create_model() successfully completed......................................
2024-05-09 18:00:51,118:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:51,118:INFO:Creating metrics dataframe
2024-05-09 18:00:51,132:INFO:Initializing Ada Boost Classifier
2024-05-09 18:00:51,132:INFO:Total runtime is 0.41042720079421996 minutes
2024-05-09 18:00:51,136:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:51,136:INFO:Initializing create_model()
2024-05-09 18:00:51,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:51,136:INFO:Checking exceptions
2024-05-09 18:00:51,136:INFO:Importing libraries
2024-05-09 18:00:51,136:INFO:Copying training dataset
2024-05-09 18:00:51,150:INFO:Defining folds
2024-05-09 18:00:51,150:INFO:Declaring metric variables
2024-05-09 18:00:51,152:INFO:Importing untrained model
2024-05-09 18:00:51,152:INFO:Ada Boost Classifier Imported successfully
2024-05-09 18:00:51,152:INFO:Starting cross validation
2024-05-09 18:00:51,165:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:00:51,714:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:51,748:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:51,764:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:51,764:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:51,787:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:51,798:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:51,836:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:51,836:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:51,836:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:51,841:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-09 18:00:54,197:INFO:Calculating mean and std
2024-05-09 18:00:54,197:INFO:Creating metrics dataframe
2024-05-09 18:00:54,197:INFO:Uploading results into container
2024-05-09 18:00:54,197:INFO:Uploading model into container now
2024-05-09 18:00:54,197:INFO:_master_model_container: 23
2024-05-09 18:00:54,197:INFO:_display_container: 3
2024-05-09 18:00:54,197:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-09 18:00:54,197:INFO:create_model() successfully completed......................................
2024-05-09 18:00:54,347:INFO:SubProcess create_model() end ==================================
2024-05-09 18:00:54,347:INFO:Creating metrics dataframe
2024-05-09 18:00:54,364:INFO:Initializing Gradient Boosting Classifier
2024-05-09 18:00:54,364:INFO:Total runtime is 0.4642940560976664 minutes
2024-05-09 18:00:54,366:INFO:SubProcess create_model() called ==================================
2024-05-09 18:00:54,366:INFO:Initializing create_model()
2024-05-09 18:00:54,366:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:00:54,366:INFO:Checking exceptions
2024-05-09 18:00:54,366:INFO:Importing libraries
2024-05-09 18:00:54,366:INFO:Copying training dataset
2024-05-09 18:00:54,382:INFO:Defining folds
2024-05-09 18:00:54,382:INFO:Declaring metric variables
2024-05-09 18:00:54,385:INFO:Importing untrained model
2024-05-09 18:00:54,388:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 18:00:54,388:INFO:Starting cross validation
2024-05-09 18:00:54,396:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:01:02,346:INFO:Calculating mean and std
2024-05-09 18:01:02,346:INFO:Creating metrics dataframe
2024-05-09 18:01:02,346:INFO:Uploading results into container
2024-05-09 18:01:02,362:INFO:Uploading model into container now
2024-05-09 18:01:02,362:INFO:_master_model_container: 24
2024-05-09 18:01:02,362:INFO:_display_container: 3
2024-05-09 18:01:02,363:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 18:01:02,363:INFO:create_model() successfully completed......................................
2024-05-09 18:01:02,496:INFO:SubProcess create_model() end ==================================
2024-05-09 18:01:02,496:INFO:Creating metrics dataframe
2024-05-09 18:01:02,514:INFO:Initializing Linear Discriminant Analysis
2024-05-09 18:01:02,515:INFO:Total runtime is 0.6001405596733093 minutes
2024-05-09 18:01:02,515:INFO:SubProcess create_model() called ==================================
2024-05-09 18:01:02,515:INFO:Initializing create_model()
2024-05-09 18:01:02,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:01:02,515:INFO:Checking exceptions
2024-05-09 18:01:02,515:INFO:Importing libraries
2024-05-09 18:01:02,515:INFO:Copying training dataset
2024-05-09 18:01:02,532:INFO:Defining folds
2024-05-09 18:01:02,532:INFO:Declaring metric variables
2024-05-09 18:01:02,532:INFO:Importing untrained model
2024-05-09 18:01:02,532:INFO:Linear Discriminant Analysis Imported successfully
2024-05-09 18:01:02,532:INFO:Starting cross validation
2024-05-09 18:01:02,547:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:01:03,516:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:03,532:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:03,532:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:03,548:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:03,548:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:03,564:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:03,564:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:03,564:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:03,564:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:03,564:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:03,599:INFO:Calculating mean and std
2024-05-09 18:01:03,600:INFO:Creating metrics dataframe
2024-05-09 18:01:03,602:INFO:Uploading results into container
2024-05-09 18:01:03,602:INFO:Uploading model into container now
2024-05-09 18:01:03,603:INFO:_master_model_container: 25
2024-05-09 18:01:03,603:INFO:_display_container: 3
2024-05-09 18:01:03,603:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-09 18:01:03,603:INFO:create_model() successfully completed......................................
2024-05-09 18:01:03,730:INFO:SubProcess create_model() end ==================================
2024-05-09 18:01:03,730:INFO:Creating metrics dataframe
2024-05-09 18:01:03,746:INFO:Initializing Extra Trees Classifier
2024-05-09 18:01:03,746:INFO:Total runtime is 0.6206601063410441 minutes
2024-05-09 18:01:03,746:INFO:SubProcess create_model() called ==================================
2024-05-09 18:01:03,746:INFO:Initializing create_model()
2024-05-09 18:01:03,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:01:03,746:INFO:Checking exceptions
2024-05-09 18:01:03,746:INFO:Importing libraries
2024-05-09 18:01:03,746:INFO:Copying training dataset
2024-05-09 18:01:03,762:INFO:Defining folds
2024-05-09 18:01:03,762:INFO:Declaring metric variables
2024-05-09 18:01:03,762:INFO:Importing untrained model
2024-05-09 18:01:03,776:INFO:Extra Trees Classifier Imported successfully
2024-05-09 18:01:03,782:INFO:Starting cross validation
2024-05-09 18:01:03,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:01:10,265:INFO:Calculating mean and std
2024-05-09 18:01:10,265:INFO:Creating metrics dataframe
2024-05-09 18:01:10,281:INFO:Uploading results into container
2024-05-09 18:01:10,281:INFO:Uploading model into container now
2024-05-09 18:01:10,281:INFO:_master_model_container: 26
2024-05-09 18:01:10,281:INFO:_display_container: 3
2024-05-09 18:01:10,283:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-09 18:01:10,283:INFO:create_model() successfully completed......................................
2024-05-09 18:01:10,429:INFO:SubProcess create_model() end ==================================
2024-05-09 18:01:10,429:INFO:Creating metrics dataframe
2024-05-09 18:01:10,445:INFO:Initializing Light Gradient Boosting Machine
2024-05-09 18:01:10,445:INFO:Total runtime is 0.7323039611180623 minutes
2024-05-09 18:01:10,445:INFO:SubProcess create_model() called ==================================
2024-05-09 18:01:10,445:INFO:Initializing create_model()
2024-05-09 18:01:10,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:01:10,445:INFO:Checking exceptions
2024-05-09 18:01:10,445:INFO:Importing libraries
2024-05-09 18:01:10,445:INFO:Copying training dataset
2024-05-09 18:01:10,460:INFO:Defining folds
2024-05-09 18:01:10,460:INFO:Declaring metric variables
2024-05-09 18:01:10,460:INFO:Importing untrained model
2024-05-09 18:01:10,471:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-09 18:01:10,478:INFO:Starting cross validation
2024-05-09 18:01:10,480:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:01:12,965:INFO:Calculating mean and std
2024-05-09 18:01:12,965:INFO:Creating metrics dataframe
2024-05-09 18:01:12,965:INFO:Uploading results into container
2024-05-09 18:01:12,965:INFO:Uploading model into container now
2024-05-09 18:01:12,981:INFO:_master_model_container: 27
2024-05-09 18:01:12,981:INFO:_display_container: 3
2024-05-09 18:01:12,981:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-09 18:01:12,982:INFO:create_model() successfully completed......................................
2024-05-09 18:01:13,148:INFO:SubProcess create_model() end ==================================
2024-05-09 18:01:13,148:INFO:Creating metrics dataframe
2024-05-09 18:01:13,148:INFO:Initializing Dummy Classifier
2024-05-09 18:01:13,148:INFO:Total runtime is 0.7773540894190469 minutes
2024-05-09 18:01:13,163:INFO:SubProcess create_model() called ==================================
2024-05-09 18:01:13,163:INFO:Initializing create_model()
2024-05-09 18:01:13,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B84344F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:01:13,163:INFO:Checking exceptions
2024-05-09 18:01:13,163:INFO:Importing libraries
2024-05-09 18:01:13,163:INFO:Copying training dataset
2024-05-09 18:01:13,179:INFO:Defining folds
2024-05-09 18:01:13,179:INFO:Declaring metric variables
2024-05-09 18:01:13,182:INFO:Importing untrained model
2024-05-09 18:01:13,185:INFO:Dummy Classifier Imported successfully
2024-05-09 18:01:13,190:INFO:Starting cross validation
2024-05-09 18:01:13,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:01:13,848:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:13,864:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:13,882:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:13,883:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:13,883:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:13,899:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:13,899:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:13,915:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:13,930:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:13,930:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-09 18:01:13,946:INFO:Calculating mean and std
2024-05-09 18:01:13,946:INFO:Creating metrics dataframe
2024-05-09 18:01:13,946:INFO:Uploading results into container
2024-05-09 18:01:13,946:INFO:Uploading model into container now
2024-05-09 18:01:13,946:INFO:_master_model_container: 28
2024-05-09 18:01:13,946:INFO:_display_container: 3
2024-05-09 18:01:13,946:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-09 18:01:13,946:INFO:create_model() successfully completed......................................
2024-05-09 18:01:14,097:INFO:SubProcess create_model() end ==================================
2024-05-09 18:01:14,097:INFO:Creating metrics dataframe
2024-05-09 18:01:14,097:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-05-09 18:01:14,117:INFO:Initializing create_model()
2024-05-09 18:01:14,117:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:01:14,117:INFO:Checking exceptions
2024-05-09 18:01:14,117:INFO:Importing libraries
2024-05-09 18:01:14,117:INFO:Copying training dataset
2024-05-09 18:01:14,130:INFO:Defining folds
2024-05-09 18:01:14,130:INFO:Declaring metric variables
2024-05-09 18:01:14,130:INFO:Importing untrained model
2024-05-09 18:01:14,130:INFO:Declaring custom model
2024-05-09 18:01:14,130:INFO:SVM - Linear Kernel Imported successfully
2024-05-09 18:01:14,130:INFO:Cross validation set to False
2024-05-09 18:01:14,130:INFO:Fitting Model
2024-05-09 18:01:14,428:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-09 18:01:14,428:INFO:create_model() successfully completed......................................
2024-05-09 18:01:14,597:INFO:_master_model_container: 28
2024-05-09 18:01:14,597:INFO:_display_container: 3
2024-05-09 18:01:14,597:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-09 18:01:14,597:INFO:compare_models() successfully completed......................................
2024-05-09 18:01:14,667:INFO:gpu_param set to False
2024-05-09 18:01:14,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 18:01:14,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 18:01:14,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 18:01:14,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 18:01:14,854:INFO:Initializing create_model()
2024-05-09 18:01:14,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:01:14,854:INFO:Checking exceptions
2024-05-09 18:01:14,874:INFO:Importing libraries
2024-05-09 18:01:14,874:INFO:Copying training dataset
2024-05-09 18:01:14,888:INFO:Defining folds
2024-05-09 18:01:14,888:INFO:Declaring metric variables
2024-05-09 18:01:14,891:INFO:Importing untrained model
2024-05-09 18:01:14,894:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 18:01:14,901:INFO:Starting cross validation
2024-05-09 18:01:14,903:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:01:22,748:INFO:Calculating mean and std
2024-05-09 18:01:22,748:INFO:Creating metrics dataframe
2024-05-09 18:01:22,763:INFO:Finalizing model
2024-05-09 18:01:26,885:INFO:Uploading results into container
2024-05-09 18:01:26,886:INFO:Uploading model into container now
2024-05-09 18:01:26,895:INFO:_master_model_container: 29
2024-05-09 18:01:26,895:INFO:_display_container: 4
2024-05-09 18:01:26,895:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 18:01:26,895:INFO:create_model() successfully completed......................................
2024-05-09 18:01:27,089:INFO:Initializing tune_model()
2024-05-09 18:01:27,089:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 18:01:27,089:INFO:Checking exceptions
2024-05-09 18:01:27,122:INFO:Copying training dataset
2024-05-09 18:01:27,130:INFO:Checking base model
2024-05-09 18:01:27,130:INFO:Base model : Gradient Boosting Classifier
2024-05-09 18:01:27,132:INFO:Declaring metric variables
2024-05-09 18:01:27,132:INFO:Defining Hyperparameters
2024-05-09 18:01:27,273:INFO:Tuning with n_jobs=-1
2024-05-09 18:01:27,273:INFO:Initializing RandomizedSearchCV
2024-05-09 18:03:25,927:INFO:best_params: {'actual_estimator__subsample': 0.2, 'actual_estimator__n_estimators': 30, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__learning_rate': 0.4}
2024-05-09 18:03:25,928:INFO:Hyperparameter search completed
2024-05-09 18:03:25,928:INFO:SubProcess create_model() called ==================================
2024-05-09 18:03:25,928:INFO:Initializing create_model()
2024-05-09 18:03:25,929:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B86A2EFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.2, 'n_estimators': 30, 'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.05, 'max_features': 'sqrt', 'max_depth': 8, 'learning_rate': 0.4})
2024-05-09 18:03:25,929:INFO:Checking exceptions
2024-05-09 18:03:25,929:INFO:Importing libraries
2024-05-09 18:03:25,929:INFO:Copying training dataset
2024-05-09 18:03:25,942:INFO:Defining folds
2024-05-09 18:03:25,942:INFO:Declaring metric variables
2024-05-09 18:03:25,946:INFO:Importing untrained model
2024-05-09 18:03:25,946:INFO:Declaring custom model
2024-05-09 18:03:25,951:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 18:03:25,958:INFO:Starting cross validation
2024-05-09 18:03:25,960:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:03:27,644:INFO:Calculating mean and std
2024-05-09 18:03:27,645:INFO:Creating metrics dataframe
2024-05-09 18:03:27,650:INFO:Finalizing model
2024-05-09 18:03:28,261:INFO:Uploading results into container
2024-05-09 18:03:28,262:INFO:Uploading model into container now
2024-05-09 18:03:28,262:INFO:_master_model_container: 30
2024-05-09 18:03:28,262:INFO:_display_container: 5
2024-05-09 18:03:28,264:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 18:03:28,264:INFO:create_model() successfully completed......................................
2024-05-09 18:03:28,408:INFO:SubProcess create_model() end ==================================
2024-05-09 18:03:28,408:INFO:choose_better activated
2024-05-09 18:03:28,412:INFO:SubProcess create_model() called ==================================
2024-05-09 18:03:28,412:INFO:Initializing create_model()
2024-05-09 18:03:28,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:03:28,413:INFO:Checking exceptions
2024-05-09 18:03:28,416:INFO:Importing libraries
2024-05-09 18:03:28,416:INFO:Copying training dataset
2024-05-09 18:03:28,436:INFO:Defining folds
2024-05-09 18:03:28,436:INFO:Declaring metric variables
2024-05-09 18:03:28,436:INFO:Importing untrained model
2024-05-09 18:03:28,436:INFO:Declaring custom model
2024-05-09 18:03:28,437:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 18:03:28,437:INFO:Starting cross validation
2024-05-09 18:03:28,438:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 18:03:37,224:INFO:Calculating mean and std
2024-05-09 18:03:37,224:INFO:Creating metrics dataframe
2024-05-09 18:03:37,225:INFO:Finalizing model
2024-05-09 18:03:41,513:INFO:Uploading results into container
2024-05-09 18:03:41,513:INFO:Uploading model into container now
2024-05-09 18:03:41,515:INFO:_master_model_container: 31
2024-05-09 18:03:41,515:INFO:_display_container: 6
2024-05-09 18:03:41,515:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 18:03:41,515:INFO:create_model() successfully completed......................................
2024-05-09 18:03:41,659:INFO:SubProcess create_model() end ==================================
2024-05-09 18:03:41,659:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for F1 is 0.0592
2024-05-09 18:03:41,660:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for F1 is 0.1585
2024-05-09 18:03:41,661:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2024-05-09 18:03:41,661:INFO:choose_better completed
2024-05-09 18:03:41,672:INFO:_master_model_container: 31
2024-05-09 18:03:41,672:INFO:_display_container: 5
2024-05-09 18:03:41,672:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 18:03:41,672:INFO:tune_model() successfully completed......................................
2024-05-09 18:03:41,882:INFO:Initializing plot_model()
2024-05-09 18:03:41,882:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 18:03:41,882:INFO:Checking exceptions
2024-05-09 18:03:41,896:INFO:Preloading libraries
2024-05-09 18:03:41,902:INFO:Copying training dataset
2024-05-09 18:03:41,902:INFO:Plot type: auc
2024-05-09 18:03:42,212:INFO:Fitting Model
2024-05-09 18:03:42,214:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-05-09 18:03:42,215:INFO:Scoring test/hold-out set
2024-05-09 18:03:42,438:INFO:Visual Rendered Successfully
2024-05-09 18:03:42,589:INFO:plot_model() successfully completed......................................
2024-05-09 18:03:42,622:INFO:Initializing plot_model()
2024-05-09 18:03:42,622:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=pr, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 18:03:42,622:INFO:Checking exceptions
2024-05-09 18:03:42,629:INFO:Preloading libraries
2024-05-09 18:03:42,633:INFO:Copying training dataset
2024-05-09 18:03:42,633:INFO:Plot type: pr
2024-05-09 18:03:42,939:INFO:Fitting Model
2024-05-09 18:03:42,940:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-05-09 18:03:42,940:INFO:Scoring test/hold-out set
2024-05-09 18:03:43,137:INFO:Visual Rendered Successfully
2024-05-09 18:03:43,279:INFO:plot_model() successfully completed......................................
2024-05-09 18:03:43,299:INFO:Initializing plot_model()
2024-05-09 18:03:43,299:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 18:03:43,299:INFO:Checking exceptions
2024-05-09 18:03:43,310:INFO:Preloading libraries
2024-05-09 18:03:43,313:INFO:Copying training dataset
2024-05-09 18:03:43,313:INFO:Plot type: feature
2024-05-09 18:03:43,314:WARNING:No coef_ found. Trying feature_importances_
2024-05-09 18:03:43,498:INFO:Visual Rendered Successfully
2024-05-09 18:03:43,648:INFO:plot_model() successfully completed......................................
2024-05-09 18:03:43,669:INFO:Initializing plot_model()
2024-05-09 18:03:43,669:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-05-09 18:03:43,669:INFO:Checking exceptions
2024-05-09 18:03:43,677:INFO:Preloading libraries
2024-05-09 18:03:43,681:INFO:Copying training dataset
2024-05-09 18:03:43,682:INFO:Plot type: confusion_matrix
2024-05-09 18:03:43,988:INFO:Fitting Model
2024-05-09 18:03:43,989:WARNING:c:\Users\Marcelo\anaconda3\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-05-09 18:03:43,989:INFO:Scoring test/hold-out set
2024-05-09 18:03:44,121:INFO:Visual Rendered Successfully
2024-05-09 18:03:44,268:INFO:plot_model() successfully completed......................................
2024-05-09 18:03:44,300:INFO:Initializing evaluate_model()
2024-05-09 18:03:44,301:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-09 18:03:44,321:INFO:Initializing plot_model()
2024-05-09 18:03:44,321:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-05-09 18:03:44,321:INFO:Checking exceptions
2024-05-09 18:03:44,327:INFO:Preloading libraries
2024-05-09 18:03:44,330:INFO:Copying training dataset
2024-05-09 18:03:44,330:INFO:Plot type: pipeline
2024-05-09 18:03:44,451:INFO:Visual Rendered Successfully
2024-05-09 18:03:44,595:INFO:plot_model() successfully completed......................................
2024-05-09 18:03:44,627:INFO:Initializing predict_model()
2024-05-09 18:03:44,627:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026BFFB904A0>)
2024-05-09 18:03:44,627:INFO:Checking exceptions
2024-05-09 18:03:44,628:INFO:Preloading libraries
2024-05-09 18:03:45,112:INFO:Initializing finalize_model()
2024-05-09 18:03:45,112:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 18:03:45,112:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-09 18:03:45,120:INFO:Initializing create_model()
2024-05-09 18:03:45,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=8,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_samples_leaf=2,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=30, n_iter_no_change=None,
                           random_state=123, subsample=0.2, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 18:03:45,120:INFO:Checking exceptions
2024-05-09 18:03:45,122:INFO:Importing libraries
2024-05-09 18:03:45,122:INFO:Copying training dataset
2024-05-09 18:03:45,122:INFO:Defining folds
2024-05-09 18:03:45,122:INFO:Declaring metric variables
2024-05-09 18:03:45,124:INFO:Importing untrained model
2024-05-09 18:03:45,124:INFO:Declaring custom model
2024-05-09 18:03:45,124:INFO:Gradient Boosting Classifier Imported successfully
2024-05-09 18:03:45,126:INFO:Cross validation set to False
2024-05-09 18:03:45,126:INFO:Fitting Model
2024-05-09 18:03:45,992:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWra...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.4, loss='log_loss',
                                            max_depth=8, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=30,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=0.2,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-05-09 18:03:45,992:INFO:create_model() successfully completed......................................
2024-05-09 18:03:46,135:INFO:_master_model_container: 31
2024-05-09 18:03:46,135:INFO:_display_container: 6
2024-05-09 18:03:46,168:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWra...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.4, loss='log_loss',
                                            max_depth=8, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=30,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=0.2,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-05-09 18:03:46,168:INFO:finalize_model() successfully completed......................................
2024-05-09 18:03:46,441:INFO:Initializing predict_model()
2024-05-09 18:03:46,441:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWra...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.4, loss='log_loss',
                                            max_depth=8, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=30,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=0.2,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026BEFA6F6A0>)
2024-05-09 18:03:46,441:INFO:Checking exceptions
2024-05-09 18:03:46,441:INFO:Preloading libraries
2024-05-09 18:03:46,961:INFO:Initializing predict_model()
2024-05-09 18:03:46,961:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWra...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.4, loss='log_loss',
                                            max_depth=8, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=30,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=0.2,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026B896A0680>)
2024-05-09 18:03:46,961:INFO:Checking exceptions
2024-05-09 18:03:46,961:INFO:Preloading libraries
2024-05-09 18:03:46,964:INFO:Set up data.
2024-05-09 18:03:46,972:INFO:Set up index.
2024-05-09 18:03:47,362:INFO:Initializing save_model()
2024-05-09 18:03:47,362:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWra...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.4, loss='log_loss',
                                            max_depth=8, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=30,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=0.2,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), model_name=Final GBC Model 02Jun2022, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Marcelo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['tipo_renda', 'educacao',
                                             'estado_civil',
                                             'tipo_residencia'],
                                    transformer=OneHotEncoder(cols=['tipo_renda',
                                                                    'educacao',
                                                                    'estado_civil',
                                                                    'tipo_residencia'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-09 18:03:47,362:INFO:Adding model into prep_pipe
2024-05-09 18:03:47,362:WARNING:Only Model saved as it was a pipeline.
2024-05-09 18:03:47,375:INFO:Final GBC Model 02Jun2022.pkl saved in current working directory
2024-05-09 18:03:47,408:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWra...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.4, loss='log_loss',
                                            max_depth=8, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=30,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=0.2,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-05-09 18:03:47,408:INFO:save_model() successfully completed......................................
2024-05-09 18:03:47,605:INFO:Initializing load_model()
2024-05-09 18:03:47,605:INFO:load_model(model_name=Final GBC Model 02Jun2022, platform=None, authentication=None, verbose=True)
2024-05-09 18:03:47,676:INFO:Initializing predict_model()
2024-05-09 18:03:47,676:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B896A7D10>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Marcelo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.4, loss='log_loss',
                                            max_depth=8, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=30,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=0.2,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026BEA8A72E0>)
2024-05-09 18:03:47,676:INFO:Checking exceptions
2024-05-09 18:03:47,676:INFO:Preloading libraries
2024-05-09 18:03:47,678:INFO:Set up data.
2024-05-09 18:03:47,687:INFO:Set up index.
